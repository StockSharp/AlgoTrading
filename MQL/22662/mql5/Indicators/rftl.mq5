//+------------------------------------------------------------------+
//|                                                         RFTL.mq5 |
//|                                  Copyright 2002, Finware.ru Ltd. |
//|                                           http://www.finware.ru/ |
//+------------------------------------------------------------------+
//---- авторство индикатора
#property copyright "Copyright 2002, Finware.ru Ltd."
//---- ссылка на сайт автора
#property link      "http://www.finware.ru/"
//---- номер версии индикатора
#property version   "2.00"
//---- отрисовка индикатора в основном окне
#property indicator_chart_window
//---- для расчета и отрисовки индикатора использован один буфер
#property indicator_buffers 1
//---- использовано всего одно графическое построение
#property indicator_plots   1
//---- отрисовка индикатора в виде линии
#property indicator_type1   DRAW_LINE
//---- в качестве цвета линии индикатора использован аквамариновый цвет
#property indicator_color1  Aquamarine
//---- линия индикатора - непрерывная кривая
#property indicator_style1  STYLE_SOLID
//---- толщина линии индикатора равна 2
#property indicator_width1  2
//---- отображение метки индикатора
#property indicator_label1  "RFTL"

//---- входные параметры индикатора
input int RFTLShift=0; // Сдвиг мувинга по горизонтали в барах 

//---- объявление и инициализация переменной для хранения количества расчетных баров
int RFTLPeriod;

//---- объявление динамического массива, который в дальнейшем 
//---- будет использован в качестве индикаторного буфера
double ExtLineBuffer[];

//---- объявление и инициализация массива для коэффициентов цифрового фильтра
double RFTLTable[]=
  {
   -0.0025097319, +0.0513007762, +0.1142800493, +0.1699342860, +0.2025269304,
   +0.2025269304, +0.1699342860, +0.1142800493, +0.0513007762, -0.0025097319,
   -0.0353166244, -0.0433375629, -0.0311244617, -0.0088618137, +0.0120580088,
   +0.0233183633, +0.0221931304, +0.0115769653, -0.0022157966, -0.0126536111,
   -0.0157416029, -0.0113395830, -0.0025905610, +0.0059521459, +0.0105212252,
   +0.0096970755, +0.0046585685, -0.0017079230, -0.0063513565, -0.0074539350,
   -0.0050439973, -0.0007459678, +0.0032271474, +0.0051357867, +0.0044454862,
   +0.0018784961, -0.0011065767, -0.0031162862, -0.0033443253, -0.0022163335,
   +0.0002573669, +0.0003650790, +0.0060440751, +0.0018747783
  };
//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+  
void OnInit()
  {
//---- превращение динамического массива ExtLineBuffer в индикаторный буфер
   SetIndexBuffer(0,ExtLineBuffer,INDICATOR_DATA);
//---- осуществление сдвига Фатла по горизонтали на RFTLShift
   PlotIndexSetInteger(0,PLOT_SHIFT,RFTLShift);
//---- осуществление сдвига начала отсчета отрисовки индикатора
   PlotIndexSetInteger(0,PLOT_DRAW_BEGIN,RFTLPeriod);
//---- инициализации переменной для короткого имени индикатора
   string shortname;
   StringConcatenate(shortname,"RFTL(",RFTLShift,")");
//--- создание метки для отображения в DataWindow
   PlotIndexSetString(0,PLOT_LABEL,shortname);
//--- создание имени для отображения в отдельном подокне и во всплывающей подсказке
   IndicatorSetString(INDICATOR_SHORTNAME,shortname);
//--- определение точности отображения значений индикатора
   IndicatorSetInteger(INDICATOR_DIGITS,_Digits+1);
//--- получение длины цифрового фильтра
   RFTLPeriod=ArraySize(RFTLTable);
//---- осуществление сдвига начала отсчета отрисовки индикатора 
   PlotIndexSetInteger(0,PLOT_DRAW_BEGIN,RFTLPeriod);
//----
  }
//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(
                const int rates_total,    // количество истории в барах на текущем тике
                const int prev_calculated,// количество истории в барах на предыдущем тике
                const int begin,          // номер начала достоверного отсчета баров
                const double &price[]     // ценовой массив для расчета индикатора
                )
  { 
//---- проверка количества баров на достаточность для расчета
   if(rates_total<RFTLPeriod-1+begin)
      return(0);

//---- объявления локальных переменных 
   int first,bar,iii;
   double RFTL;

//---- расчет стартового номера first для цикла пересчета баров
   if(prev_calculated>rates_total || prev_calculated<=0) // проверка на первый старт расчета индикатора
     {
      first=RFTLPeriod-1+begin; // стартовый номер для расчета всех баров
      //--- увеличим позицию начала данных на begin баров, вследствие расчетов на данных другого индикатора
      if(begin>0)
         PlotIndexSetInteger(0,PLOT_DRAW_BEGIN,begin+RFTLPeriod);
     }
   else first=prev_calculated-1; // стартовый номер для расчета новых баров

//---- основной цикл расчета индикатора
   for(bar=first; bar<rates_total; bar++)
     {
      //---- формула для вычисления цифрового фильтра
      RFTL=0.0;
      for(iii=0; iii<RFTLPeriod; iii++)
         RFTL+=RFTLTable[iii] *price[bar-iii];

      //---- Инициализация ячейки индикаторного буфера полученным значением RFTL
      ExtLineBuffer[bar]=RFTL;
     }
//----     
   return(rates_total);
  }
//+------------------------------------------------------------------+
