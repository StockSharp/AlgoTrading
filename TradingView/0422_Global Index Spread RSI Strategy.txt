//@version=5
strategy("ES Mini Global Index Spread Strategy", overlay=false, initial_capital=20000, pyramiding=0, commission_type=strategy.commission.cash_per_contract, commission_value=0.05, slippage=1)

// === Inputs ===
globalSymbol = input.string("AMEX:URTH", title="Global Index Symbol")
rsiLength = input.int(2, title="RSI Length", minval=1)
rsiOversoldThreshold = input.int(35, title="RSI Oversold Threshold", minval=1, maxval=100)
rsiOverboughtThreshold = input.int(78, title="RSI Overbought Threshold", minval=1, maxval=100)

// === Data Retrieval ===
spy_close = request.security("CME_MINI:MES1!", "D", close, lookahead=barmerge.lookahead_off)
globalIndex = request.security(globalSymbol, "D", close)
spread = ((close - globalIndex) / globalIndex) * 100
rsiSpread = ta.rsi(spread, rsiLength)

// === Trading Logic ===
longCondition = rsiSpread < rsiOversoldThreshold
exitLongCondition = rsiSpread > rsiOverboughtThreshold

// === Strategy Execution ===
if longCondition
    strategy.entry("Buy", strategy.long)
if exitLongCondition
    strategy.close("Buy")

// Hintergrundfarbe anzeigen, wenn eine Position offen ist
bgcolor(strategy.opentrades > 0 ? color.rgb(0, 0, 255, 0) : na)

// === Alarm-Funktion ===
// Long-Signal-Alarm
if (longCondition)
    alert("Entry Long: ES Mini Global Index " + str.tostring(rsiOversoldThreshold) + ").", alert.freq_once_per_bar)

// Exit-Long-Signal-Alarm
if (exitLongCondition)
    alert("Close Long : ES Mini Global Index " + str.tostring(rsiOverboughtThreshold) + ").", alert.freq_once_per_bar)

// Calculate and plot the ongoing profit or loss for each open trade as a line in percentage
var float entry_price = na
var float current_profit_percent = na

// Set entry price on trade entry and calculate current profit/loss percentage when a trade is open
if (strategy.opentrades > 0)
    // Capture the entry price for the current open trade
    entry_price := na(entry_price) ? spy_close : entry_price
    // Calculate profit or loss percentage based on the current close price
    current_profit_percent := ((spy_close - entry_price) / entry_price) * 100
else
    entry_price := na
    current_profit_percent := na

// Plot the real-time profit or loss percentage as a line
plot(current_profit_percent, style=plot.style_linebr, color=(current_profit_percent >= 0 ? color.green : color.red), title="Ongoing Trade Profit/Loss (%)")