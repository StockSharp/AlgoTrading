//@version=6
// © PineIndicators

strategy("RCI Strategy [PineIndicators]",
     overlay = false,
     commission_value = 0.01,
     default_qty_type = strategy.percent_of_equity,
     default_qty_value = 100,
     slippage = 2,
     max_labels_count = 500,
     max_lines_count  = 500,
     max_boxes_count  = 500)

// ───── Inputs ────────────────────────────────────
src     = input.source(close, "RCI Source")
rciLen  = input.int(10, "RCI Length")
maType  = input.string("SMA", "MA Type",
           options = ["None","SMA","EMA","SMMA (RMA)","WMA","VWMA"])
maLen   = input.int(14, "MA Length")
dirOpt  = input.string("Long & Short","Trade Direction",
           options = ["Long & Short","Long Only","Short Only"])

// ───── RCI + MA (Pane) ─────────────────────────────
rci = ta.rci(src, rciLen)

ma(series,l,t)=>
    switch t
        "SMA"=>ta.sma(series,l)
        "EMA"=>ta.ema(series,l)
        "SMMA (RMA)"=>ta.rma(series,l)
        "WMA"=>ta.wma(series,l)
        "VWMA"=>ta.vwma(series,l)

rciMA = maType!="None" ? ma(rci,maLen,maType):na

plot(rci,"RCI",color.blue,display=display.pane)
plot(rciMA,"RCI-MA",color.yellow,display=display.pane)
plot(0,"Zero",color.gray,display=display.pane)
plot(80,"+80",color.green,display=display.pane)
plot(-80,"-80",color.red,display=display.pane)

// ───── Logic ────────────────────────────────
longCond  = ta.crossover(rci,rciMA)
shortCond = ta.crossunder(rci,rciMA)
canLong   = dirOpt!="Short Only"
canShort  = dirOpt!="Long Only"

if longCond
    if canLong
        strategy.entry("L",strategy.long)
    strategy.close("S")

if shortCond
    if canShort
        strategy.entry("S",strategy.short)
    strategy.close("L")

// ───── Colors ───────────────────────
green   = color.new(#0097a7,  0)
green90 = color.new(#0097a7, 90)
red     = color.new(#ff195f,  0)
red90   = color.new(#ff195f, 90)

// Labels
if strategy.position_size>strategy.position_size[1]
    label.new(bar_index,low*0.99,"▲",
              xloc=xloc.bar_index,yloc=yloc.price,
              textcolor=green,color=green90,
              style=label.style_text_outline,size=size.normal,
              force_overlay=true)
    label.new(bar_index,low*0.99,"Buy",
              xloc=xloc.bar_index,yloc=yloc.price,
              textcolor=green,color=green90,
              style=label.style_label_up,size=size.tiny,
              force_overlay=true)

if strategy.position_size<strategy.position_size[1]
    label.new(bar_index,high*1.01,"▼",
              xloc=xloc.bar_index,yloc=yloc.price,
              textcolor=red,color=red90,
              style=label.style_text_outline,size=size.normal,
              force_overlay=true)
    label.new(bar_index,high*1.01,"Close",
              xloc=xloc.bar_index,yloc=yloc.price,
              textcolor=red,color=red90,
              style=label.style_label_down,size=size.tiny,
              force_overlay=true)

// ───── Trade-Boxes ─────────────────────────────────
var float entryPrice = na
var int   entryBar   = na
var bool  entryLong  = false

// Entries
if strategy.position_size!=0 and strategy.position_size[1]==0
    entryPrice := strategy.position_avg_price
    entryBar   := bar_index
    entryLong  := strategy.position_size>0

// Exits
if strategy.position_size==0 and strategy.position_size[1]!=0
    exitBar   = bar_index
    rightIdx  = exitBar-1                       // Balken davor
    exitClose = close[1]                        // Close der Vor-Bar

    // Fallback
    if rightIdx < entryBar
        rightIdx  := exitBar
        exitClose := close

    bool win = entryLong ? exitClose>entryPrice
                         : exitClose<entryPrice
    col  = win ? green : red

    top    = math.max(entryPrice,exitClose)
    bottom = math.min(entryPrice,exitClose)

    pTL = chart.point.from_index(entryBar ,top)
    pBR = chart.point.from_index(rightIdx,bottom)

    box.new(pTL,pBR,border_color=color.new(color.black,100), border_width=1,bgcolor=color.new(col,80),force_overlay=true)

    line.new(entryBar,top,   rightIdx,top,xloc=xloc.bar_index,color=col,width=1,extend=extend.none,force_overlay=true)
    line.new(entryBar,bottom,rightIdx,bottom,xloc=xloc.bar_index,color=col,width=1,extend=extend.none,force_overlay=true)