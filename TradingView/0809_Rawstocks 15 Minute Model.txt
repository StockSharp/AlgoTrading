//@version=5
strategy("Rawstocks 15-Minute Model", overlay=true, margin_long=100, margin_short=100, pyramiding=0)

// ===== TIME CONTROL ===== (UTC-4 = Eastern Time)
startHour = input(9, "Start Hour (ET)")
startMin = input(30, "Start Minute")
entryCutoffHour = input(16, "Last Entry Hour (ET)") // 4:00 PM
entryCutoffMin = input(0, "Last Entry Minute")
closeHour = input(16, "Force Close Hour (ET)") // 4:30 PM
closeMin = input(30, "Force Close Minute")

// Define session in UTC-4 (ET)
sessionStart = timestamp("UTC-4", year, month, dayofmonth, startHour, startMin)
entryCutoffTime = timestamp("UTC-4", year, month, dayofmonth, entryCutoffHour, entryCutoffMin)
forceCloseTime = timestamp("UTC-4", year, month, dayofmonth, closeHour, closeMin)

// ===== CORE STRATEGY =====
// Inputs
fib1 = input.float(61.8, "Fib Level (%)")
minSwingSize = input.float(1.0, "Min Swing Size (%)") / 100
rrRatio = input.float(2.0, "Risk/Reward")

// Swing Detection
swingHigh = ta.highest(high, 5) == high[2] and (high[2] - low[2]) >= ta.atr(14) * minSwingSize
swingLow = ta.lowest(low, 5) == low[2] and (high[2] - low[2]) >= ta.atr(14) * minSwingSize

// Order Blocks
var float bullOB = na
var float bearOB = na
if swingLow
    bullOB := low[2]
if swingHigh
    bearOB := high[2]

// Fib Levels
var float swingTop = na
var float swingBot = na
if swingHigh
    swingTop := high[2]
if swingLow
    swingBot := low[2]

fib618 = swingBot + (swingTop - swingBot) * (fib1/100)
fib79 = swingBot + (swingTop - swingBot) * 0.79

// Entry Conditions
longCond = not na(bullOB) and (low <= bullOB) and (close >= fib618 or close >= fib79)
shortCond = not na(bearOB) and (high >= bearOB) and (close <= fib618 or close <= fib79)

// Time Filter - No entries after 4:00 PM
validEntryTime = (time >= sessionStart) and (time <= entryCutoffTime)

// ===== EXECUTION =====
// Entries (only before 4:00 PM)
if (longCond and validEntryTime)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=low - ta.atr(14), limit=close + (ta.atr(14) * rrRatio))

if (shortCond and validEntryTime)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=high + ta.atr(14), limit=close - (ta.atr(14) * rrRatio))

// Force Close at 4:30 PM ET
var bool forceClosedToday = false
if (time >= forceCloseTime and time < forceCloseTime + 60000) and (not forceClosedToday)
    strategy.close_all("EOD Close @ 4:30PM")
    forceClosedToday := true

// Reset daily flag
if dayofmonth != dayofmonth[1]
    forceClosedToday := false

// ===== VISUALS =====
// Signal Triangles (gray if after entry cutoff)
plotshape(series=longCond, title="Long Signal", style=shape.triangleup, location=location.belowbar,
     color=validEntryTime ? color.new(color.green, 0) : color.new(color.gray, 0), size=size.small)
plotshape(series=shortCond, title="Short Signal", style=shape.triangledown, location=location.abovebar,
     color=validEntryTime ? color.new(color.red, 0) : color.new(color.gray, 0), size=size.small)

// Execution Markers
var float longEntryPrice = na
var float shortEntryPrice = na

if (strategy.position_size > 0 and strategy.position_size[1] <= 0)
    longEntryPrice := close
if (strategy.position_size < 0 and strategy.position_size[1] >= 0)
    shortEntryPrice := close

plot(series=longEntryPrice, title="Long Entry", style=plot.style_circles, linewidth=3, color=color.new(color.green, 0))
plot(series=shortEntryPrice, title="Short Entry", style=plot.style_circles, linewidth=3, color=color.new(color.red, 0))

// Force Close Marker
if (time >= forceCloseTime and time < forceCloseTime + 60000)
    label.new(
         bar_index,
         high,
         "4:30 PM Close",
         style=label.style_label_down,
         color=color.red,
         textcolor=color.white
     )