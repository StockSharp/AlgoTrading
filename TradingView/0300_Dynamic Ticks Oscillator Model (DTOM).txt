//@version=6
strategy("Dynamic Ticks Oscillator Model (DTOM)", overlay=false)

// === Inputs ===
downTicksSymbol = input.symbol("USI:DNTKS.NY", title="NYSE Down Ticks Symbol")  // NYSE Down Ticks Symbol
rocLength = input.int(5, title="Down Ticks ROC Length", minval=1)  // Lookback period for ROC calculation
volatilityLookback = input.int(24, title="Down Ticks Volatility Lookback", minval=1)  // Lookback period for standard deviation calculation
entryStdDevMultiplier = input.float(1.6, title="Entry Standard Deviation Multiplier", minval=0.1, step=0.1)  // Multiplier for long entry threshold
exitStdDevMultiplier = input.float(1.4, title="Exit Standard Deviation Multiplier", minval=0.1, step=0.1)  // Multiplier for exit threshold

// === Data Loading ===
downTicks = request.security(downTicksSymbol, "D", close, gaps=barmerge.gaps_on)  // NYSE Down Ticks daily data

// === ROC Calculation ===
downTicksROC = ta.roc(downTicks, rocLength)

// === Dynamic Thresholds Based on Standard Deviation ===
downTicksStdDev = ta.stdev(downTicksROC, volatilityLookback)  // Standard deviation of ROC
entryThreshold = -downTicksStdDev * entryStdDevMultiplier  // Entry threshold based on standard deviation
exitThreshold = downTicksStdDev * exitStdDevMultiplier  // Exit threshold based on standard deviation

// === Conditions ===
longCondition = downTicksROC < entryThreshold  // Enter long when ROC crosses below the entry threshold
exitCondition = downTicksROC > exitThreshold  // Exit position when ROC crosses above the exit threshold

// === Signals ===
if (longCondition)
    strategy.entry("Long", strategy.long)

if (exitCondition)
    strategy.close("Long")

// === Background Highlight ===
bgColor = strategy.position_size > 0 ? color.new(color.rgb(0, 0, 255), 50) : na  // Blue background if a position is open
bgcolor(bgColor)

// === Plots ===
plot(downTicksROC, title="ROC (Down Ticks)", color=color.rgb(255, 255, 255), linewidth=1)  // ROC line in white
plot(entryThreshold, title="Entry Threshold (Dynamic)", color=color.rgb(0, 255, 0), linewidth=2)  // Entry threshold in green
plot(exitThreshold, title="Exit Threshold (Dynamic)", color=color.rgb(255, 0, 0), linewidth=2)  // Exit threshold in red

// === Horizontal Line for Reference ===
hline(0, title="Zero Line", color=color.rgb(128, 128, 128), linewidth=1)  // Zero line in gray