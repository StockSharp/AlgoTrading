//@version=5
strategy("Daily Breakout + Daily Shadow By Rouro", overlay=true, default_qty_type=strategy.fixed, default_qty_value=1)

// === 1) INPUTS ===
slType        = input.string("Body",    "Tipo de SL",            options=["Body","Fixed Pips","RR"])
slPips        = input.int(10,          "SL fijo (pips)",        minval=1)
slRr          = input.float(2.0,       "RR para SL",            step=0.1)
useSecSL      = input.bool(false,      "Activar SL de seguridad")
secPips       = input.int(20,          "SL seguridad (pips)",   minval=1)
tpMode        = input.string("Wick",   "Tipo de TP",            options=["Fixed Pips","Wick","Partial"])
tpPips        = input.int(10,          "TP fijo (pips)",        minval=1)
partialTp2    = input.string("RR",     "Modo TP2 parcial",      options=["RR","Close of Day"])
partialRr     = input.float(2.0,       "RR para TP2",           step=0.1)
moveToBE      = input.bool(true,       "Mover SL a BE tras TP1")
partialPct    = input.int(50,          "Pct a cerrar en TP1",   minval=1, maxval=99)
bullBodyColor = input.color(color.new(color.green,0), "Color Cuerpo Alcista")
bearBodyColor = input.color(color.new(color.red,  0), "Color Cuerpo Bajista")
bullWickColor = input.color(color.new(color.green,0), "Color Mechas Alcista")
bearWickColor = input.color(color.new(color.red,  0), "Color Mechas Bajista")
bgAlpha       = input.int(80,          "Transparencia Cuerpo (0‚Äì100)", minval=0, maxval=100)

// === 2) DATOS DIARIOS ===
[dOpen, dHigh, dLow, dClose, dTime] = request.security(syminfo.tickerid, "D", [open, high, low, close, time], lookahead=barmerge.lookahead_off)

// === 3) CUERPOS VELA AYER & ANTEAYER ===
b1High = math.max(dOpen[1], dClose[1])
b1Low  = math.min(dOpen[1], dClose[1])
b2High = math.max(dOpen[2], dClose[2])
b2Low  = math.min(dOpen[2], dClose[2])

// === 4) NUEVO D√çA ===
newDaily = ta.change(time("D")) != 0

// === 5) DIBUJAR SOMBRA VELA DIARIA ===
msPerDay = 24 * 60 * 60 * 1000
if newDaily
    dayStart = time("D")[1]
    dayEnd   = dayStart + msPerDay
    o1 = dOpen[1]
    h1 = dHigh[1]
    l1 = dLow[1]
    c1 = dClose[1]
    topBody    = math.max(o1, c1)
    bottomBody = math.min(o1, c1)
    centerX    = dayStart + msPerDay/2
    isBull     = c1 >= o1
    bodyCol    = isBull ? bullBodyColor : bearBodyColor
    wickCol    = isBull ? bullWickColor   : bearWickColor
    box.new(dayStart, topBody, dayEnd, bottomBody, xloc=xloc.bar_time, border_width=1, border_color=bodyCol, bgcolor=color.new(bodyCol, 100 - bgAlpha))
    line.new(centerX, topBody,    centerX, h1, xloc=xloc.bar_time, color=wickCol, width=1)
    line.new(centerX, bottomBody, centerX, l1, xloc=xloc.bar_time, color=wickCol, width=1)

// === 6) CIERRE POSICIONES AL NUEVO D√çA ===
if newDaily and strategy.position_size != 0
    strategy.close_all(comment="Close EoD")

// === 7) ENTRADAS & SALIDAS ===
if newDaily and strategy.position_size == 0
    longCond  = dClose[1] > b2High and dOpen[1] < b2High
    shortCond = dClose[1] < b2Low  and dOpen[1] > b2Low
    if longCond
        strategy.entry("Long", strategy.long)
        entryP = open
        slVal  = slType=="Body" ? b1Low : slType=="Fixed Pips" ? entryP - slPips*syminfo.mintick : entryP - (dHigh[1] - entryP)/slRr
        if useSecSL
            secSL = entryP - secPips*syminfo.mintick
            slVal := math.max(slVal, secSL)
        if tpMode=="Fixed Pips"
            strategy.exit("Exit Long", from_entry="Long", limit=entryP+tpPips*syminfo.mintick, stop=slVal)
        else if tpMode=="Wick"
            strategy.exit("Exit Long", from_entry="Long", limit=dHigh[1], stop=slVal)
        else
            tp1 = dHigh[1]
            strategy.exit("TP1 Long", from_entry="Long", limit=tp1, stop=na, qty_percent=partialPct)
            sl2 = moveToBE ? entryP : slVal
            tp2 = partialTp2=="RR" ? tp1 + (tp1 - entryP)*partialRr : dClose[1]
            strategy.exit("TP2 Long", from_entry="Long", limit=tp2, stop=sl2, qty_percent=100-partialPct)
    else if shortCond
        strategy.entry("Short", strategy.short)
        entryP = open
        slVal  = slType=="Body" ? b1High : slType=="Fixed Pips" ? entryP + slPips*syminfo.mintick : entryP + (entryP - dLow[1])/slRr
        if useSecSL
            secSL = entryP + secPips*syminfo.mintick
            slVal := math.min(slVal, secSL)
        if tpMode=="Fixed Pips"
            strategy.exit("Exit Short", from_entry="Short", limit=entryP-tpPips*syminfo.mintick, stop=slVal)
        else if tpMode=="Wick"
            strategy.exit("Exit Short", from_entry="Short", limit=dLow[1], stop=slVal)
        else
            tp1 = dLow[1]
            strategy.exit("TP1 Short", from_entry="Short", limit=tp1, stop=na, qty_percent=partialPct)
            sl2 = moveToBE ? entryP : slVal
            tp2 = partialTp2=="RR" ? tp1 - (entryP - tp1)*partialRr : dClose[1]
            strategy.exit("TP2 Short", from_entry="Short", limit=tp2, stop=sl2, qty_percent=100-partialPct)

// === 8) TABLA DE M√âTRICAS (5√ó5 filas) ===
wins      = strategy.wintrades
losses    = strategy.losstrades
totalT    = wins + losses
winPctStr = totalT>0 ? str.format("{0,number,0.0}%", wins/totalT*100) : "-"
pf        = strategy.grossloss==0 ? na : strategy.grossprofit/math.abs(strategy.grossloss)
pfStr     = na(pf) ? "-" : str.tostring(math.round(pf*100)/100)

var table stats = table.new(position.top_right, 5, 5, border_color=color.gray)
if barstate.islastconfirmedhistory
    // fila 0: encabezados
    table.cell(stats, 0, 0, "Inicio",       text_color=color.yellow)
    table.cell(stats, 0, 1, "‚úÖ Ganadoras", text_color=color.green)
    table.cell(stats, 0, 2, "‚ùå Perdedoras",text_color=color.red)
    table.cell(stats, 0, 3, "üìä Total",    text_color=color.purple)
    table.cell(stats, 0, 4, "% Acierto",   text_color=color.yellow)
    // fila 1: valores
    startStr = str.format("{0,date,yyyy-MM-dd}", dTime[1])
    table.cell(stats, 1, 0, startStr,        text_color=color.white)
    table.cell(stats, 1, 1, str.tostring(wins),    text_color=color.green)
    table.cell(stats, 1, 2, str.tostring(losses),  text_color=color.red)
    table.cell(stats, 1, 3, str.tostring(totalT),  text_color=color.purple)
    table.cell(stats, 1, 4, winPctStr,              text_color=color.white)
    // fila 2: Profit Factor
    table.cell(stats, 2, 0, "PF",       text_color=color.yellow)
    table.cell(stats, 2, 1, pfStr,      text_color=color.white)
    // filas 3 y 4 reservadas vac√≠as
    for row = 3 to 4
        for col = 0 to 4
            table.cell(stats, row, col, "", text_color=color.white)