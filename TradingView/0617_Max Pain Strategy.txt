//@version=5
strategy("YM Max Pain Strategy with Visualization", overlay=true, precision=1, initial_capital=25000, currency=currency.USD, slippage=1, commission_type=strategy.commission.cash_per_contract, commission_value=0.01)

// === Inputs ===
length = input.int(70, title="Lookback Period", minval=1, maxval=500, tooltip="Lookback period for volume analysis", step=1)  // Lookback period for volume analysis
volMultiplier = input.float(1.0, title="Volume Multiplier", minval=1.0, maxval=5.0, tooltip="Threshold multiplier for volume", step=0.1)  // Threshold multiplier for volume
priceMultiplier = input.float(0.029, title="Price Change Multiplier", minval=0.01, maxval=0.1, tooltip="Threshold for price movement", step=0.001)  // Threshold for price movement
stopLossMultiplier = input.float(2.4, title="Stop-Loss Multiplier", minval=1.0, tooltip="Multiplier for volatility-based stop-loss", step=0.1)
vixThreshold = input.float(44.0, title="VIX Threshold", minval=0.0, tooltip="VIX level below which trading is allowed")  // Volatility filter threshold

// === Volatility Data ===
// Request VIX data (TVC:VIX)
vixClose = request.security("TVC:VIX", "D", close, lookahead=barmerge.lookahead_off)

// === Calculations ===
// Average volume and price change
averageVolume = ta.sma(volume, length)  // Average volume over the period
priceChange = math.abs(close - close[length])  // Price change over the 'length' period

// Volatility calculation
volatility = ta.stdev(close, length)  // Standard deviation of close prices over the period
stopLossDistance = stopLossMultiplier * volatility  // Volatility-based stop-loss level

// Calculate the pain zone condition (potential delta-hedging areas)
painZoneCondition = (volume > averageVolume * volMultiplier) and (priceChange > close[length] * priceMultiplier)

// Volatility filter condition
volatilityCondition = vixClose < vixThreshold

// === Strategy ===
// Define the number of periods the position will be held
holdPeriods = input.int(8, title="Position Hold Duration (in periods)", minval=1)

// Long position condition
longCondition = painZoneCondition and volatilityCondition  // Add volatility filter to entry condition

// Position entry
if (longCondition)
    strategy.entry("Long", strategy.long)

// Volatility-based stop-loss
if (strategy.position_size > 0)
    stopPrice = strategy.position_avg_price - stopLossDistance
    strategy.exit("Volatility Stop", "Long", stop=stopPrice)

// Close position after the specified number of periods
if (strategy.opentrades > 0)
    if (bar_index >= strategy.opentrades.entry_bar_index(0) + holdPeriods)
        strategy.close("Long")

// === Visualization ===

// Max Pain Zone Highlight
plotshape(painZoneCondition and volatilityCondition, title="Max Pain Zone (Filtered)", style=shape.triangleup, location=location.bottom, color=color.rgb(40, 210, 90), size=size.tiny)  // Red triangle for max pain zone
bgcolor(painZoneCondition and volatilityCondition ? color.new(color.rgb(50, 80, 150), 30) : na)  // Red background for max pain zone