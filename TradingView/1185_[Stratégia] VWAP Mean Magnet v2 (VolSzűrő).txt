// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Combined VWAP-RSI Strategy with Volume Filter

//@version=5
strategy("[Stratégia] VWAP Mean Magnet v2 (VolSzűrő)", overlay=true, shorttitle="VWAP+RSI+Vol")

// === Csoportok Definiálása ===
string grp_ind = "Indikátor Beállítások"
string grp_risk = "Kockázatkezelés"
string grp_filter = "Szűrő Beállítások"

// === Indikátor Beállítások ===
length = input(60, title="VWAP Hossz", group=grp_ind)
rsi_length = input(14, title="RSI Hossz", group=grp_ind)
rsi_overbought = input(65, title="RSI Túlvett Szint", group=grp_ind)
rsi_oversold = input(25, title="RSI Túladott Szint", group=grp_ind)
source = input(close, title="Forrásár", group=grp_ind)

// === Kockázatkezelés ===
stop_loss_pct = input.float(0.5, title="Stop Loss Százalék", step = 0.1, group=grp_risk) / 100

// === Szűrő Beállítások (ÚJ RÉSZ) ===
vol_filter_enabled = input.bool(true, title="Volumen Szűrő Aktív?", group=grp_filter)
vol_lookback = input.int(20, title="Volumen Átlag Hossz", group=grp_filter)
vol_multiplier = input.float(3.0, title="Volumen Szorzó", step=0.5, group=grp_filter)

// === VWAP és Súlyozott Eltérés Számítások ===
pine_vwmean(x, y) =>
    d_sum = 0.0
    w_sum = 0.0
    for i = 0 to y - 1
        d_sum += volume[i] * x[i]
        w_sum += volume[i]
    d_sum / w_sum

pine_vwavdev(x, y, mean) =>
    d_sum = 0.0
    w_sum = 0.0
    for i = 0 to y - 1
        d_sum += volume[i] * math.abs(x[i] - mean)
        w_sum += volume[i]
    d_sum / w_sum

vwmean = pine_vwmean(source, length)
dev = pine_vwavdev(source, length, vwmean)

// === Sávok és Indikátorok Definíciója ===
basis = vwmean
upper_dev_2 = vwmean + dev * 2
lower_dev_2 = vwmean - dev * 2
rsi = ta.rsi(source, rsi_length)

// === Volumen Szűrő Logikája (ÚJ RÉSZ) ===
avg_volume = ta.sma(volume, vol_lookback)
is_extreme_volume = volume > avg_volume * vol_multiplier

// === Sávok Kirajzolása ===
basis_plot = plot(basis, color=color.new(#b7b7b7, 40), title='VWAP Bázis (Take-Profit)')
upper_plot = plot(upper_dev_2, color=color.new(#B20000, 0), title='Felső Sáv')
lower_plot = plot(lower_dev_2, color=color.new(#008000, 0), title='Alsó Sáv')
fill(upper_plot, basis_plot, color=color.new(#FF4D4D, 85), title='Felső (Short) Zóna')
fill(lower_plot, basis_plot, color=color.new(#00B300, 85), title='Alsó (Long) Zóna')

// === Stratégia Logikája (MÓDOSÍTVA) ===
// A szűrő feltétel: a szűrő ki van kapcsolva VAGY nincs extrém volumen
filter_condition = not vol_filter_enabled or not is_extreme_volume

// Long Belépési Feltétel
long_condition = ta.crossunder(source, lower_dev_2) and rsi < rsi_oversold and filter_condition

// Short Belépési Feltétel
short_condition = ta.crossover(source, upper_dev_2) and rsi > rsi_overbought and filter_condition

// === Megbízások Elhelyezése ===
if (long_condition)
    strategy.entry("Long", strategy.long)

if (short_condition)
    strategy.entry("Short", strategy.short)

// === Kilépési Megbízások ===
long_stop_price = strategy.position_avg_price * (1 - stop_loss_pct)
long_profit_price = basis
short_stop_price = strategy.position_avg_price * (1 + stop_loss_pct)
short_profit_price = basis

if strategy.position_size > 0
    strategy.exit("Long Kilépés", from_entry="Long", stop=long_stop_price, limit=long_profit_price)

if strategy.position_size < 0
    strategy.exit("Short Kilépés", from_entry="Short", stop=short_stop_price, limit=short_profit_price)