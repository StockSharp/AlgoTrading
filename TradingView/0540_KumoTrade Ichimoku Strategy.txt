// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © mata22tr

//@version=5
strategy(
     "KumoTrade Ichimoku Strategy",
     overlay=true,
     initial_capital=10000,
     currency=currency.USDT,
     default_qty_type=strategy.percent_of_equity,
     default_qty_value=15,
     commission_type=strategy.commission.percent,
     commission_value=0.05,
     margin_long=10,
     margin_short=10)

//Time Range
startTime   = input.time(title="Start Filter", defval=timestamp("1 May 2024 22:00 +0000"), group="Time Filter", tooltip="Start date & time to begin searching for setups")
endTime     = input.time(title="End Filter", defval=timestamp("1 Jan 2025 19:30 +0000"), group="Time Filter", tooltip="End date & time to stop searching for setups")
// Define date filter

dateFilter(int st, int et) => time >= st and time <= et
// Define custom security function
f_sec(_market, _res, _exp) => request.security(_market, _res, _exp[barstate.isrealtime ? 1 : 0])[barstate.isrealtime ? 0 : 1]

// ICHIMOKU Lines
//  INPUTS
tenkanSenPeriods = input.int(9, minval=1, title="Tenkan-sen")
kijunSenPeriods = input.int(26, minval=1, title="Kijun-sen") // default 26 - 22 better 1-15M charts
senkouBPeriod = input.int(52, minval=1, title="Senkou span B")
displacement = input.int(26, minval=1, title="Chikou span")

//inputs
//***Stochastic
periodK = input.int(70, title="K", minval=1)
periodD = input.int(15, title="D", minval=1 )
smoothK = input.int(1, title="Smooth", minval=1 )
upTHR = input.int(80, title="Up Threshold", minval=0 )
downTHR = input.int(20, title="Down Threshold", minval=0 )
k = ta.sma(ta.stoch(close, high, low, periodK), smoothK)
stochD = ta.sma(k, periodD)

plotchar(stochD,  char="", title = "Stoch D")
// ICHIMAKU CORE
donchian(len) => math.avg(ta.lowest(len), ta.highest(len))
tenkanSen = donchian(tenkanSenPeriods)
kijunSen = donchian(kijunSenPeriods)
senkouA = math.avg(tenkanSen, kijunSen)
senkouB = donchian(senkouBPeriod)

//HTF kijunSen
htfKijun = f_sec(syminfo.tickerid, "240", kijunSen )

// Regime Filter for long positions
biasBull = true

// Other Indicators
float   atrValue    = ta.atr(5)

// Volume Indicator Values
volumeAvg = ta.ema(volume, 25)
volumeAvgCross = ta.crossover(volume, volumeAvg)
isVolumeHigh = volume > (volumeAvg * 1.25)
isVolumeLow = volume < volumeAvg

// Calculate Vol Velocity
highLowDiffArray = array.new_float(0)
for i=0 to 26
    array.push(highLowDiffArray, high[i]-low[i])
avgHighLowDiffArray=array.avg(highLowDiffArray)

velocity = 0
if barstate.isconfirmed
    velocity:=array.get(highLowDiffArray, 0)<avgHighLowDiffArray? 0 : 1

// Calculate Senkou Span A 25 bars back
senkouA_current = math.avg(tenkanSen[25], kijunSen[25])
// Calculate Senkou Span B 25 bars back
senkouB_current = math.avg(ta.highest(senkouBPeriod)[25], ta.lowest(senkouBPeriod)[25])
// Kumo top bottom
senkou_max = (senkouA_current >= senkouB_current) ? senkouA_current : senkouB_current
senkou_min = (senkouB_current >= senkouA_current) ? senkouA_current : senkouB_current

// Trade Setups

// Kumo Conditions
closeOverKumo = close > senkou_max
noKumo = high < (senkou_min - ( atrValue / 2 )) or low > (senkou_max + atrValue)
kumoCross = ta.cross(senkouA_current, senkouB_current)
kumoGreen = senkouA > senkouB
kumoRed = senkouB > senkouA
kumoSafe = senkou_max - senkou_min > atrValue


// Logic Entry


// A candle touches to kujin sen agressivly and turn back symbol K
kijunSenTouchDown =
     ta.crossunder(low[1], kijunSen[1]) and
     (close[1] > kijunSen[1]) and
     close > senkou_max and
     tenkanSen >= kijunSen and
     close > open

// Ichimaku classic entry condutions symbol T
tenkanRule =  (tenkanSen > kijunSen) and
              (low > tenkanSen) and
              (low - tenkanSen[1]) < (atrValue ) and
              tenkanSen[1] >= tenkanSen[2] and
              kijunSen[1] > kijunSen[2] and
              tenkanSen - kijunSen < (atrValue * 1.5 ) and
              close > open and
              kumoGreen and
              isVolumeHigh




long = strategy.position_size == 0 and
     dateFilter(startTime, endTime) and
     low > kijunSen and
     kijunSen > tenkanSen and
     close < senkouA_current and
     close > open and
     noKumo
     and stochD < 29





short = strategy.position_size == 0 and
     dateFilter(startTime, endTime) and
     close < senkou_min and
     ta.crossover(high, kijunSen)  and
     stochD >= 90 and
     stochD[1] > stochD and
     kumoRed





// Handle Trades
// Enter Trade
var float trailStopLong = na
var float trailStopShort = na

// This Entry for ultra or normal runs over kumo without future kumo kondition
if  long
    strategy.entry(id="Buy", direction = strategy.long )
    trailStopLong := na

// Short Entry
if short
    strategy.entry(id="Sell", direction = strategy.short)
    trailStopShort := na


// Update trailing stop
float temp_trailStop_long = ta.highest(close, 5) - (atrValue * 3)
float temp_trailStop_short = ta.lowest(low, 5) + (atrValue * 3)

if strategy.position_size > 0
    if temp_trailStop_long > trailStopLong or na(trailStopLong)
        trailStopLong := temp_trailStop_long
if strategy.position_size < 0
    if temp_trailStop_short < trailStopShort or na(trailStopShort)
        trailStopShort := temp_trailStop_short

// Handle strategy exit
//  Temp add tenkan kujin cross remove later
if close < trailStopLong and barstate.isconfirmed
    strategy.close("Buy", comment="Stop Long")

if close > trailStopShort and barstate.isconfirmed
    strategy.close("Sell", comment="Stop Short")

// PRINT ON CHART
plotchar(kijunSenTouchDown, char = "K", title="kijunSenTouchDown (K)", location = location.abovebar)
plotchar(tenkanRule , char = "T", title = "Tenkan Rule (T)", location = location.abovebar)

plot(tenkanSen, color=color.gray, title="Tenken-sen", linewidth=1)
plot(kijunSen, color=color.rgb(214, 58, 30), title="Kijun-sen", linewidth=2)
p1 = plot(senkouA, offset=displacement - 1, color=#A5D6A7, title="Senkou span A")
p2 = plot(senkouB, offset=displacement - 1, color=#EF9A9A, title="Senkou Span B")
fill(p1, p2, color=senkouA > senkouB ? color.rgb(67, 160, 71, 90) : color.rgb(244, 67, 54, 90))

// Trail Stop
plot(strategy.position_size[1] > 0 ? trailStopLong : na, style=plot.style_linebr, color=color.purple, title="Stop Loss Long")
plot(strategy.position_size[1] < 0 ? trailStopShort : na, style=plot.style_linebr, color=color.purple, title="Stop Loss Short")

// plot(ema, title="EMA HTF")
plotchar(volume, char = "", title="Volume")
plotchar(volumeAvg, char = "", title="Volume Ema 20")
plotchar(isVolumeHigh and (velocity < 1) , char="❄",  location = location.abovebar, title = "Vol High but Vel Low")
plotchar(isVolumeHigh, char="", title = "İs Vol High")
plotchar(kumoGreen, char="", title = "Is Kumo Green")