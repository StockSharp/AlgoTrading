//@version=5
strategy("Pavan CPR Strategy", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// User input for custom take-profit target (in points)
takeProfitTarget = input.float(50, title="Take Profit Target (Points)", minval=1)

// Calculate daily CPR levels
f_cpr(high, low, close) =>
    pivot = (high + low + close) / 3
    tc = (high + low) / 2      // Top Central Pivot (was incorrectly calculated as BC)
    bc = (pivot - tc) + pivot  // Bottom Central Pivot (was incorrectly calculated as TC)
    [pivot, tc, bc]

// Fetch today's CPR levels based on daily timeframe
[todayPivot, todayTC, todayBC] = request.security(syminfo.tickerid, "D", f_cpr(high, low, close))

// Determine if the previous close was below the Top CPR level
wasBelowCPR = close[1] < todayTC

// Determine if price crosses above the Top CPR level today
priceCrossedAboveTC = ta.crossover(close, todayTC)

// Define Buy Condition: Price crosses above Top CPR and was below CPR on previous close
if (priceCrossedAboveTC and wasBelowCPR)
    // Enter long position with a stop loss at today's pivot level and a take profit at the user-defined target
    strategy.entry("Long", strategy.long)
    strategy.exit("Take Profit/Stop Loss", from_entry="Long", limit=close + takeProfitTarget, stop=todayPivot)

// Plot CPR levels on chart for visual reference
plot(todayPivot, title="Pivot", color=color.blue, linewidth=2, style=plot.style_line)
plot(todayTC, title="Top CPR", color=color.green, linewidth=2, style=plot.style_line)
plot(todayBC, title="Bottom CPR", color=color.red, linewidth=2, style=plot.style_line)