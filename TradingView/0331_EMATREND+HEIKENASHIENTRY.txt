//@version=6
strategy("EMATREND+HEIKENASHIENTRY", overlay=true, process_orders_on_close=true)

// === INPUT PARAMETERS ===
// Bollinger Bands Parameters
bbLength = input.int(20, title="Bollinger Bands Length", minval=1)
bbStdDev = input.float(2.0, title="Bollinger Bands Standard Deviation", minval=0.1, step=0.1)

// REPLACED SuperTrend with EMA Crossover Parameters
fastLength = input.int(9, title="Fast EMA Period", minval=1)
slowLength = input.int(21, title="Slow EMA Period", minval=1)
htf = input.timeframe("180", title="Higher Timeframe")

// === HEIKIN-ASHI CALCULATION ===
var float haOpen = na
haClose = (open + high + low + close) / 4
haOpen := na(haOpen[1]) ? (open + close) / 2 : (haOpen[1] + haClose[1]) / 2
haHigh = math.max(high, haOpen, haClose)
haLow = math.min(low, haOpen, haClose)

// === BOLLINGER BANDS ON HEIKIN-ASHI ===
basis = ta.sma(haClose, bbLength)
dev = bbStdDev * ta.stdev(haClose, bbLength)
upperBB = basis + dev
lowerBB = basis - dev

// === REPLACED SuperTrend with EMA Crossover Trend Detection ===
// Get HTF EMAs
htf_fast_ema = request.security(syminfo.tickerid, htf, ta.ema(close, fastLength), lookahead=barmerge.lookahead_off)
htf_slow_ema = request.security(syminfo.tickerid, htf, ta.ema(close, slowLength), lookahead=barmerge.lookahead_off)

// Determine trend direction
isBullishHTF = htf_fast_ema > htf_slow_ema
isBearishHTF = htf_fast_ema < htf_slow_ema

// === SIGNAL GENERATION ===
// Buy Conditions
redCandle1 = haClose[1] < haOpen[1] and (haLow[1] <= lowerBB[1] or haClose[1] <= lowerBB[1])
redCandle2 = haClose[2] < haOpen[2] and (haLow[2] <= lowerBB[2] or haClose[2] <= lowerBB[2])
redCandle3 = haClose[3] < haOpen[3] and (haLow[3] <= lowerBB[3] or haClose[3] <= lowerBB[3])
consecutiveBears = (redCandle1 and redCandle2) or (redCandle1 and redCandle2 and redCandle3)
greenConfirmation = haClose > haOpen
aboveBB = haClose > lowerBB
buySignal = isBullishHTF and consecutiveBears and greenConfirmation and aboveBB

// Sell Conditions
greenCandle1 = haClose[1] > haOpen[1] and (haHigh[1] >= upperBB[1] or haClose[1] >= upperBB[1])
greenCandle2 = haClose[2] > haOpen[2] and (haHigh[2] >= upperBB[2] or haClose[2] >= upperBB[2])
greenCandle3 = haClose[3] > haOpen[3] and (haHigh[3] >= upperBB[3] or haClose[3] >= upperBB[3])
consecutiveBulls = (greenCandle1 and greenCandle2) or (greenCandle1 and greenCandle2 and greenCandle3)
redConfirmation = haClose < haOpen
belowBB = haClose < upperBB
sellSignal = isBearishHTF and consecutiveBulls and redConfirmation and belowBB

// === RISK MANAGEMENT ===
var float entryPrice = na
var float initialStop = na
var float firstTarget = na
var bool firstTargetReached = false
var float trailStop = na

// Enter Long Positions
if buySignal
    entryPrice := close
    initialStop := low[1]
    firstTarget := entryPrice + (entryPrice - initialStop)
    firstTargetReached := false
    trailStop := na
    strategy.entry("Long", strategy.long)

// Enter Short Positions
if sellSignal
    entryPrice := close
    initialStop := high[1]
    firstTarget := entryPrice - (initialStop - entryPrice)
    firstTargetReached := false
    trailStop := na
    strategy.entry("Short", strategy.short)

// Manage Long Positions
if strategy.position_size > 0
    if not firstTargetReached
        if high >= firstTarget
            strategy.close("Long", qty_percent=50)
            firstTargetReached := true
            trailStop := entryPrice
    else
        trailStop := math.max(trailStop, low[1])

    currentStop = firstTargetReached ? trailStop : initialStop
    if low <= currentStop
        strategy.close("Long")

// Manage Short Positions
if strategy.position_size < 0
    if not firstTargetReached
        if low <= firstTarget
            strategy.close("Short", qty_percent=50)
            firstTargetReached := true
            trailStop := entryPrice
    else
        trailStop := math.min(trailStop, high[1])

    currentStop = firstTargetReached ? trailStop : initialStop
    if high >= currentStop
        strategy.close("Short")

// === VISUALIZATION ===
plot(upperBB, color=color.blue, title="Upper BB")
plot(basis, color=color.blue, title="Basis")
plot(lowerBB, color=color.blue, title="Lower BB")

plotshape(buySignal, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.small, title="Buy Signal")
plotshape(sellSignal, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.small, title="Sell Signal")

bgcolor(buySignal ? color.new(color.green, 90) : sellSignal ? color.new(color.red, 90) : na)

// === ALERT CONDITIONS ===
alertcondition(buySignal, title="EMATREND+HEIKENASHIENTRY Buy Alert", message="Buy Signal Triggered - EMATREND+HEIKENASHIENTRY")
alertcondition(sellSignal, title="EMATREND+HEIKENASHIENTRY Sell Alert", message="Sell Signal Triggered - EMATREND+HEIKENASHIENTRY")