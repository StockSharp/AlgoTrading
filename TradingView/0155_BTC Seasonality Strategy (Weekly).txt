//@version=5
strategy("BTC Seasonality Strategy (Weekly)", overlay=false, precision=2, initial_capital=20000, currency=currency.USD, slippage=1, commission_type=strategy.commission.cash_per_contract, commission_value=0.01)

// === Inputs ===
// Dropdown menus for entry and exit days
entryDay = input.string("Saturday", options=["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], title="Entry Day")
exitDay = input.string("Monday", options=["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], title="Exit Day")

// Entry and exit times (US Time, e.g., EST, full hours only)
entryHour = input.int(10, title="Entry Hour (US Time, EST)", minval=0, maxval=23, step=1)
exitHour = input.int(10, title="Exit Hour (US Time, EST)", minval=0, maxval=23, step=1)

// Trade direction
longOrShort = input.string("Long", options=["Long", "Short"], title="Trade Direction")

// === Time conditions ===
// Convert current time from UTC to EST (EST = UTC - 5 hours)
estHour = (hour - 5 + 24) % 24  // Adjust for negative values

// Map weekdays to strings for comparison
dayMap = array.new_string(7)
array.set(dayMap, 0, "Monday")
array.set(dayMap, 1, "Tuesday")
array.set(dayMap, 2, "Wednesday")
array.set(dayMap, 3, "Thursday")
array.set(dayMap, 4, "Friday")
array.set(dayMap, 5, "Saturday")
array.set(dayMap, 6, "Sunday")

currentDay = array.get(dayMap, dayofweek - 1)  // Adjust dayofweek (1–7) to array index (0–6)

// Entry and exit conditions
entryCondition = (currentDay == entryDay and estHour == entryHour)
exitCondition = (currentDay == exitDay and estHour == exitHour)

// === Entry logic ===
if entryCondition
    if longOrShort == "Long"
        strategy.entry("Long Entry", strategy.long)
    else
        strategy.entry("Short Entry", strategy.short)

// === Exit logic ===
if exitCondition
    strategy.close("Long Entry")
    strategy.close("Short Entry")