//@version=6
strategy("VWAP Breakout Strategy + EMAs + Clean Cycle/TP/SL Plots", overlay=true, max_lines_count=100, max_labels_count=100)

// === INPUTS ===
atr_length         = input.int(14, "ATR Length")
atr_multiplier     = input.float(1.5, "ATR Multiplier for Stop")
tp1_atr_mult       = input.float(1.0, "TP1 Multiplier (ATR)")
tp2_atr_mult       = input.float(2.0, "TP2 Multiplier (ATR)")
show_vwap          = input(true, "Show VWAP")
show_emas          = input(true, "Show EMAs (100,34,5)")
show_cycle_zone    = input(true, "Show Full Cycle Range Zone")
cycle_points       = input.int(200, "Full Cycle Range Points (see table for timeframe)")
round_step         = input.int(500, "Round Number Level Step (e.g., 500/1000)")
show_round_lvls    = input(true, "Show Round Number Levels")
show_tp_sl_labels  = input(true, "Show TP/SL Labels")
pivot_len          = input.int(5, "Pivot Lookback for Cycle Zone")

// === VWAP, ATR, EMA ===
vwap   = ta.vwap
atr_val = ta.atr(atr_length)
ema100 = ta.ema(close,100)
ema34  = ta.ema(close,34)
ema5   = ta.ema(close,5)

// === PLOTS: VWAP & EMAs ===
plot(show_vwap ? vwap : na, title="VWAP", color=color.blue, linewidth=2)
plot(show_emas ? ema100 : na, color=color.blue, title="EMA 100")
plot(show_emas ? ema34 : na, color=color.orange, title="EMA 34")
plot(show_emas ? ema5 : na, color=color.green, title="EMA 5")

// === BREAKOUT LOGIC ===
breakout_long  = ta.crossover(close, vwap)
breakout_short = ta.crossunder(close, vwap)

// === STOP LOSS & TAKE PROFIT LEVELS (calculated only on signal bars) ===
stop_loss_long  = breakout_long  ? close - (atr_val * atr_multiplier) : na
stop_loss_short = breakout_short ? close + (atr_val * atr_multiplier) : na
tp1_long        = breakout_long  ? close + (atr_val * tp1_atr_mult)   : na
tp2_long        = breakout_long  ? close + (atr_val * tp2_atr_mult)   : na
tp1_short       = breakout_short ? close - (atr_val * tp1_atr_mult)   : na
tp2_short       = breakout_short ? close - (atr_val * tp2_atr_mult)   : na

// === STRATEGY EXECUTION ===
if breakout_long
    strategy.entry("Breakout Long", strategy.long)
    strategy.exit("Exit Long", from_entry="Breakout Long", stop=stop_loss_long, limit=tp2_long)
if breakout_short
    strategy.entry("Breakout Short", strategy.short)
    strategy.exit("Exit Short", from_entry="Breakout Short", stop=stop_loss_short, limit=tp2_short)

// === TP/SL/ENTRY LABELS & LINES (plotted only on breakout signal bar) ===
if show_tp_sl_labels
    if breakout_long
        label.new(bar_index, low, "Buy", color=color.new(color.green, 0), textcolor=color.white, style=label.style_label_up, size=size.normal)
        label.new(bar_index, close, "ENTRY (Long)", color=color.green, style=label.style_label_up, textcolor=color.white, size=size.tiny)
        label.new(bar_index, tp1_long, "TP1", color=color.teal, style=label.style_label_down, textcolor=color.white, size=size.tiny)
        label.new(bar_index, tp2_long, "TP2", color=color.purple, style=label.style_label_down, textcolor=color.white, size=size.tiny)
        label.new(bar_index, stop_loss_long, "STOP", color=color.red, style=label.style_label_down, textcolor=color.white, size=size.tiny)
        // Extend lines to the right for clarity
        line.new(bar_index, tp1_long, bar_index+10, tp1_long, color=color.teal, width=1, style=line.style_dashed)
        line.new(bar_index, tp2_long, bar_index+10, tp2_long, color=color.purple, width=1, style=line.style_dotted)
        line.new(bar_index, stop_loss_long, bar_index+10, stop_loss_long, color=color.red, width=1, style=line.style_dotted)
    if breakout_short
        label.new(bar_index, high, "Sell", color=color.new(color.red, 0), textcolor=color.white, style=label.style_label_down, size=size.normal)
        label.new(bar_index, close, "ENTRY (Short)", color=color.red, style=label.style_label_down, textcolor=color.white, size=size.tiny)
        label.new(bar_index, tp1_short, "TP1", color=color.teal, style=label.style_label_up, textcolor=color.white, size=size.tiny)
        label.new(bar_index, tp2_short, "TP2", color=color.purple, style=label.style_label_up, textcolor=color.white, size=size.tiny)
        label.new(bar_index, stop_loss_short, "STOP", color=color.green, style=label.style_label_up, textcolor=color.white, size=size.tiny)
        line.new(bar_index, tp1_short, bar_index+10, tp1_short, color=color.teal, width=1, style=line.style_dashed)
        line.new(bar_index, tp2_short, bar_index+10, tp2_short, color=color.purple, width=1, style=line.style_dotted)
        line.new(bar_index, stop_loss_short, bar_index+10, stop_loss_short, color=color.green, width=1, style=line.style_dotted)

// === PLOT ROUND NUMBER LEVELS (static, always visible) ===
if show_round_lvls
    round = math.round(close / round_step) * round_step
    for offset = -2 to 2
        level = round + offset * round_step
        line.new(bar_index-50, level, bar_index+1, level, color=color.gray, style=line.style_dotted, width=1)

// === FULL CYCLE ZONE (Shaded Area, only on new pivots) ===
var box cycle_box = na
var int last_pivot_bar = na
var float last_pivot_price = na

pl = ta.pivotlow(low, pivot_len, pivot_len)
if show_cycle_zone and not na(pl)
    last_pivot_bar := bar_index - pivot_len
    last_pivot_price := low[pivot_len]
    if not na(cycle_box)
        box.delete(cycle_box)
    // Correct positional arguments for box.new: left, top, right, bottom, ...
    cycle_box := box.new(last_pivot_bar, last_pivot_price + cycle_points, bar_index, last_pivot_price, border_color=color.yellow, bgcolor=color.new(color.yellow,85))

// === END ===