//@version=5
strategy("MVO - MA Signal Strategy", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)
backtestStart = input.time(timestamp('2025-05-01 00:00 +0000'), 'Backtest Start')
inDateRange = (time >= backtestStart)
source = close

// === HEIKIN ASHI ===
haOpen  = request.security(syminfo.tickerid, timeframe.period, (nz(open[1]) + nz(close[1]) ) / 2)
haClose = request.security(syminfo.tickerid, timeframe.period, (low + high + open + close )/4)
haHigh  = request.security(syminfo.tickerid, timeframe.period, math.max(high, math.max((haOpen[1] + haClose[1]) / 2, (open + high + low + close) / 4)))
haLow   = request.security(syminfo.tickerid, timeframe.period, math.min(low, math.min((haOpen[1] + haClose[1]) / 2, (open + high + low + close) / 4)))
isGreen = haClose > haLow[1]
isRed = haClose < haLow[1]

// === INPUTS === //
maLength   = input.int(55, "MA Period")
atrLength  = input.int(5, "ATR Period")
mfiLength  = input.int(5, "MFI Period")
riskMult   = input.float(1.0, "SL Multiplier (xATR)")
rewardMult = input.float(5.0, "TP Multiplier (xATR)")
breakevenTicks = input.float(2, "Move to Breakeven After (xATR)")
trailATRmult = input.float(1.5, "Trailing Stop After BE (xATR)")
enableTrailingStop = input.bool(true, "Enable Trailing Stop")
enableBreakeven = input.bool(true, "Enable Break Even")
showBreakEvenLine = input.bool(true, "Show Break Even Line")
enableLong  = input.bool(true, "Allow Long Trades")
enableShort = input.bool(true, "Allow Short Trades")

// === MA + ATR === //
ma  = ta.sma(close, maLength)
atr = ta.atr(atrLength)
//────────────────────────────────────────────────────────────────────────────
// 1. Dashboard Table Setup
//────────────────────────────────────────────────────────────────────────────
dashboardLocation = input.string("Bottom Right", "Dashboard Location", group="Dashboard", options=["Top Right", "Bottom Right", "Bottom Left"])
textSizeOption     = input.string("Tiny", "Text Size", group="Dashboard", options=["Tiny", "Small", "Normal"])
tablePos           = str.replace(str.lower(dashboardLocation), " ", "_")
dashTextSize       = str.lower(textSizeOption)
var tbl = table.new(tablePos, 3, 4, bgcolor=#1e222d, border_color=#373a46, border_width=1, frame_color=#373a46, frame_width=1)

//────────────────────────────────────────────────────────────────────────────
// 8. Dashboard Table Updates
//────────────────────────────────────────────────────────────────────────────
table.cell(tbl, 1, 1, "Profit: ", text_size=dashTextSize, text_color=color.gray)
profitText = str.tostring(int(strategy.netprofit)) + " " + str.tostring(strategy.account_currency) + " " + str.tostring(int(strategy.wintrades * 100 / strategy.closedtrades)) + " %"
table.cell(tbl, 2, 1, profitText, text_size=dashTextSize, text_color=color.white)
table.cell(tbl, 1, 2, "Open P/L: ", text_size=dashTextSize, text_color=color.gray)
table.cell(tbl, 2, 2, str.tostring(strategy.closedtrades) + " " + str.tostring(strategy.openprofit, format.mintick), text_size=dashTextSize, text_color=color.white)
table.cell(tbl, 1, 3, "AVG Price: ", text_size=dashTextSize, text_color=color.gray)
avgPriceColor = close > strategy.position_avg_price ? color.new(color.green, 72) : color.new(color.red, 80)
table.cell(tbl, 2, 3, str.tostring(strategy.position_avg_price, format.mintick), text_size=dashTextSize, text_color=avgPriceColor)

// === Trade state === //
var float entryPrice = na
var float stopPrice = na
var float takePrice = na
var float breakevenLevel = na
var bool inTrade = false
var bool isLong = false
var bool movedToBE = false

// === Signals === //
longSignal  = enableLong and ( ta.cross(haClose, ma) or (ta.mfi(haLow,mfiLength) < 20 and haClose > ma))
shortSignal = enableShort and (ta.crossunder(haClose, ma) or (ta.mfi(haClose,mfiLength) > 90 and haClose < ma))

// === Trade Logic === //
if not inTrade and inDateRange
    if longSignal
        entryPrice := close
        stopPrice := close - riskMult * atr
        takePrice := close + rewardMult * atr
        breakevenLevel := close + breakevenTicks * atr
        isLong := true
        inTrade := true
        movedToBE := false
        strategy.entry("Long", strategy.long)
    else if shortSignal
        entryPrice := close
        stopPrice := close + riskMult * atr
        takePrice := close - rewardMult * atr
        breakevenLevel := close - breakevenTicks * atr
        isLong := false
        inTrade := true
        movedToBE := false
        strategy.entry("Short", strategy.short)

// === Dynamic Exit Logic === //
var float trailStop = na

// Trigger break-even move
if inTrade and not movedToBE and enableBreakeven
    if isLong and high >= breakevenLevel
        stopPrice := entryPrice
        movedToBE := true
    else if not isLong and low <= breakevenLevel
        stopPrice := entryPrice
        movedToBE := true

// Trailing stop logic
if inTrade and movedToBE and enableTrailingStop
    if isLong
        trailStop := math.max(stopPrice, close - trailATRmult * atr)
        stopPrice := trailStop
    else
        trailStop := math.min(stopPrice, close + trailATRmult * atr)
        stopPrice := trailStop

// Set strategy exit dynamically
if inTrade and inDateRange
    strategy.exit("Exit", from_entry = isLong ? "Long" : "Short", stop = stopPrice, limit = takePrice)

// Exit Detection for visuals
stopHit = isLong ? low <= stopPrice : high >= stopPrice
tpHit   = isLong ? high >= takePrice : low <= takePrice
exitTrade = inTrade and (stopHit or tpHit)

if exitTrade
    inTrade := false
    entryPrice := na
    stopPrice := na
    takePrice := na
    breakevenLevel := na
    movedToBE := false
    trailStop := na

// === PLOTS === //
plotcandle(haOpen, haHigh, haLow, haClose, "HA Candle",color=isGreen ? color.green : color.red,bordercolor=isGreen ? color.green : color.red,wickcolor=isGreen ? color.green : color.red)

plot(ma, title="MA", color=color.orange, linewidth=3)

inZone = inTrade and not exitTrade
zoneTop = isLong ? takePrice : stopPrice
zoneBottom = isLong ? stopPrice : takePrice

plot(inTrade ? entryPrice : na, title="Entry", color=color.white, style=plot.style_linebr, linewidth=2)
plot(inTrade ? stopPrice : na, title="Stop Loss", color=color.rgb(255, 82, 82, 36), style=plot.style_linebr, linewidth=2)
plot(inTrade ? takePrice : na, title="Take Profit", color=color.rgb(76, 175, 79, 51), style=plot.style_linebr, linewidth=2)
plot(showBreakEvenLine and inTrade ? breakevenLevel : na, title="Break Even Trigger", color=color.gray, style=plot.style_linebr, linewidth=2)

plotshape(longSignal and not inTrade[1], title="Long Entry", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.tiny)
plotshape(shortSignal and not inTrade[1], title="Short Entry", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.tiny)
plotshape(tpHit and inTrade[1], title="TP Hit", location=location.abovebar, color=color.new(color.green, 99), style=shape.labelup, text="✅")
plotshape(stopHit and inTrade[1], title="SL Hit", location=location.belowbar, color=color.new(color.red, 95), style=shape.labeldown, text="❌")