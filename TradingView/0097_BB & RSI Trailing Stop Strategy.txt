//@version=5
strategy("BB & RSI with Conditional Trailing Stop", overlay=true, initial_capital=10000)

// --- Inputs for Indicators ---
bb_length = input.int(25, "BB Length", minval=1)
bb_mult = input.float(2.0, "BB StdDev", minval=0.001)
rsi_length = input.int(14, "RSI Length", minval=1)
rsi_overbought = input.int(60, "RSI Overbought Level", minval=1)
rsi_oversold = input.int(33, "RSI Oversold Level", minval=1)

// --- Inputs for Exit Management ---
stop_loss_points = input.int(50, "Initial Stop Loss Points", minval=1)
trail_offset_points = input.int(99, "Profit to Activate Trailing Stop", minval=1)
trail_stop_points = input.int(40, "Trailing Stop Points", minval=1)

// --- Calculate Indicators ---
basis = ta.sma(close, bb_length)
dev = bb_mult * ta.stdev(close, bb_length)
upper = basis + dev
lower = basis - dev
rsi_value = ta.rsi(close, rsi_length)

// --- Plot the Bollinger Bands on the chart ---
// These are the missing lines that draw the bands.
plot(basis, "Basis", color=color.new(color.gray, 0))
plot(upper, "Upper", color=color.new(color.red, 0))
plot(lower, "Lower", color=color.new(color.green, 0))

// --- Define Entry Conditions ---
long_condition = low < lower and ta.crossunder(rsi_value, rsi_oversold)
short_condition = high > upper and ta.crossover(rsi_value, rsi_overbought)

// --- Execute Trades ---
if (long_condition)
    strategy.entry("BB/RSI Long", strategy.long)
else if (short_condition)
    strategy.entry("BB/RSI Short", strategy.short)

// --- Exit Logic with Conditional Trailing Stop ---
strategy.exit("Exit Long", from_entry="BB/RSI Long",
             loss=stop_loss_points,
             trail_points=trail_stop_points,
             trail_offset=trail_offset_points)

strategy.exit("Exit Short", from_entry="BB/RSI Short",
             loss=stop_loss_points,
             trail_points=trail_stop_points,
             trail_offset=trail_offset_points)