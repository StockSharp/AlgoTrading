//@version=6
// Combo 2/20 EMA & Bandpass Filter Strategy v6
// Refactored from v5 to Pine Script v6

strategy("Combo 2/20 EMA & Bandpass Filter v6", overlay=true, margin_long=100, margin_short=100)

// ——— Inputs ———
emaFastLen   = input.int(2,    "Fast EMA Length",             minval=1, group="EMA Settings")
emaSlowLen   = input.int(20,   "Slow EMA Length",             minval=1, group="EMA Settings")
bpfLen       = input.int(20,   "Bandpass Length",             minval=1, group="BP Filter")
bpfDelta     = input.float(0.5, "BP Delta",                   step=0.1, group="BP Filter")
bpfSellZone  = input.float(5.0, "BP Sell Zone",               step=0.01, group="BP Filter")
bpfBuyZone   = input.float(-5.0,"BP Buy Zone",                step=0.01, group="BP Filter")
reverse      = input.bool(false, "Reverse Signals",           group="Misc")

// Time filter
startDay     = input.int(1,    "Start Day",                  minval=1, maxval=31, group="Time Filter")
startMonth   = input.int(1,    "Start Month",                minval=1, maxval=12, group="Time Filter")
startYear    = input.int(2005, "Start Year",                 minval=1970,     group="Time Filter")
useTime      = (time >= timestamp(startYear, startMonth, startDay, 0, 0))

// ——— Helper functions ———
f_emaSignal(len) =>
    emaFast = ta.ema(close, len)
    emaSlow = ta.ema(close, emaSlowLen)
    emaFast > emaSlow ? 1 : emaFast < emaSlow ? -1 : 0

f_bpfSignal(len, delta, sz, bz) =>
    beta  = math.cos(math.pi * (360 / len) / 180)
    gamma = 1 / math.cos(math.pi * (720 * delta / len) / 180)
    alpha = gamma - math.sqrt(gamma * gamma - 1)
    var float BP = na
    BP := 0.5 * (1 - alpha) * (hl2 - hl2[2]) + beta * (1 + alpha) * nz(BP[1]) - alpha * nz(BP[2])
    BP > sz ? 1 : BP < bz ? -1 : nz(BP[1], 0)

// ——— Signals ———
sigEMA = f_emaSignal(emaFastLen)
sigBPF = f_bpfSignal(bpfLen, bpfDelta, bpfSellZone, bpfBuyZone)
sig     = (sigEMA == sigBPF) and sigEMA != 0 and useTime ? sigEMA : 0
if reverse
    sig := sig == 1 ? -1 : sig == -1 ? 1 : 0

// ——— Entries & Exits ———
if sig == 1
    strategy.entry("Long", strategy.long)
else if sig == -1
    strategy.entry("Short", strategy.short)
else
    strategy.close_all()

// ——— Plots & Alerts ———
plot(ta.ema(close, emaFastLen), title="Fast EMA", color=color.blue)
plot(ta.ema(close, emaSlowLen), title="Slow EMA", color=color.orange)
plotshape(sig == 1, title="Long Signal", style=shape.triangleup, location=location.belowbar)
plotshape(sig == -1, title="Short Signal", style=shape.triangledown, location=location.abovebar)

alertcondition(sig == 1, title="Long Alert", message="Long signal generated")
alertcondition(sig == -1, title="Short Alert", message="Short signal generated")