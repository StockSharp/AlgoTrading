// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// REUSING THIS CODE: You are welcome to reuse this code without permission, including in closed-source publications, as long as proper credits are given :)
// Author: ©fareidzulkifli

// Disclaimer:
// Past performance is not an indicator of future results.
// My opinions are my own and do not constitute financial advice in any way whatsoever.
// Nothing published by me constitutes an investment/trading recommendation, nor should any data or Content published by me be relied upon for any investment/trading activities.
// I strongly recommends that you perform your own independent research and/or speak with a qualified investment professional before making any financial decisions.

// Any ideas to further improve this indicator are welcome :)

//@version=4
study("Sector Sigma", overlay=false, max_bars_back=1000)

//************************************************************************************************************
// Parameter
//************************************************************************************************************
custom_tf   = input('D',                     title="Timeframe for Screening", type=input.resolution, options=["D","W"])
indiSet     = input(false,                  "═════════ SigmaSpike Parameter ════════")
length      = input(20,                     title="Lookback Period",minval=1)
treshold    = input(2.,                     title="Sigma Threshold",minval=0.2)
offset      = input(0,                      title="Period Offset",   minval=0, maxval=1)
disp_ret    = input(true,                   title="Show Last [x] Period Return (%)")
ret_len     = input(20,                     title="[x] Period",minval=1)

AddSet      = input(false,                  "═════════ Additional Setting ════════")
txtclr      = input("Custom",               title = "Text Color", options=["Custom","White","Black"])
lblsize     = input(35,                     title = "Distance Between Label", minval=1, maxval=100)

screenList  = input(false,                  "═════════ Index for Screening ════════")
index_01    = input('MYX:FBMKLCI',            title = "Benchmark index",  type=input.symbol)
index_02    = input('MYX:TECHNOLOGY',         title = "Index 01",  type=input.symbol)
index_03    = input('MYX:ENERGY',             title = "Index 02",  type=input.symbol)
index_04    = input('MYX:PLANTATION',         title = "Index 03",  type=input.symbol)
index_05    = input('MYX:PROPERTIES',         title = "Index 04",  type=input.symbol)
index_06    = input('MYX:CONSUMER',           title = "Index 05",  type=input.symbol)
index_07    = input('MYX:FINANCE',            title = "Index 06",  type=input.symbol)
index_08    = input('MYX:CONSTRUCTN',         title = "Index 07",  type=input.symbol)
index_09    = input('MYX:IND-PROD',           title = "Index 08",  type=input.symbol)
index_10    = input('MYX:HEALTH',             title = "Index 09",  type=input.symbol)
index_11    = input('MYX:TRANSPORTATION',     title = "Index 10",  type=input.symbol)
index_12    = input('MYX:TELECOMMUNICATIONS', title = "Index 11",  type=input.symbol)
index_13    = input('MYX:UTILITIES',          title = "Index 12",  type=input.symbol)

//************************************************************************************************************
// Indicator and Function
//************************************************************************************************************
// -- Constant
var brl        = "\n-----------------------\n"

// -- Function
get_sigma(_len)=>
    float sigma   = na
    x_ret   = ((close-close[ret_len]) / close[ret_len])*100
    return  = (close-close[1]) / close[1]
    sd      = stdev(return, _len)
    sigma   := return / sd[1]
    [sigma[offset], return[offset]*100, x_ret[offset]]

//************************************************************************************************************
// Screener Logic
//************************************************************************************************************
// set asset status {

[sigma_01, ret_01, x_ret_01] = security(index_01, custom_tf, get_sigma(length))
[sigma_02, ret_02, x_ret_02] = security(index_02, custom_tf, get_sigma(length))
[sigma_03, ret_03, x_ret_03] = security(index_03, custom_tf, get_sigma(length))
[sigma_04, ret_04, x_ret_04] = security(index_04, custom_tf, get_sigma(length))
[sigma_05, ret_05, x_ret_05] = security(index_05, custom_tf, get_sigma(length))
[sigma_06, ret_06, x_ret_06] = security(index_06, custom_tf, get_sigma(length))
[sigma_07, ret_07, x_ret_07] = security(index_07, custom_tf, get_sigma(length))
[sigma_08, ret_08, x_ret_08] = security(index_08, custom_tf, get_sigma(length))
[sigma_09, ret_09, x_ret_09] = security(index_09, custom_tf, get_sigma(length))
[sigma_10, ret_10, x_ret_10] = security(index_10, custom_tf, get_sigma(length))
[sigma_11, ret_11, x_ret_11] = security(index_11, custom_tf, get_sigma(length))
[sigma_12, ret_12, x_ret_12] = security(index_12, custom_tf, get_sigma(length))
[sigma_13, ret_13, x_ret_13] = security(index_13, custom_tf, get_sigma(length))

//} end


significant_gain    = ""
weak_gain           = ""
significant_loss    = ""
weak_loss           = ""
var screen_per      =
  custom_tf=="D" and offset==0 ? "Today" : custom_tf=="D" and offset==1 ? "Yesterday" :
  custom_tf=="W" and offset==0 ? "This Week" : "Last Week"

var txt_ret1         = "\nReturn " + screen_per + ": "
var txt_ret2         = "Return " + tostring(ret_len) + (custom_tf=="D" ? " Days: ": " Weeks: ")

var txt_title       = "Scan For: " + screen_per + "\nSigma Spike Threshold: " + tostring(treshold) + "\n\nBenchmark:\n"

benchmark  = txt_title
  + index_01
  + "\n\nSigma: " + tostring(sigma_01,"0.00")
  + txt_ret1 + tostring(ret_01,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_01,"0.00") + "%"

//--------------
// Prep Label Text
//--------------
if(barstate.islast)

    significant_gain  := sigma_02 > treshold ? significant_gain + index_02 + "\nSigma: " + tostring(sigma_02,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_02,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_02,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_03 > treshold ? significant_gain + index_03 + "\nSigma: " + tostring(sigma_03,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_03,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_03,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_04 > treshold ? significant_gain + index_04 + "\nSigma: " + tostring(sigma_04,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_04,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_04,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_05 > treshold ? significant_gain + index_05 + "\nSigma: " + tostring(sigma_05,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_05,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_05,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_06 > treshold ? significant_gain + index_06 + "\nSigma: " + tostring(sigma_06,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_06,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_06,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_07 > treshold ? significant_gain + index_07 + "\nSigma: " + tostring(sigma_07,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_07,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_07,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_08 > treshold ? significant_gain + index_08 + "\nSigma: " + tostring(sigma_08,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_08,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_08,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_09 > treshold ? significant_gain + index_09 + "\nSigma: " + tostring(sigma_09,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_09,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_09,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_10 > treshold ? significant_gain + index_10 + "\nSigma: " + tostring(sigma_10,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_10,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_10,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_11 > treshold ? significant_gain + index_11 + "\nSigma: " + tostring(sigma_11,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_11,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_11,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_12 > treshold ? significant_gain + index_12 + "\nSigma: " + tostring(sigma_12,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_12,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_12,"0.00") + "%\n\n" : "\n\n") : significant_gain
    significant_gain  := sigma_13 > treshold ? significant_gain + index_13 + "\nSigma: " + tostring(sigma_13,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_13,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_13,"0.00") + "%\n\n" : "\n\n") : significant_gain

    weak_gain  := sigma_02 >= 0 and sigma_02 <= treshold ? weak_gain + index_02 + "\nSigma: " + tostring(sigma_02,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_02,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_02,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_03 >= 0 and sigma_03 <= treshold ? weak_gain + index_03 + "\nSigma: " + tostring(sigma_03,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_03,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_03,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_04 >= 0 and sigma_04 <= treshold ? weak_gain + index_04 + "\nSigma: " + tostring(sigma_04,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_04,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_04,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_05 >= 0 and sigma_05 <= treshold ? weak_gain + index_05 + "\nSigma: " + tostring(sigma_05,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_05,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_05,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_06 >= 0 and sigma_06 <= treshold ? weak_gain + index_06 + "\nSigma: " + tostring(sigma_06,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_06,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_06,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_07 >= 0 and sigma_07 <= treshold ? weak_gain + index_07 + "\nSigma: " + tostring(sigma_07,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_07,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_07,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_08 >= 0 and sigma_08 <= treshold ? weak_gain + index_08 + "\nSigma: " + tostring(sigma_08,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_08,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_08,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_09 >= 0 and sigma_09 <= treshold ? weak_gain + index_09 + "\nSigma: " + tostring(sigma_09,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_09,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_09,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_10 >= 0 and sigma_10 <= treshold ? weak_gain + index_10 + "\nSigma: " + tostring(sigma_10,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_10,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_10,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_11 >= 0 and sigma_11 <= treshold ? weak_gain + index_11 + "\nSigma: " + tostring(sigma_11,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_11,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_11,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_12 >= 0 and sigma_12 <= treshold ? weak_gain + index_12 + "\nSigma: " + tostring(sigma_12,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_12,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_12,"0.00") + "%\n\n" : "\n\n") : weak_gain
    weak_gain  := sigma_13 >= 0 and sigma_13 <= treshold ? weak_gain + index_13 + "\nSigma: " + tostring(sigma_13,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_13,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_13,"0.00") + "%\n\n" : "\n\n") : weak_gain

    significant_loss  := sigma_02 < -1*treshold ? significant_loss + index_02 + "\nSigma: " + tostring(sigma_02,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_02,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_02,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_03 < -1*treshold ? significant_loss + index_03 + "\nSigma: " + tostring(sigma_03,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_03,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_03,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_04 < -1*treshold ? significant_loss + index_04 + "\nSigma: " + tostring(sigma_04,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_04,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_04,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_05 < -1*treshold ? significant_loss + index_05 + "\nSigma: " + tostring(sigma_05,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_05,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_05,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_06 < -1*treshold ? significant_loss + index_06 + "\nSigma: " + tostring(sigma_06,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_06,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_06,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_07 < -1*treshold ? significant_loss + index_07 + "\nSigma: " + tostring(sigma_07,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_07,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_07,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_08 < -1*treshold ? significant_loss + index_08 + "\nSigma: " + tostring(sigma_08,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_08,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_08,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_09 < -1*treshold ? significant_loss + index_09 + "\nSigma: " + tostring(sigma_09,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_09,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_09,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_10 < -1*treshold ? significant_loss + index_10 + "\nSigma: " + tostring(sigma_10,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_10,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_10,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_11 < -1*treshold ? significant_loss + index_11 + "\nSigma: " + tostring(sigma_11,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_11,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_11,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_12 < -1*treshold ? significant_loss + index_12 + "\nSigma: " + tostring(sigma_12,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_12,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_12,"0.00") + "%\n\n" : "\n\n") : significant_loss
    significant_loss  := sigma_13 < -1*treshold ? significant_loss + index_13 + "\nSigma: " + tostring(sigma_13,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_13,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_13,"0.00") + "%\n\n" : "\n\n") : significant_loss

    weak_loss  := sigma_02 < 0 and sigma_02 >= -1*treshold ? weak_loss + index_02 + "\nSigma: " + tostring(sigma_02,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_02,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_02,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_03 < 0 and sigma_03 >= -1*treshold ? weak_loss + index_03 + "\nSigma: " + tostring(sigma_03,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_03,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_03,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_04 < 0 and sigma_04 >= -1*treshold ? weak_loss + index_04 + "\nSigma: " + tostring(sigma_04,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_04,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_04,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_05 < 0 and sigma_05 >= -1*treshold ? weak_loss + index_05 + "\nSigma: " + tostring(sigma_05,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_05,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_05,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_06 < 0 and sigma_06 >= -1*treshold ? weak_loss + index_06 + "\nSigma: " + tostring(sigma_06,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_06,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_06,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_07 < 0 and sigma_07 >= -1*treshold ? weak_loss + index_07 + "\nSigma: " + tostring(sigma_07,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_07,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_07,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_08 < 0 and sigma_08 >= -1*treshold ? weak_loss + index_08 + "\nSigma: " + tostring(sigma_08,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_08,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_08,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_09 < 0 and sigma_09 >= -1*treshold ? weak_loss + index_09 + "\nSigma: " + tostring(sigma_09,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_09,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_09,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_10 < 0 and sigma_10 >= -1*treshold ? weak_loss + index_10 + "\nSigma: " + tostring(sigma_10,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_10,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_10,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_11 < 0 and sigma_11 >= -1*treshold ? weak_loss + index_11 + "\nSigma: " + tostring(sigma_11,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_11,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_11,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_12 < 0 and sigma_12 >= -1*treshold ? weak_loss + index_12 + "\nSigma: " + tostring(sigma_12,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_12,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_12,"0.00") + "%\n\n" : "\n\n") : weak_loss
    weak_loss  := sigma_13 < 0 and sigma_13 >= -1*treshold ? weak_loss + index_13 + "\nSigma: " + tostring(sigma_13,"0.00") + (disp_ret ? txt_ret1 + tostring(ret_13,"0.00") + "%\n" + txt_ret2 + tostring(x_ret_13,"0.00") + "%\n\n" : "\n\n") : weak_loss

//--------------
// Prep Label Value
//--------------
SigWin      = "Sector with Significant Gain"    + brl
WeakWin     = "Sector with Average Gain"        + brl
SigLoss     = "Sector with Significant Loss"    + brl
WeakLoss    = "Sector with Average Loss"        + brl

SigWin      := SigWin   + (significant_gain != ""   ? significant_gain  : "Not Available")
WeakWin     := WeakWin  + (weak_gain != ""          ? weak_gain         : "Not Available")
SigLoss     := SigLoss  + (significant_loss != ""   ? significant_loss  : "Not Available")
WeakLoss    := WeakLoss + (weak_loss != ""          ? weak_loss         : "Not Available")

//--------------
// Draw Label
//--------------
// color setting
var lblclr   = #00000000
var sigG_col = txtclr == "Custom" ? #009900   : txtclr == "White" ? color.white : color.black
var weaG_col = txtclr == "Custom" ? #999900   : txtclr == "White" ? color.white : color.black
var weaL_col = txtclr == "Custom" ? #CC6600   : txtclr == "White" ? color.white : color.black
var sigL_col = txtclr == "Custom" ? color.red : txtclr == "White" ? color.white : color.black

// Thanks to LucF for label function
f_lineLabel(_text, _barsBack, _txtclr) =>
    var label _lbl = na
    if barstate.islast
        if na(_lbl)
            _lbl := label.new(bar_index[_barsBack], 100, xloc = xloc.bar_index, style = label.style_label_up, text = _text, textalign = text.align_left, color = lblclr, textcolor = _txtclr, size = size.normal)
            int(na)
        else
            label.set_x(_lbl, bar_index[_barsBack])
            label.set_text(_lbl, _text)
            int(na)

f_lineLabel(SigWin,   5+lblsize*1, sigG_col)
f_lineLabel(WeakWin,  5+lblsize*2, weaG_col)
f_lineLabel(WeakLoss, 5+lblsize*3, weaL_col)
f_lineLabel(SigLoss,  5+lblsize*4, sigL_col)

label lbl_0  = label.new(bar_index, 100, xloc=xloc.bar_index,
  text      = benchmark,
  color     = lblclr,
  style     = label.style_label_up,
  textcolor = txtclr == "Custom" ? (sigma_01 > 0 ? #009900 : color.red) : txtclr == "White" ? color.white : color.black,
  size      = size.normal,
  textalign = text.align_left)
label.set_x(lbl_0, bar_index[0])
label.delete(lbl_0[1])

hline(100, color=#00000000), hline(10, color=#00000000)