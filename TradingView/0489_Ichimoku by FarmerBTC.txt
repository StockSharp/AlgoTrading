//@version=5
// ************************************************************
// *** LEGAL DISCLAIMER ***
// ************************************************************
// This script, "Ichimoku by FarmerBTC," is for educational and informational purposes only.
// It is not financial advice and should not be considered as such.
// Trading and investing involve substantial risk, and you may lose more than your initial investment.
// Past performance is not indicative of future results.
// Always consult with a qualified financial advisor before making trading or investment decisions.
// The author and publisher of this script are not responsible for any losses incurred.
// ************************************************************

strategy("Ichimoku by FarmerBTC", initial_capital=1000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, commission_type=strategy.commission.percent, commission_value=0.06, overlay=true)

// ***************
// *** INPUTS ***
// ***************
conversion_period = input.int(10, title="Conversion Line Period", group="Ichimoku Settings") // Default set to 10
base_period = input.int(30, title="Base Line Period", group="Ichimoku Settings") // Default set to 30
lagging_span_period = input.int(53, title="Lagging Span Period", group="Ichimoku Settings") // Default set to 53
displacement = input.int(26, title="Displacement", group="Ichimoku Settings") // Default remains 26

use_longs = input.bool(true, title="Enable Long Positions", group="Trade Settings")

// High Timeframe SMA Condition
sma_length = input.int(13, title="HTF SMA Length", group="High Timeframe Settings") // Default set to 13
sma_timeframe = input.timeframe("D", title="HTF Timeframe", group="High Timeframe Settings") // Default set to 1 day

// Volume Settings
show_volume = input.bool(false, title="Show Volume Panel", group="Volume Settings", inline="Volume")
volume_length = input.int(20, title="Volume MA Length", group="Volume Settings", inline="Volume")
volume_multiplier = input.float(1.5, title="Volume Multiplier", group="Volume Settings")

// ********************
// *** CALCULATIONS ***
// ********************
// Ichimoku Calculations
conversion_line = (ta.highest(high, conversion_period) + ta.lowest(low, conversion_period)) / 2
base_line = (ta.highest(high, base_period) + ta.lowest(low, base_period)) / 2
leading_span_a = (conversion_line + base_line) / 2
leading_span_b = (ta.highest(high, lagging_span_period) + ta.lowest(low, lagging_span_period)) / 2

// High Timeframe SMA
htf_sma = request.security(syminfo.tickerid, sma_timeframe, ta.sma(close, sma_length))

// Volume Condition
volume_ma = ta.sma(volume, volume_length)
volume_condition = volume > volume_ma * volume_multiplier

// Conditions
price_above_cloud = close > math.max(leading_span_a, leading_span_b)
price_below_cloud = close < math.min(leading_span_a, leading_span_b)
bullish_cloud = leading_span_a > leading_span_b
price_above_sma = close > htf_sma
long_condition = use_longs and price_above_cloud and bullish_cloud and price_above_sma and volume_condition

// *****************
// *** POSITIONS ***
// *****************
if long_condition and strategy.position_size == 0
    strategy.entry("Long", strategy.long, comment="Enter Long")

if price_below_cloud and strategy.position_size > 0
    strategy.close("Long", comment="Exit Long")

// ************
// *** PLOT ***
// ************
// Plot the Ichimoku components
plot_conversion = plot(conversion_line, color=color.blue, title="Conversion Line")
plot_base = plot(base_line, color=color.red, title="Base Line")
plot_leading_span_a = plot(leading_span_a, color=color.new(color.green, 90), title="Leading Span A")
plot_leading_span_b = plot(leading_span_b, color=color.new(color.red, 90), title="Leading Span B")

// Fill the cloud with dynamic coloring
fill(plot1=plot_leading_span_a,
     plot2=plot_leading_span_b,
     color=leading_span_a > leading_span_b ? color.new(color.green, 80) : color.new(color.red, 80),
     title="Ichimoku Cloud")

// Plot High Timeframe SMA
plot(htf_sma, color=color.purple, title="HTF SMA", linewidth=2)

// **********************
// *** VOLUME PANEL ***
// **********************
// Ensure volume can be toggled using `na` when `show_volume` is false
volume_to_plot = show_volume ? volume : na
volume_ma_to_plot = show_volume ? volume_ma : na

plot(volume_to_plot, color=color.new(color.blue, 70), title="Volume", style=plot.style_histogram, linewidth=1)
plot(volume_ma_to_plot, color=color.new(color.orange, 50), title="Volume Moving Average", linewidth=1)