// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © BullByte

//@version=6
strategy("Smart Grid Scalping(Pullback) Strategy[BullByte]", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=30, commission_type=strategy.commission.percent, commission_value=0.04, slippage=1)

// === INPUTS ===
atrLen       = input.int(10, "ATR Length")
gridFactor   = input.float(0.35, "Grid Factor")  // Increased for more spacing
profitTarget = input.float(0.004, "Profit Target", step=0.0001)
noTradeZone  = input.float(0.003, "No-Trade Zone (%)", step=0.0001)
shortLevel   = input.int(5, "Short Trigger Level", minval=0, maxval=14)
longLevel    = input.int(5,  "Long Trigger Level", minval=0, maxval=14)
minRSIShort  = input.int(70, "Min RSI for Short")
maxRSILong   = input.int(30, "Max RSI for Long")

// === CALCULATIONS ===
atr = ta.atr(atrLen)
rsi = ta.rsi(close, 14)
basePrice = close[20]  // Use historical price to widen grid spacing

// === GRID ARRAYS ===
var float[] gridUp = array.new_float(15)
var float[] gridDown = array.new_float(15)

if bar_index > 20
    for i = 0 to 14
        array.set(gridUp, i, basePrice + (i + 1) * atr * gridFactor)
        array.set(gridDown, i, basePrice - (i + 1) * atr * gridFactor)

// === PLOT GRID LINES ===
for i = 0 to 14
    lineColorUp   = i == shortLevel ? color.red : color.new(color.red, 80)
    lineColorDown = i == longLevel  ? color.green : color.new(color.green, 80)
    line.new(bar_index - 1, array.get(gridUp, i), bar_index, array.get(gridUp, i), color=lineColorUp, width=i == shortLevel ? 2 : 1)
    line.new(bar_index - 1, array.get(gridDown, i), bar_index, array.get(gridDown, i), color=lineColorDown, width=i == longLevel ? 2 : 1)

// === ENTRY CONDITIONS ===
shortCond = close > array.get(gridUp, shortLevel) and (high - low) / high > noTradeZone and rsi > minRSIShort and close < open
longCond  = close < array.get(gridDown, longLevel) and (high - low) / low > noTradeZone and rsi < maxRSILong and close > open

if shortCond
    strategy.entry("Short", strategy.short)

if longCond
    strategy.entry("Long", strategy.long)

// === EXIT CONDITIONS ===
if strategy.position_size > 0
    strategy.exit("Exit Long", "Long", limit=close * (1 + profitTarget), trail_price=close * (1 + profitTarget * 0.5), trail_offset=atr)

if strategy.position_size < 0
    strategy.exit("Exit Short", "Short", limit=close * (1 - profitTarget), trail_price=close * (1 - profitTarget * 0.5), trail_offset=atr)

// === ENTRY LABELS ===
plotshape(strategy.position_size > 0 and strategy.position_size[1] <= 0, location=location.belowbar, style=shape.labelup, color=color.green, text="LONG", textcolor=color.white)
plotshape(strategy.position_size < 0 and strategy.position_size[1] >= 0, location=location.abovebar, style=shape.labeldown, color=color.red, text="SHORT", textcolor=color.white)