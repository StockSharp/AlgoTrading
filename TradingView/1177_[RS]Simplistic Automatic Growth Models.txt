// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© RicardoSantos, Xel Arjona
//  Logarithmic implementation by Xel Arjona

//@version=4
study(title='[RS]Simplistic Automatic Growth Models', shorttitle='GM', overlay=true, max_bars_back=4999)

f_highest(_source, _bars, _length)=>
    float _h_value = _source
    int _h_bar = _bars
    for _i = 0 to max(_length-1, 0)
        bool _isSourceOver = _source[_i] > _h_value
        if _isSourceOver
            _h_value := _source[_i]
            _h_bar := _bars[_i]
    _h_value//, _h_bar]

f_lowest(_source, _bars, _length)=>
    float _l_value = _source
    int _l_bar = _bars
    for _i = 0 to max(_length-1, 0)
        bool _isSourceUnder = _source[_i] < _l_value
        if _isSourceUnder
            _l_value := _source[_i]
            _l_bar := _bars[_i]
    _l_value//, _l_bar]

f_cum(_src)=>cum(_src) / (bar_index + 1)

_slog = input(false, title="Semi-Logarithmic (toggle on if scale is logarithmic):")
length = bar_index//input(10)

h = f_highest(_slog ? log(high) : high, 0,length)
l = f_lowest(_slog ? log(low) : low, 0,length)

float chi = _slog ? exp( f_cum(h) ) : f_cum(h)
float clo = _slog ? exp( f_cum(l) ) : f_cum(l)
float cmi = avg(clo, chi)

float qrt_hi = avg(chi, cmi)
float qrt_lo = avg(cmi, clo)

float oct_hi1 = avg(chi, qrt_hi)
float oct_hi2 = avg(cmi, qrt_hi)
float oct_lo2 = avg(cmi, qrt_lo)
float oct_lo1 = avg(clo, qrt_lo)

plot(series=clo, title='L', offset=-length)
plot(series=chi, title='H', offset=-length)

f_line(_x1, _x2, _y1, _y2, _color)=>
    var line _li = na
    line.delete(id=_li)
    _li := line.new(x1=_x1, y1=_y1, x2=_x2, y2=_y2, xloc=xloc.bar_time, extend=extend.right, color=_color, style=line.style_dashed, width=1)
//----------------------------------------------------------------------------------

//theres a lag in time here, but its a fair aproximation..
//  as in t2 -> t1 and t1 -> t0
var int t1 = time
var int t2 = time
if bar_index == 1
    t2 := time

f_line(t1, t2, clo[1], clo, color.black)
f_line(t1, t2, cmi[1], cmi, color.black)
f_line(t1, t2, chi[1], chi, color.black)

f_line(t1, t2, qrt_hi[1], qrt_hi, color.gray)
f_line(t1, t2, qrt_lo[1], qrt_lo, color.gray)

f_line(t1, t2, oct_hi1[1], oct_hi1, color.silver)
f_line(t1, t2, oct_hi2[1], oct_hi2, color.silver)
f_line(t1, t2, oct_lo2[1], oct_lo2, color.silver)
f_line(t1, t2, oct_lo1[1], oct_lo1, color.silver)