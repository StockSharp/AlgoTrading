// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=5
strategy("DCA Strategy with Hedging", overlay=true, max_labels_count=500, max_lines_count=500)

// User inputs
emaLength = input.int(34, "EMA Length", minval=1)
dcaInterval = input.float(0.1, "DCA Interval (%)", minval=0.01, step=0.01)
tpPercentage = input.float(0.05, "Take Profit (%)", minval=0.01, step=0.01)
initialPosition = input.float(1.0, "Initial Position Size", minval=0.1)

// Variables for position tracking
var float longEntryPrice = na
var float shortEntryPrice = na
var float longAverageEntry = na
var float shortAverageEntry = na
var int longPositions = 0
var int shortPositions = 0
var float longTotalAmount = 0.0
var float shortTotalAmount = 0.0

// Calculate EMA
ema = ta.ema(close, emaLength)

// Track candles above/below EMA
var int candlesAboveEMA = 0
var int candlesBelowEMA = 0

// Update candle counters
if close > ema
    candlesAboveEMA := candlesAboveEMA + 1
    candlesBelowEMA := 0
else
    candlesBelowEMA := candlesBelowEMA + 1
    candlesAboveEMA := 0

// Function to calculate new average entry price
calcNewAverage(currentAvg, currentTotal, newPrice, newAmount) =>
    (currentAvg * currentTotal + newPrice * newAmount) / (currentTotal + newAmount)

// Long Entry Logic
longCondition = candlesAboveEMA >= 3 and strategy.position_size >= 0
longReentry = longPositions > 0 and close < longEntryPrice * (1 - dcaInterval/100)

if longCondition and longPositions == 0
    longEntryPrice := close
    longAverageEntry := close
    longTotalAmount := initialPosition
    longPositions := 1
    strategy.entry("Long", strategy.long, initialPosition)
    label.new(bar_index, low, "L", color=color.green, style=label.style_label_up)

if longReentry
    newAmount = initialPosition
    newAverage = calcNewAverage(longAverageEntry, longTotalAmount, close, newAmount)
    longAverageEntry := newAverage
    longEntryPrice := close
    longTotalAmount := longTotalAmount + newAmount
    longPositions := longPositions + 1
    strategy.entry("Long DCA", strategy.long, newAmount)
    label.new(bar_index, low, "DL", color=color.green, style=label.style_label_up)

// Short Entry Logic
shortCondition = candlesBelowEMA >= 3 and strategy.position_size <= 0
shortReentry = shortPositions > 0 and close > shortEntryPrice * (1 + dcaInterval/100)

if shortCondition and shortPositions == 0
    shortEntryPrice := close
    shortAverageEntry := close
    shortTotalAmount := initialPosition
    shortPositions := 1
    strategy.entry("Short", strategy.short, initialPosition)
    label.new(bar_index, high, "S", color=color.red, style=label.style_label_down)

if shortReentry
    newAmount = initialPosition
    newAverage = calcNewAverage(shortAverageEntry, shortTotalAmount, close, newAmount)
    shortAverageEntry := newAverage
    shortEntryPrice := close
    shortTotalAmount := shortTotalAmount + newAmount
    shortPositions := shortPositions + 1
    strategy.entry("Short DCA", strategy.short, newAmount)
    label.new(bar_index, high, "DS", color=color.red, style=label.style_label_down)

// Take Profit Logic
if longPositions > 0 and close > longAverageEntry * (1 + tpPercentage/100)
    strategy.close("Long")
    strategy.close("Long DCA")
    longPositions := 0
    longTotalAmount := 0
    longAverageEntry := na
    longEntryPrice := na
    label.new(bar_index, high, "LTP", color=color.green, style=label.style_label_down)

if shortPositions > 0 and close < shortAverageEntry * (1 - tpPercentage/100)
    strategy.close("Short")
    strategy.close("Short DCA")
    shortPositions := 0
    shortTotalAmount := 0
    shortAverageEntry := na
    shortEntryPrice := na
    label.new(bar_index, low, "STP", color=color.red, style=label.style_label_up)

// Plot EMA and current positions
plot(ema, "34 EMA", color=color.blue)

// Plot entry and TP levels for active positions
if longPositions > 0
    var line longEntryLine = na
    var line longTPLine = na
    line.delete(longEntryLine)
    line.delete(longTPLine)
    longEntryLine := line.new(bar_index - 1, longAverageEntry, bar_index, longAverageEntry,
                             color=color.green, style=line.style_dashed)
    longTPLine := line.new(bar_index - 1, longAverageEntry * (1 + tpPercentage/100),
                          bar_index, longAverageEntry * (1 + tpPercentage/100),
                          color=color.green)

if shortPositions > 0
    var line shortEntryLine = na
    var line shortTPLine = na
    line.delete(shortEntryLine)
    line.delete(shortTPLine)
    shortEntryLine := line.new(bar_index - 1, shortAverageEntry, bar_index, shortAverageEntry,
                              color=color.red, style=line.style_dashed)
    shortTPLine := line.new(bar_index - 1, shortAverageEntry * (1 - tpPercentage/100),
                           bar_index, shortAverageEntry * (1 - tpPercentage/100),
                           color=color.red)