//@version=5
strategy("MA Crossover Strategy with TP/SL (5 EMA Filter)", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// === INPUTS ===
// Moving Average lengths
fastMALength = input.int(10, "Fast MA Length", minval=1)
slowMALength = input.int(30, "Slow MA Length", minval=1)
ema5Length   = input.int(5, "5 EMA Length", minval=1) // New input for 5 EMA

// Take Profit and Stop Loss percentages
targetPerc = input.float(2.0, "Target (%)", minval=0.1, step=0.1) // 2% profit target
stopPerc   = input.float(1.0, "Stop Loss (%)", minval=0.1, step=0.1) // 1% stop loss

// === MOVING AVERAGE CALCULATIONS ===
// Calculate Simple Moving Averages (SMA)
fastMA = ta.sma(close, fastMALength)
slowMA = ta.sma(close, slowMALength)

// Calculate the 5-period Exponential Moving Average (EMA)
ema5 = ta.ema(close, ema5Length) // Calculation for 5 EMA

// === SIGNAL CONDITIONS ===
// Long signal: Fast MA crosses above Slow MA AND close is above 5 EMA
longSignal = ta.crossover(fastMA, slowMA) and close > ema5

// Short signal: Fast MA crosses below Slow MA AND close is below 5 EMA
shortSignal = ta.crossunder(fastMA, slowMA) and close < ema5

// === STRATEGY ENTRIES AND EXITS ===

// Variable to store the entry price for calculating TP/SL
var float entryPrice = na

// Long Trade Logic
if (longSignal)
    strategy.entry("Buy", strategy.long) // Enter a long position
    entryPrice := close // Store the closing price as entry price for this trade

// Exit for Long Trade (Take Profit or Stop Loss)
// We only set the exit if we are currently in a long position
if (strategy.position_size > 0 and not na(entryPrice))
    // Calculate target and stop loss prices based on the entry price
    float longTakeProfit = entryPrice * (1 + targetPerc / 100)
    float longStopLoss   = entryPrice * (1 - stopPerc / 100)

    strategy.exit("Sell TP/SL", from_entry="Buy", limit=longTakeProfit, stop=longStopLoss)

// Short Trade Logic
if (shortSignal)
    strategy.entry("Sell", strategy.short) // Enter a short position
    entryPrice := close // Store the closing price as entry price for this trade

// Exit for Short Trade (Take Profit or Stop Loss)
// We only set the exit if we are currently in a short position
if (strategy.position_size < 0 and not na(entryPrice))
    // Calculate target and stop loss prices based on the entry price
    float shortTakeProfit = entryPrice * (1 - targetPerc / 100)
    float shortStopLoss   = entryPrice * (1 + stopPerc / 100)

    strategy.exit("Buy TP/SL", from_entry="Sell", limit=shortTakeProfit, stop=shortStopLoss)

// === PLOTS ===
// Plot the moving averages on the chart
plot(fastMA, title="Fast MA", color=color.blue, linewidth=2)
plot(slowMA, title="Slow MA", color=color.orange, linewidth=2)
plot(ema5, title="5 EMA", color=color.purple, linewidth=1) // Plot the 5 EMA

// Plot buy and sell signals as shapes on the chart
plotshape(longSignal, title="Buy Signal", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small)
plotshape(shortSignal, title="Sell Signal", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small)

// Optional: Plot current take profit and stop loss lines (for visual debugging/understanding)
// This will only show the lines for the currently active trade based on the stored entryPrice
plot(strategy.position_size > 0 and not na(entryPrice) ? entryPrice * (1 + targetPerc / 100) : na, "Long TP", color=color.lime, style=plot.style_linebr, linewidth=1)
plot(strategy.position_size > 0 and not na(entryPrice) ? entryPrice * (1 - stopPerc / 100) : na, "Long SL", color=color.red, style=plot.style_linebr, linewidth=1)
plot(strategy.position_size < 0 and not na(entryPrice) ? entryPrice * (1 - targetPerc / 100) : na, "Short TP", color=color.lime, style=plot.style_linebr, linewidth=1)
plot(strategy.position_size < 0 and not na(entryPrice) ? entryPrice * (1 + stopPerc / 100) : na, "Short SL", color=color.red, style=plot.style_linebr, linewidth=1)