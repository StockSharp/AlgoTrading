//@version=6
strategy('TrendSync Pro (SMC)', overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=1, commission_type=strategy.commission.percent, commission_value=0.075)

// === Created by Shubham Singh ===

// === Strategy Mode ===
strategy_type = input.string("6H Trading", title="Strategy Type", options=["Scalping", "6H Trading", "Long-Term"], group="Strategy Mode")

// === Default Values Based on Strategy Type ===
default_trend_period = strategy_type == "Scalping"   ? 7  :
                       strategy_type == "Long-Term"  ? 35 :
                                                       20
default_htf         = strategy_type == "Scalping"   ? "15"  :
                       strategy_type == "Long-Term" ? "D"   :
                                                       "60"
default_sl_percent  = strategy_type == "Scalping"   ? 0.5  :
                       strategy_type == "Long-Term" ? 2.0  :
                                                       1.0
default_tp_percent  = strategy_type == "Scalping"   ? 1.0  :
                       strategy_type == "Long-Term" ? 10.0 :
                                                       5.0

// === Manual Overrides ===
override_trend = input.bool(false, "Override Trend Period", group="Manual Settings")
trend_period   = override_trend ? input.int(20, "Manual Trend Period", minval=1, group="Manual Settings") : default_trend_period

override_htf = input.bool(false, "Override HTF", group="Manual Settings")
htf          = override_htf ? input.timeframe("60", "Manual HTF", group="Manual Settings") : default_htf

override_risk = input.bool(false, "Override SL/TP", group="Manual Settings")
sl_percent    = override_risk ? input.float(1.0, "Manual Stop Loss (%)", minval=0.1, maxval=10, step=0.1, group="Manual Settings") : default_sl_percent
tp_percent    = override_risk ? input.float(2.0, "Manual Take Profit (%)", minval=0.1, maxval=20, step=0.1, group="Manual Settings") : default_tp_percent

// === Trade Direction Option ===
trade_dir = input.string("Both", title="Trade Direction", options=["Both", "Bullish Only", "Bearish Only"], group="Strategy Mode")

// === Visual Settings ===
show_trendlines = input.bool(true, "Show Trendlines", group="Visual Settings")

// === Trendline Detection ===
var line trendline = na
var float trend_value = na
var bool trend_direction_up = false

pivot_high = ta.pivothigh(high, trend_period, trend_period)
pivot_low = ta.pivotlow(low, trend_period, trend_period)

if not na(pivot_high)
    trend_value := pivot_high
    trend_direction_up := false
    if show_trendlines
        trendline := line.new(bar_index[trend_period], pivot_high, bar_index, high, color=color.new(color.blue, 50), width=2)

if not na(pivot_low)
    trend_value := pivot_low
    trend_direction_up := true
    if show_trendlines
        trendline := line.new(bar_index[trend_period], pivot_low, bar_index, low, color=color.new(color.red, 50), width=2)

// === Higher Timeframe Trend ===
htf_close = request.security(syminfo.tickerid, htf, close)
htf_trend_up = htf_close > htf_close[1]
htf_trend_down = htf_close < htf_close[1]

// === Trade Logic ===
long_condition = ta.crossover(close, trend_value) and htf_trend_up and trend_direction_up
short_condition = ta.crossunder(close, trend_value) and htf_trend_down and not trend_direction_up

take_long = (trade_dir == "Both" or trade_dir == "Bullish Only") and long_condition
take_short = (trade_dir == "Both" or trade_dir == "Bearish Only") and short_condition

// === Entry/Exit ===
if strategy.position_size == 0
    if take_long
        strategy.entry("Long", strategy.long)
        strategy.exit("Long Exit", "Long", stop=close * (1 - sl_percent / 100), limit=close * (1 + tp_percent / 100))

    if take_short
        strategy.entry("Short", strategy.short)
        strategy.exit("Short Exit", "Short", stop=close * (1 + sl_percent / 100), limit=close * (1 - tp_percent / 100))

// === Manual Exit ===
if strategy.position_size > 0 and ta.crossunder(close, trend_value)
    strategy.close("Long")
if strategy.position_size < 0 and ta.crossover(close, trend_value)
    strategy.close("Short")