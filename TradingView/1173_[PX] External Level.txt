// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=4

// ------------------------------------------------------------
// ---------------- Author: Pascal Simon (paaax) --------------
// ------------------------------------------------------------
// ---------------- www.tradingview.com/u/paaax/---------------
// ------------------------------------------------------------

study("[PX] External Level", overlay=true)
// INPUT    {
i_rColor = input("black", title="Resistance Level Color", options=["aqua","black","blue","fuchsia","gray","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow"])
i_rStyle = input("solid", title="Resistance Level Style", options=['solid','dotted','dashed'])
i_rWidth = input(2, title="Resistance Level Width")

i_sColor = input("red", title="Support Level Color", options=["aqua","black","blue","fuchsia","gray","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow"])
i_sStyle = input("solid", title="Support Level Style", options=['solid','dotted','dashed'])
i_sWidth = input(2, title="Support Level Width")

i_extend = input("right", title="Extend", options=["none", "left", "right", "both"])
i_src = input(title="Source", type=input.source, defval=close)
//} INPUT
// FUNCTION {

//{
f_set_color(_selection)=>
    ret = color.black
    if _selection == "gray"
        ret := color.gray
    if _selection == "green"
        ret := color.green
    if _selection == "aqua"
        ret := color.aqua
    if _selection == "blue"
        ret := color.blue
    if _selection == "fuchsia"
        ret := color.fuchsia
    if _selection == "lime"
        ret := color.lime
    if _selection == "maroon"
        ret := color.maroon
    if _selection == "navy"
        ret := color.navy
    if _selection == "white"
        ret := color.white
    if _selection == "yellow"
        ret := color.yellow
    if _selection == "olive"
        ret := color.olive
    if _selection == "orange"
        ret := color.orange
    if _selection == "purple"
        ret := color.purple
    if _selection == "red"
        ret := color.red
    if _selection == "silver"
        ret := color.silver
    if _selection == "teal"
        ret := color.teal
    ret
//} --- f_set_color()
//{
f_set_style(_selection)=>
    ret = line.style_solid
    if _selection == "dotted"
        ret := line.style_dotted
    if _selection == "dashed"
        ret := line.style_dashed
    ret
//} --- f_set_style()
//{
f_set_extend(_selection)=>
    ret = extend.none
    if _selection == "left"
        ret := extend.left
    if _selection == "right"
        ret := extend.right
    if _selection == "both"
        ret := extend.both
    ret
//} --- f_set_extend()
//} FUNCTION
// INIT{
var r01 = line(na), var r02 = line(na), var r03 = line(na), var r04 = line(na), var r05 = line(na)
var r06 = line(na), var r07 = line(na), var r08 = line(na), var r09 = line(na), var r10 = line(na)
var s01 = line(na), var s02 = line(na), var s03 = line(na), var s04 = line(na), var s05 = line(na)
var s06 = line(na), var s07 = line(na), var s08 = line(na), var s09 = line(na), var s10 = line(na)
//} INIT
// LOGIC    {
if i_src[1] == 1.0

    // delete oldest level
    line.delete(r10)

    // move old levels
    r10 := r09
    r09 := r08
    r08 := r07
    r07 := r06
    r06 := r05
    r05 := r04
    r04 := r03
    r03 := r02
    r02 := r01

    // print new level
    r01 := line.new(
         x1     = bar_index[1],
         y1     = high[1],
         x2     = bar_index,
         y2     = high[1],
         color  = f_set_color(i_rColor),
         extend = f_set_extend(i_extend),
         width  = i_rWidth,
         style  = f_set_style(i_rStyle))

else if i_src[1] == -1.0

    // delete oldest level
    line.delete(s10)

    // move old levels
    s10 := s09
    s09 := s08
    s08 := s07
    s07 := s06
    s06 := s05
    s05 := s04
    s04 := s03
    s03 := s02
    s02 := s01

    // print new level
    s01 := line.new(
         x1     = bar_index[1],
         y1     = low[1],
         x2     = bar_index,
         y2     = low[1],
         color  = f_set_color(i_sColor),
         extend = f_set_extend(i_extend),
         width  = i_sWidth,
         style  = f_set_style(i_sStyle))

//} LOGIC