// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © erdas0

//@version=5
strategy("Strategy SuperTrend SDI Webhook", overlay=false, slippage = 1, commission_value = 0.035, default_qty_type=strategy.percent_of_equity, default_qty_value=50, initial_capital = 1000, process_orders_on_close = true)
// Start and end dates
dts=input(false,"",inline="dts")
dte=input(false,"",inline="dte")
start_date = input.time(timestamp("2023-01-01 00:00:00"), "Start Date",inline="dts")
end_date = input.time(timestamp("2124-01-01"), "End Date",inline="dte")
times = (dts ? start_date:time) <= time and time <= (dte ? end_date:time)
// Initial capital
leverage= input.int(10, "Leverage", minval=1,inline="qty") //Leverage Test
usdprcnt= input.int(50, "%", minval=1,inline="qty")
qty= input(false,"Inital USDT ◨",inline="qty")
initial_capital = qty ? (strategy.initial_capital+strategy.netprofit)/close*leverage*usdprcnt/100 : na
//Level Inputs
tpon=input(false,"Take Profit ◨",group ="Take Profit/Stop Loss", inline="1")
sloc=input(false,"Stop Loss ◨",group ="Take Profit/Stop Loss", inline="1")
tron=input(false,"Trailing ◨",group ="Take Profit/Stop Loss", inline="1")

tp = tpon ? input.float(25, "Take Profit %", minval=0.1,step=0.1,group ="Take Profit/Stop Loss", inline="2") : na
sl = sloc ? input.float(4.8, "Stop Loss %", minval=0.1,step=0.1,group ="Take Profit/Stop Loss", inline="2") : na
tr = tron ? input.float(1.9, "Trailing Stop ", minval=0.1,step=0.1,group ="Take Profit/Stop Loss", inline="4") : na

// Take profit and stop loss levels
dir=strategy.position_size/math.abs(strategy.position_size) //Directions
newtrade=strategy.closedtrades>strategy.closedtrades[1]
pftpcnt=dir<0 ? (strategy.position_avg_price-low)/strategy.position_avg_price*100 : dir>0 ? (high-strategy.position_avg_price)/strategy.position_avg_price*100 : na //max profit

pftpr= (1 + pftpcnt*dir/100) * strategy.position_avg_price //Trailing Price
take_profit = (1 + tp*dir/100) * strategy.position_avg_price
stop_loss = (1 - sl*dir/100) * strategy.position_avg_price

var float maxpft=na //max profit percent
maxpft := newtrade ? 0 : strategy.openprofit > 0 ?  math.max(pftpcnt,maxpft) : maxpft
var float Tr=na //Trailing
Tr := newtrade ? na : pftpcnt >= tr and maxpft-pftpcnt >= tr ?  close : Tr

//Inputs
ocspt=input(true, title='SuperTrend ◨',group="Inputs",inline="2")
ocsd=input(true, title='SDI ◨',group="Inputs",inline="2")
occrs=input(false, title='With Cross ◨',group="Inputs",inline="2")
dilen = input.int(3, title="DI Length", minval=1,group ="SDI", inline="5")
sdi = input.int(7, title="DI Smooth", minval=1,group ="SDI", inline="5")

//SuperTrend
atrPeriod = input.int(10,    "ATR Length", minval = 1, group ="SuperTrend", inline="6")
factor =    input.float(1.8, "Factor",     minval = 0.01, step = 0.01, group ="SuperTrend", inline="6")

[supertrend, direction] = ta.supertrend(factor, atrPeriod)
up= direction<direction[1] ? supertrend :na
down=direction>direction[1] ? supertrend :na
clr = direction==-1 ? color.green : direction==1 ? color.red : na

upTrend =    plot(direction==-1 ? supertrend : na, "Up Trend",   color = clr, style = plot.style_linebr, force_overlay = true)
downTrend =  plot(direction== 1 ? supertrend : na, "Down Trend", color = clr,   style = plot.style_linebr, force_overlay = true)
plotshape(up, title="Uptrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=clr, force_overlay = true)
plotshape(down, title="Downtrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=clr, force_overlay = true)
bodyMiddle = plot(barstate.isfirst ? na : hl2, "Body Middle",display = display.none,editable = false)

//SDI
dirmov(len,smt) =>
    up = ta.change(high)
    down = -ta.change(low)
    plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
    minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
    truerange = ta.rma(ta.tr, len)
    plus = ta.ema(fixnan(100 * ta.rma(plusDM, len) / truerange),smt)
    minus = ta.ema(fixnan(100 * ta.rma(minusDM, len) / truerange),smt)
    [plus, minus]
[plus,minus]=dirmov(dilen,sdi)
sdcl= plus>minus ? color.new(color.green,90) :plus<minus ? color.new(color.red,90) : na
barcolor(sdcl,title="PM Color",display = display.none)
//Plot
pl=plot(ocsd ? plus:na,"Plus",color=color.green)
mn=plot(ocsd ? minus:na,"Minus",color=color.red)
fill(pl, mn, sdcl, "Up Fill", fillgaps = false)

// Conditions
Long = (ocsd ? plus>minus:true) and (ocspt ? (occrs ? up : up or direction==-1):true)
Short = (ocsd ? plus<minus:true) and (ocspt ? (occrs ? down : down or direction==1):true)

// Strategy conditions
if Long and times
    strategy.close("Short","Close S")
    strategy.entry("Long", strategy.long, comment="L",qty = initial_capital)
if strategy.position_size>0
    strategy.exit("Long LTP", "Long", limit=take_profit, stop=stop_loss, comment="LSL",comment_profit = "LTP")
if Tr and strategy.position_size>0
    strategy.exit("Long LTP", "Long", limit=take_profit, stop=pftpr, comment="Tr",comment_profit = "LTP")

if Short and times
    strategy.close("Long","Close L")
    strategy.entry("Short", strategy.short, comment="S",qty = initial_capital)
if strategy.position_size<0
    strategy.exit("Short STP", "Short", limit=take_profit, stop=stop_loss, comment="SSL",comment_profit ="STP" )
if Tr and strategy.position_size<0
    strategy.exit("Short STP", "Short", limit=take_profit, stop=pftpr, comment="Tr",comment_profit = "STP")

if not times
    strategy.close_all()