//@version=6
strategy("SmartScale Envelope DCA",
     overlay=true,
     pyramiding=8,
     default_qty_type=strategy.cash,
     default_qty_value=25,         // Order size = $25 CAD
     initial_capital=200,          // Initial capital = $200 CAD
     currency=currency.CAD)        // Base currency = CAD

// === Inputs
len                = input.int(13, title="Envelope Length", minval=1)
percent            = input.float(6.6, title="Envelope % Offset", step=0.1) / 100
src                = input(close, title="Source")
exponential        = input(false)
stopLossPctInput   = input.float(15.0, title="Stop Loss %", minval=0.1, step=0.1)
takeProfitPctInput = input.float(5.0, title="Take Profit % from Avg Entry", minval=0.1, step=0.1)
cooldown           = input.int(7, title="Candles Between Buys")  // moved to bottom

stopLossPct    = stopLossPctInput / 100
takeProfitPct  = takeProfitPctInput / 100
maxBuys        = 8  // Hardcoded max buy-ins

// === Envelope Calculation
basis = exponential ? ta.ema(src, len) : ta.sma(src, len)
upper = basis * (1 + percent)
lower = basis * (1 - percent)

// === Limit Backtest to Last 365 Days
startDate   = timestamp("GMT-5", year(timenow), month(timenow), dayofmonth(timenow)) - 365 * 24 * 60 * 60 * 1000
inDateRange = time >= startDate

// === State Tracking
var float avgEntryPrice = na
var float lastBuyPrice  = na
var int buyCount        = 0
var int lastBuyBar      = na

// === Trend Detection
isUptrend = basis > basis[1]

// === Entry Conditions
lowBelowLower     = low < lower
cooldownPassed    = na(lastBuyBar) or (bar_index - lastBuyBar >= cooldown)
belowAvgEntry     = na(avgEntryPrice) or close < avgEntryPrice
lowerThanLastBuy  = na(lastBuyPrice) or close < lastBuyPrice
allowBuyIn        = (belowAvgEntry and lowerThanLastBuy) or isUptrend
highAboveUpper    = high > upper

// === Exit Conditions
sellCondition     = not na(avgEntryPrice) and close >= avgEntryPrice * (1 + takeProfitPct)
stopLossTriggered = not na(avgEntryPrice) and close <= avgEntryPrice * (1 - stopLossPct)

// === Buy Logic
if inDateRange and lowBelowLower and cooldownPassed and buyCount < maxBuys and allowBuyIn and (na(lastBuyPrice) or close <= lastBuyPrice)
    buyCount += 1
    strategy.entry("Buy in " + str.tostring(buyCount), strategy.long)
    lastBuyBar := bar_index
    lastBuyPrice := close
    avgEntryPrice := na(avgEntryPrice) ? close : (avgEntryPrice * (buyCount - 1) + close) / buyCount

// === Sell Logic
if strategy.position_size > 0 and highAboveUpper and sellCondition
    strategy.close_all(comment="Take Profit")
    avgEntryPrice := na
    buyCount := 0
    lastBuyBar := na
    lastBuyPrice := na

// === Stop Loss Logic
if strategy.position_size > 0 and stopLossTriggered
    strategy.close_all(comment="Stop Loss Hit")
    avgEntryPrice := na
    buyCount := 0
    lastBuyBar := na
    lastBuyPrice := na

// === Plot Envelope
plot(basis, "Basis", color=color.orange)
u = plot(upper, "Upper", color=color.blue)
l = plot(lower, "Lower", color=color.blue)
fill(u, l, color=color.rgb(33, 150, 243, 95), title="Envelope Background")

// === Plot Avg Entry Price
plot(strategy.position_size > 0 and not na(avgEntryPrice) ? avgEntryPrice : na,
     title="Avg Entry Price",
     color=color.rgb(173, 195, 226),
     linewidth=2,
     style=plot.style_line)