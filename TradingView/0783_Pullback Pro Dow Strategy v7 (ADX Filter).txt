//@version=5
strategy("Pullback Pro Dow Strategy v7 (ADX Filter)",
         shorttitle="Pullback Pro v7 ADX",
         overlay=true,
         initial_capital=10000,
         default_qty_type=strategy.percent_of_equity,
         default_qty_value=10,
         commission_type=strategy.commission.percent,
         commission_value=0.04,
         process_orders_on_close=true)

// --- Grouping ---
string GP_DOW = "① Dow Theory Settings"
string GP_ENTRY = "② Entry Logic (Pullback)"
string GP_RISK = "③ Risk & Exit Management"
string GP_FILTER = "④ Filters"
string GP_DISPLAY = "Display Settings"

// --- Dow Theory Settings ---
pivotLookback = input.int(10, title="Pivot Lookback Period", minval=1, group=GP_DOW)

// --- Entry Logic (Pullback) ---
pullbackEmaLength = input.int(21, title="Pullback EMA Length", group=GP_ENTRY, tooltip="このEMAへの価格の接近を「押し目/戻り」と判断します。")

// --- Risk & Exit Management ---
riskRewardRatio1 = input.float(1.5, "Take Profit 1 R:R", minval=0.1, step=0.1, group=GP_RISK, tooltip="TP1のリスクリワード比率")
qtyPercentTP1 = input.int(50, title="Take Profit 1 (%)", minval=1, maxval=100, group=GP_RISK, tooltip="TP1で決済するポジションの割合(%)")
riskRewardRatio2 = input.float(3.0, "Take Profit 2 R:R", minval=0.1, step=0.1, group=GP_RISK, tooltip="TP2のリスクリワード比率")

// --- Filters (Modified from RSI to ADX) ---
useAdxFilter = input.bool(true, title="Use ADX Trend Filter", group=GP_FILTER)
adxLength = input.int(14, "ADX Length", group=GP_FILTER)
adxThreshold = input.float(25, "ADX Threshold", group=GP_FILTER, tooltip="この値よりADXが大きい場合のみエントリーします。")

// --- Display Settings ---
showPivots = input.bool(true, title="Show Pivots", group=GP_DISPLAY)
showEma = input.bool(true, title="Show Pullback EMA", group=GP_DISPLAY)

// --- Indicator Calculations (Modified from RSI to ADX) ---
pivotHighPrice = ta.pivothigh(high, pivotLookback, pivotLookback)
pivotLowPrice = ta.pivotlow(low, pivotLookback, pivotLookback)
pullbackEma = ta.ema(close, pullbackEmaLength)
[diPlus, diMinus, adx] = ta.dmi(adxLength, adxLength) // ADX calculation

// --- Pivot & Trend Determination ---
var float lastPivotHigh = na, var float prevPivotHigh = na
var float lastPivotLow = na, var float prevPivotLow = na
if not na(pivotHighPrice)
    prevPivotHigh := lastPivotHigh
    lastPivotHigh := pivotHighPrice
if not na(pivotLowPrice)
    prevPivotLow := lastPivotLow
    lastPivotLow := pivotLowPrice

var int trendDirection = 0
if not na(lastPivotHigh) and not na(prevPivotHigh) and not na(lastPivotLow) and not na(prevPivotLow)
    isUptrend = lastPivotHigh > prevPivotHigh and lastPivotLow > prevPivotLow
    isDowntrend = lastPivotHigh < prevPivotHigh and lastPivotLow < prevPivotLow
    if isUptrend
        trendDirection := 1
    else if isDowntrend
        trendDirection := -1
    else
        trendDirection := 0

// --- Entry Conditions (Modified from RSI to ADX) ---
bool isUptrendConfirmed = trendDirection == 1
bool isDowntrendConfirmed = trendDirection == -1
bool buyPullback = isUptrendConfirmed and ta.crossunder(low, pullbackEma)
bool sellRally = isDowntrendConfirmed and ta.crossover(high, pullbackEma)
bool adxTrendOk = not useAdxFilter or adx > adxThreshold // ADX filter logic
bool goLong = buyPullback and adxTrendOk
bool goShort = sellRally and adxTrendOk

// --- Strategy State & Risk Management ---
var float stopLossPrice = na
var float takeProfitPrice1 = na
var float takeProfitPrice2 = na
var bool tp1_hit = false

// Entry Logic
if strategy.position_size == 0
    tp1_hit := false // Reset TP1 flag on new trade
    if goLong
        stopLossPrice := lastPivotLow
        riskSize = close - stopLossPrice
        if riskSize > 0
            takeProfitPrice1 := close + (riskSize * riskRewardRatio1)
            takeProfitPrice2 := close + (riskSize * riskRewardRatio2)
            strategy.entry("L", strategy.long)

    if goShort
        stopLossPrice := lastPivotHigh
        riskSize = stopLossPrice - close
        if riskSize > 0
            takeProfitPrice1 := close - (riskSize * riskRewardRatio1)
            takeProfitPrice2 := close - (riskSize * riskRewardRatio2)
            strategy.entry("S", strategy.short)

// ▼▼▼【最終修正版 v7】決済ロジック ▼▼▼
if strategy.position_size > 0 // ロングポジション("L")の決済ロジック
    // --- Stop Loss ---
    if low <= stopLossPrice
        strategy.close("L", comment="SL Hit")
        tp1_hit := false

    // --- Take Profit 1 ---
    if not tp1_hit and high >= takeProfitPrice1
        strategy.close("L", comment="TP1 Hit", qty_percent=qtyPercentTP1)
        tp1_hit := true

    // --- Take Profit 2 ---
    if tp1_hit and high >= takeProfitPrice2
        strategy.close("L", comment="TP2 Hit")
        tp1_hit := false

if strategy.position_size < 0 // ショートポジション("S")の決済ロジック
    // --- Stop Loss ---
    if high >= stopLossPrice
        strategy.close("S", comment="SL Hit")
        tp1_hit := false

    // --- Take Profit 1 ---
    if not tp1_hit and low <= takeProfitPrice1
        strategy.close("S", comment="TP1 Hit", qty_percent=qtyPercentTP1)
        tp1_hit := true

    // --- Take Profit 2 ---
    if tp1_hit and low <= takeProfitPrice2
        strategy.close("S", comment="TP2 Hit")
        tp1_hit := false

// --- Plotting ---
plot(showEma ? pullbackEma : na, "Pullback EMA", color=color.orange)
plotshape(showPivots ? pivotHighPrice : na, style=shape.xcross, location=location.absolute, color=color.red, size=size.tiny)
plotshape(showPivots ? pivotLowPrice : na, style=shape.xcross, location=location.absolute, color=color.blue, size=size.tiny)