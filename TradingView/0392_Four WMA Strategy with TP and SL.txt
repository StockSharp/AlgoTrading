//@version=6
strategy('Four MA Strategy with TP and SL', shorttitle = '4MA TP/SL', overlay = true)

// Inputs for MA lengths
longM1 = input.int(10, title = 'Long MA1')
longM2 = input.int(20, title = 'Long MA2')
shortM1 = input.int(30, title = 'Short MA1')
shortM2 = input.int(40, title = 'Short MA2')

// Inputs for MA Type
maTypeInput = input.string('WMA', title = 'Moving Average Type', options = ['SMA', 'EMA', 'WMA', 'VWMA', 'RMA'])

// Inputs for TP and SL activation
tp_sl_active = input.bool(true, title = 'Enable TP and SL')

// Inputs for TP and SL
tp_percent = input.float(1.0, title = 'Take Profit %') / 100
sl_percent = input.float(1.0, title = 'Stop Loss %') / 100

// Direction Choice
direction = input.string('Both', title = 'Trade Direction', options = ['Long Only', 'Short Only', 'Both'])

// Alternate Exit Conditions
enable_alt_exit = input.bool(false, title = 'Enable Alternate Exit Condition')
alt_exit_ma_choice = input.string('Long MA1', title = 'MA for Alternate Exit', options = ['Long MA1', 'Long MA2', 'Short MA1', 'Short MA2'])

// Moving Average Calculation Function
ma(source, length, type) =>
    switch type
        'SMA' => ta.sma(source, length)
        'EMA' => ta.ema(source, length)
        'WMA' => ta.wma(source, length)
        'VWMA' => ta.vwma(source, length)
        'RMA' => ta.rma(source, length)

// Calculating MAs
longMA1 = ma(close, longM1, maTypeInput)
longMA2 = ma(close, longM2, maTypeInput)
shortMA1 = ma(close, shortM1, maTypeInput)
shortMA2 = ma(close, shortM2, maTypeInput)

// Resolving Alternate Exit MA
alt_exit_ma = switch alt_exit_ma_choice
    'Long MA1' => longMA1
    'Long MA2' => longMA2
    'Short MA1' => shortMA1
    'Short MA2' => shortMA2

// Entry and Exit Conditions
longCondition = ta.crossover(longMA1, longMA2)
longExitCondition = ta.crossunder(longMA1, longMA2)
shortCondition = ta.crossunder(shortMA1, shortMA2)
shortExitCondition = ta.crossover(shortMA1, shortMA2)

// Alternate Exit Condition
priceCrossAltExit = close < alt_exit_ma

// Strategy Entry and Exit
if direction == 'Both' or direction == 'Long Only'
    if longCondition
        strategy.entry('Long', strategy.long, comment = '')
    if tp_sl_active
        strategy.exit('Long TP/SL', 'Long', limit = strategy.position_avg_price * (1 + tp_percent), stop = strategy.position_avg_price * (1 - sl_percent))
    if longExitCondition or (enable_alt_exit and priceCrossAltExit)
        strategy.close('Long', comment = '')

if direction == 'Both' or direction == 'Short Only'
    if shortCondition
        strategy.entry('Short', strategy.short, comment = 'Short entry')
    if tp_sl_active
        strategy.exit('Short TP/SL', 'Short', limit = strategy.position_avg_price * (1 - tp_percent), stop = strategy.position_avg_price * (1 + sl_percent))
    if shortExitCondition or (enable_alt_exit and priceCrossAltExit)
        strategy.close('Short', comment = 'Short Exit')

// Plotting MAs
plot(longMA1, color = color.blue, title = 'Long MA1')
plot(longMA2, color = color.orange, title = 'Long MA2')
plot(shortMA1, color = color.red, title = 'Short MA1')
plot(shortMA2, color = color.purple, title = 'Short MA2')