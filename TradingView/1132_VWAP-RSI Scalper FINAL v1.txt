//@version=6
strategy("VWAP-RSI Scalper FINAL v1", overlay=true, default_qty_type=strategy.fixed, default_qty_value=1)

// === PARAMETERS ===
rsiLen       = input.int(3, "RSI Length")
rsiOS        = input.int(35, "RSI Oversold")
rsiOB        = input.int(70, "RSI Overbought")
emaLen       = input.int(50, "EMA Length")
sessionStart = input.int(9, "Session Start Hour (ET)")
sessionEnd   = input.int(16, "Session End Hour (ET)")
maxTrades    = input.int(3, "Max Trades Per Day")
atrLen       = input.int(14, "ATR Length")
slATR        = input.float(1.0, "Stop ATR Mult")
tpATR        = input.float(2.0, "Target ATR Mult")

// === INDICATORS ===
rsiVal   = ta.rsi(close, rsiLen)
emaVal   = ta.ema(close, emaLen)
vwapVal  = ta.vwap(hlc3)
atr      = ta.atr(atrLen)

// === SESSION CONTROL ===
inSession = timeframe.isintraday ? (hour >= sessionStart and hour < sessionEnd) : true

// === TRADE LIMITER ===
var int tradesToday = 0
if ta.change(time("D")) != 0
    tradesToday := 0

// === ENTRY LOGIC ===
// LONG = RSI oversold, above VWAP, above EMA, during session, limit trades/day
canLong  = rsiVal < rsiOS and close > vwapVal and close > emaVal and inSession and tradesToday < maxTrades and strategy.position_size == 0
canShort = rsiVal > rsiOB and close < vwapVal and close < emaVal and inSession and tradesToday < maxTrades and strategy.position_size == 0

if canLong
    strategy.entry("Long", strategy.long)
    tradesToday += 1

if canShort
    strategy.entry("Short", strategy.short)
    tradesToday += 1

// === EXIT LOGIC ===
if strategy.position_size > 0
    strategy.exit("Long Exit", from_entry="Long", stop=strategy.position_avg_price - atr*slATR, limit=strategy.position_avg_price + atr*tpATR)
if strategy.position_size < 0
    strategy.exit("Short Exit", from_entry="Short", stop=strategy.position_avg_price + atr*slATR, limit=strategy.position_avg_price - atr*tpATR)

// === DEBUG PLOTS ===
plot(vwapVal, "VWAP", color=color.orange)
plot(emaVal,  "EMA", color=color.teal)
hline(rsiOS,  "RSI OS", color=color.new(color.green, 75))
hline(rsiOB,  "RSI OB", color=color.new(color.red, 75))

plotshape(canLong,  style=shape.triangleup,   location=location.belowbar, color=color.green, size=size.tiny, title="Long Signal")
plotshape(canShort, style=shape.triangledown, location=location.abovebar, color=color.red,   size=size.tiny, title="Short Signal")