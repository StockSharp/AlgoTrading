// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © RicardoSantos.

//@version=5
string  TITLE = 'MicuRobert EMA Cross Strategy'
string STITLE = 'S'
strategy(TITLE, STITLE, true, pyramiding=0, initial_capital=100000, currency=currency.USD)

bool USE_TRADESESSION = input.bool(true, 'Use Trading Session?')
bool USE_TRAILINGSTOP = input.bool(true, 'Use Trailing Stop?')
string trade_session = input.session('0400-1500', 'Trade Session:', confirm=false)
bool istradingsession = not USE_TRADESESSION ? false : not na(time('1', trade_session))

bgcolor(istradingsession ? #787b8680 : color(na))

float trade_size = input.float(10000.0, 'Trade Size:')
float tp = input.float (55.0, 'Take profit in pips:') * (syminfo.mintick * 10.0)
float sl = input.float (22.0, 'Stop loss in pips:') * (syminfo.mintick * 10.0)
int ma_length00 = input.int(5, 'EMA length:')
int ma_length01 = input.int(34, 'DEMA length:')
float price = input.source(open, 'Price source:')

//  ||--- NO LAG EMA, Credit LazyBear:  ---||
f_LB_zlema (float _src, int _length) =>
    float _ema1  = ta.ema(_src, _length)
    float _ema2  = ta.ema(_ema1, _length)
    float _d     = _ema1 - _ema2
    float _zlema = _ema1 + _d
    _zlema
//  ||-------------------------------------||

float ma00 = f_LB_zlema(price, ma_length00)
float ma01 = f_LB_zlema(price, ma_length01)

plot(ma00, 'M0', color.black)
plot(ma01, 'M1', color.black)

bool isnewbuy = ta.change(strategy.position_size) > 0 and ta.change(strategy.opentrades) > 0
bool isnewsel = ta.change(strategy.position_size) < 0 and ta.change(strategy.opentrades) > 0

float buy_entry_price = na , buy_entry_price := isnewbuy ? price : buy_entry_price[1]
float sel_entry_price = na , sel_entry_price := isnewsel ? price : sel_entry_price[1]

plot(buy_entry_price, 'BE', strategy.position_size <= 0 ? na : color.aqua, 1, plot.style_circles)
plot(sel_entry_price, 'SE', strategy.position_size >= 0 ? na : color.aqua, 1, plot.style_circles)

float buy_appex = na , buy_appex := na(buy_appex[1]) ? price : isnewbuy ? high : high >= buy_appex[1] ? high : buy_appex[1]
float sel_appex = na , sel_appex := na(sel_appex[1]) ? price : isnewsel ? low : low <= sel_appex[1] ? low : sel_appex[1]

plot(buy_appex, 'BA', strategy.position_size <= 0 ? na : color.teal, 1, plot.style_circles)
plot(sel_appex, 'SA', strategy.position_size >= 0 ? na : color.teal, 1, plot.style_circles)

float buy_ts = buy_appex - sl
float sel_ts = sel_appex + sl

plot(buy_ts, 'Bts', strategy.position_size <= 0 ? na : color.red, 1, plot.style_circles)
plot(sel_ts, 'Sts', strategy.position_size >= 0 ? na : color.red, 1, plot.style_circles)

bool buy_cond1 = ta.crossover(ma00, ma01) and (USE_TRADESESSION ? istradingsession : true)
bool buy_cond0 = ta.crossover(price, ma00) and ma00 > ma01 and (USE_TRADESESSION ? istradingsession : true)
bool buy_entry = buy_cond1 or buy_cond0
bool buy_close = (not USE_TRAILINGSTOP ? low <= buy_entry_price - sl: low <= buy_ts) or high>=buy_entry_price+tp//high>=last_traded_price + tp or low<=last_traded_price - sl //high >= hh or
bool sel_cond1 = ta.crossunder(ma00, ma01) and (USE_TRADESESSION ? istradingsession : true)
bool sel_cond0 = ta.crossunder(price, ma00) and ma00 < ma01 and (USE_TRADESESSION ? istradingsession : true)
bool sel_entry = sel_cond1 or sel_cond0
bool sel_close = (not USE_TRAILINGSTOP ? high >= sel_entry_price + sl : high >= sel_ts) or low<=sel_entry_price-tp//low<=last_traded_price - tp or high>=last_traded_price + sl //low <= ll or

if buy_entry
    strategy.entry('buy', strategy.long, qty=trade_size, comment='buy')
if buy_close
    strategy.close('buy')
if sel_entry
    strategy.entry('sell', strategy.short, qty=trade_size, comment='sell')
if sel_close
    strategy.close('sell')