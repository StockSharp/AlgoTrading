//@version=6
strategy(title = 'Keltner Channel Based Grid', shorttitle = 'KC Grid', overlay = true, pyramiding = 20, initial_capital = 100000, calc_on_every_tick = true)

// Strategy time range
startDate = input.time(title = 'Date', defval = timestamp('2020-01-01T00:00:00'))
endDate = input.time(title = 'Date', defval = timestamp('2026-01-01T00:00:00'))

inTime = time > startDate and time < endDate

// Inputs
NumGrid = input(12, 'Number of Grids')
length = input.int(10, minval = 1)
kcRateMult = input(1.33, 'Grid Coefficient')
src = input(close, title = 'Source')
exp = input(true, 'Use Exponential MA')
BandsStyle = input.string('Average True Range', options = ['Average True Range', 'True Range', 'Range'], title = 'Bands Style')

// Moving average calculation
esma(source, length) =>
    s = ta.sma(source, length)
    e = ta.ema(source, length)
    exp ? e : s

ma = esma(src, length)
rangema = BandsStyle == 'True Range' ? ta.tr(true) : BandsStyle == 'Average True Range' ? ta.atr(length) : ta.rma(high - low, length)
bandWidth = rangema * kcRateMult
upper = ma + bandWidth
lower = ma - bandWidth

// Plotting
u = plot(upper, color = #2962FF, title = 'Upper')
plot(ma, color = #2962FF, title = 'Basis')
l = plot(lower, color = #2962FF, title = 'Lower')
fill(u, l, color = color.rgb(33, 150, 243, 95), title = 'Background')

// Position adjustment logic
changePosTo(x) =>
    if strategy.position_size < x
        strategy.order('buy', strategy.long, math.round(x - strategy.position_size, 2))
    if strategy.position_size > x
        strategy.order('sell', strategy.short, math.round(strategy.position_size - x, 2))

maxMount = strategy.initial_capital / close

kcRate = (close - ma) / bandWidth
targetPosition = kcRate * maxMount * -1

if targetPosition > maxMount
    targetPosition := maxMount
    targetPosition
if targetPosition < -maxMount
    targetPosition := -maxMount
    targetPosition

diff = math.abs(targetPosition - strategy.position_size)
if diff >= maxMount / NumGrid and inTime
    changePosTo(targetPosition)

// Debugging plots (hidden)
plot(strategy.position_size, 'Pos', color.fuchsia, display = display.none)
plot(kcRate, 'kcRate', color.lime, display = display.none)
plot(targetPosition, 'targetPosition', color.maroon, display = display.none)