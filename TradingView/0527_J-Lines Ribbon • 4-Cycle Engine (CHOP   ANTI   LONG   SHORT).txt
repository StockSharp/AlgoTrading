//@version=6
strategy("J-Lines Ribbon • 4-Cycle Engine (CHOP / ANTI / LONG / SHORT)",
         overlay           = true,
         initial_capital   = 100000,
         default_qty_type  = strategy.percent_of_equity,
         default_qty_value = 10)

//─────────────────────────────────────────────
// 1 USER INPUTS
//─────────────────────────────────────────────
pivotLeft      = input.int(5,  "Pivot-Left",  minval = 1)
pivotRight     = input.int(5,  "Pivot-Right", minval = 1)
chopRibbonPct = input.float(0.60 ,  "Chop ribbon ≤ %",      step = 0.05)
antiTolPct    = input.float(0.90 ,  "ANTI tol % (72-89)",    step = 0.05)



//─────────────────────────────────────────────
// 2 EMAs
//─────────────────────────────────────────────
ema72   = ta.ema(close,  72)
ema89   = ta.ema(close,  89)
ema126  = ta.ema(close, 126)
ema267  = ta.ema(close, 267)
ema360  = ta.ema(close, 360)
ema445  = ta.ema(close, 445)

//─────────────────────────────────────────────
// 3 PRECOMPUTE ALL CROSS EVENTS  ← NEW
//─────────────────────────────────────────────
flipLongEvt   = ta.crossover(ema72, ema89)   // 72 crosses up over 89
flipShortEvt  = ta.crossunder(ema72, ema89)  // 72 crosses down below 89

xAbove72      = ta.crossover(close,  ema72)
xBelow72      = ta.crossunder(close, ema72)

xAbove126     = ta.crossover(close,  ema126)
xBelow126     = ta.crossunder(close, ema126)

//─────────────────────────────────────────────
// 4 SWING PIVOTS (for stops / CHOP)
//─────────────────────────────────────────────
ph       = ta.pivothigh(high, pivotLeft, pivotRight)
pl       = ta.pivotlow( low,  pivotLeft, pivotRight)
lastHigh = ta.valuewhen(not na(ph), ph, 0)
lastLow  = ta.valuewhen(not na(pl), pl, 0)

//─────────────────────────────────────────────
// 5.  CHOP / TREND TESTS – scalp edition
//─────────────────────────────────────────────
pivotLeft  := 3    // faster swing detection
pivotRight := 3

//─────────────────────────────────────────────
// 5.  CHOP / TREND TESTS – use ta.dmi()
//─────────────────────────────────────────────
diLen        = input.int(8 ,  "DI length"      , minval = 1)
adxSmoothLen = input.int(8 ,  "ADX smoothing"  , minval = 1)
adxFloor     = input.float(12, "Chop if ADX ≤" , step = 0.5)

// ta.dmi() returns [ +DI , –DI , ADX ]
[   _ ,    _ , adx ] = ta.dmi(diLen, adxSmoothLen)

// CHOP = very low ADX
inChop     = adx <= adxFloor

// no ANTI layer for 1-3 m pulses
trendLong  = not inChop and ema72 > ema89
trendShort = not inChop and ema72 < ema89


//─────────────────────────────────────────────
// 5.  CHOP & TREND TESTS  — scalp edition
//────────────────────────────────────────────-



//─────────────────────────────────────────────
// 6.  CYCLE STATE  +  ONE-SHOT BASE ENTRY
//────────────────────────────────────────────-
var string cycle        = "CHOP"   // persists across bars
var bool   newCycleFlag = false    // true only on the bar the state flips

if inChop and cycle != "CHOP"
    cycle         := "CHOP"
    newCycleFlag  := true
else if trendLong and cycle != "LONG"
    cycle         := "LONG"
    newCycleFlag  := true
else if trendShort and cycle != "SHORT"
    cycle         := "SHORT"
    newCycleFlag  := true
else
    newCycleFlag  := false   // no change this bar

// auto-flat exactly once when a fresh CHOP cycle starts
if newCycleFlag and cycle == "CHOP" and strategy.position_size != 0
    strategy.close_all(comment = "Flatten in CHOP")

// one-shot base entry on first bar of a new LONG / SHORT cycle
if newCycleFlag
    if cycle == "LONG"
        strategy.entry("Long Base",  strategy.long)
    if cycle == "SHORT"
        strategy.entry("Short Base", strategy.short)



//─────────────────────────────────────────────
// 8 RIBBON COLOURS
//─────────────────────────────────────────────
colTrend  = ema72 > ema89 ? color.green : color.red
colRibbon = cycle == "ANTI" ? color.yellow : colTrend
col126    = cycle == "ANTI" ? color.yellow : color.blue
col267    = cycle == "ANTI" ? color.yellow : color.purple
col360    = cycle == "ANTI" ? color.yellow : color.teal
col445    = cycle == "ANTI" ? color.yellow : color.fuchsia

p72  = plot(ema72,  color = colRibbon, linewidth = 2, title = "EMA 72")
p89  = plot(ema89,  color = colRibbon, linewidth = 2, title = "EMA 89")
plot(ema126, color = col126, title = "EMA 126")
plot(ema267, color = col267, title = "EMA 267")
plot(ema360, color = col360, title = "EMA 360")
plot(ema445, color = col445, title = "EMA 445")
fill(p72, p89, color = color.new(colRibbon, 80))
plot(adx,           title="ADX", color=color.orange)
hline(adxFloor,     title="Chop floor", color=color.gray)




//─────────────────────────────────────────────
// 8.5  ONE-SHOT BASE ENTRIES  (fire on first bar of LONG / SHORT)
//─────────────────────────────────────────────
if newCycleFlag
    if cycle == "LONG"
        strategy.entry("Long Base",  strategy.long)
    if cycle == "SHORT"
        strategy.entry("Short Base", strategy.short)



//─────────────────────────────────────────────
// 9 LONG-CYCLE ENGINE

if cycle == "LONG"
    if flipLongEvt
        strategy.entry("Long Flip", strategy.long)

    // 72-EMA rebound
    var dipped72 = false
    dipped72 := close < ema72 or (dipped72 and close < ema72)
    if dipped72 and xAbove72
        strategy.entry("ReLong 72", strategy.long)
        dipped72 := false

    // 126-EMA rebound
    var dipped126 = false
    dipped126 := (close < ema126 and close >= ema267) or
                 (dipped126 and close < ema126)
    if dipped126 and xAbove126
        strategy.entry("ReLong 126", strategy.long)
        dipped126 := false


    //─────────────────────────────────────────────
    // inside LONG cycle, just after the if cycle == "LONG" line:
    if strategy.position_size == 0 and ema72 > ema89
        strategy.entry("Long Base", strategy.long)

    // Take-profit: cross below 72
    if xBelow72
        strategy.close_all(comment = "TP @ EMA 72")

    // Stop-loss for rebounds
    strategy.exit("SL-72RL",  from_entry="ReLong 72",  stop = lastLow)
    strategy.exit("SL-126RL", from_entry="ReLong 126", stop = lastLow)

//─────────────────────────────────────────────
// 10 SHORT-CYCLE ENGINE
//─────────────────────────────────────────────
// inside SHORT cycle:
if strategy.position_size == 0 and ema72 < ema89
    strategy.entry("Short Base", strategy.short)

if cycle == "SHORT"
    if flipShortEvt
        strategy.entry("Short Flip", strategy.short)

    // 72-EMA rebound
    var topped72 = false
    topped72 := close > ema72 or (topped72 and close > ema72)
    if topped72 and xBelow72
        strategy.entry("ReShort 72", strategy.short)
        topped72 := false

    // 126-EMA rebound
    var topped126 = false
    topped126 := (close > ema126 and close <= ema267) or
                 (topped126 and close > ema126)
    if topped126 and xBelow126
        strategy.entry("ReShort 126", strategy.short)
        topped126 := false

    // TP / SL by pivots
    strategy.exit("TP/SL-Flip",  from_entry="Short Flip",  stop=lastHigh, limit=lastLow)
    strategy.exit("TP/SL-72RS",  from_entry="ReShort 72",  stop=lastHigh, limit=lastLow)
    strategy.exit("TP/SL-126RS", from_entry="ReShort 126", stop=lastHigh, limit=lastLow)

//─────────────────────────────────────────────
// 11 CYCLE BADGE  (label per bar)
//─────────────────────────────────────────────
labCol = cycle=="LONG"  ? color.new(color.green,70) :
         cycle=="SHORT" ? color.new(color.red,  70) :
         cycle=="ANTI"  ? color.new(color.yellow,60) :
                          color.new(color.gray,  80)
labTxt = cycle=="ANTI" ? color.black : color.white

label.new(x=bar_index, y=na,
          text=cycle,   yloc=yloc.price,
          style=label.style_label_left,
          color=labCol, textcolor=labTxt,
          size=size.tiny)


hline(chopRibbonPct,  "Chop Limit", color=color.red)
hline(antiTolPct,     "ANTI Limit", color=color.orange)