//@version=5
strategy("SJ NIFTY",
     overlay=true, max_labels_count=200, initial_capital=100000,
     commission_type=strategy.commission.percent, commission_value=0.0, pyramiding=0,
     calc_on_every_tick=false, calc_on_order_fills=false)

// ===== Inputs =====
slPercent    = input.float(5.0, "Technical Stop Loss % from Entry", step=0.1) // technical SL; position size will make this equal 3% of capital
rrTarget     = input.float(1.5, "Take-Profit RR", step=0.1)
atrLen       = input.int(14,  "ATR Length")
atrMult      = input.float(1.0, "Supertrend ATR Multiplier")
rsiLen       = input.int(14, "RSI Length")
rsiOB        = input.int(70, "RSI Overbought")
rsiOS        = input.int(30, "RSI Oversold")
emaLen       = input.int(200, "Trend EMA Length")
cooldownBars = input.int(8,   "Cooldown bars after a signal", minval=0)

// --- Keltner Channel ---
kcLen        = input.int(20,  "KC Length")
kcMult       = input.float(1.5,"KC Multiplier", step=0.1)
useKCFilter  = input.bool(true, "Use KC Basis as extra trend filter?")

// --- Risk / Sizing ---
riskPctCap   = input.float(3.0, "Max risk % of capital", step=0.1, minval=0.1, maxval=10)
lotSize      = input.int(1, "Qty step (e.g., lot size). Set 1 for spot/index", minval=1)

// ===== Core calcs =====
[st, dir]  = ta.supertrend(atrMult, atrLen)
vwapVal    = ta.vwap(close)
rsi        = ta.rsi(close, rsiLen)
ema200     = ta.ema(close, emaLen)
atr        = ta.atr(atrLen)

// Keltner (EMA basis + ATR bands)
kcBasis    = ta.ema(close, kcLen)
kcUpper    = kcBasis + kcMult * atr
kcLower    = kcBasis - kcMult * atr

// Trend filters
upTrend    = close > ema200
downTrend  = close < ema200
kcLongOK   = not useKCFilter or close >= kcBasis
kcShortOK  = not useKCFilter or close <= kcBasis

// Breakout/Breakdown definitions (close confirmed, one-shot)
longCondRaw   = close > st and close > vwapVal and rsi > rsiOB and upTrend and kcLongOK and close > high[1]
shortCondRaw  = close < st and close < vwapVal and rsi < rsiOS and downTrend and kcShortOK and close < low[1]

longTrig   = longCondRaw and not longCondRaw[1]
shortTrig  = shortCondRaw and not shortCondRaw[1]

// Cooldown
var lastSigBar = -100000
canSignal = (bar_index - lastSigBar) > cooldownBars
longSignal  = longTrig  and canSignal
shortSignal = shortTrig and canSignal
if longSignal or shortSignal
    lastSigBar := bar_index

// ===== Entry/SL/TP calculations =====
var float entryPrice = na
if longSignal
    entryPrice := close
if shortSignal
    entryPrice := close

// Technical SL from entry
longSL  = entryPrice * (1 - slPercent/100)
shortSL = entryPrice * (1 + slPercent/100)

// Risk per unit
riskPerUnitLong  = entryPrice - longSL
riskPerUnitShort = shortSL - entryPrice

// Capital risk budget
cap         = strategy.equity
riskBudget  = cap * (riskPctCap / 100.0)

// Qty sized so loss at SL â‰ˆ 3% of capital. Round down to lot size.
float qtyLong  = na
float qtyShort = na
if longSignal and riskPerUnitLong > 0
    qtyLong := math.floor((riskBudget / riskPerUnitLong) / lotSize) * lotSize
if shortSignal and riskPerUnitShort > 0
    qtyShort := math.floor((riskBudget / riskPerUnitShort) / lotSize) * lotSize

// Take-profit using RR vs SL distance
riskLong   = riskPerUnitLong
riskShort  = riskPerUnitShort
longTP     = entryPrice + riskLong  * rrTarget
shortTP    = entryPrice - riskShort * rrTarget

// ===== Plots =====
plot(st, "Supertrend", color=dir == 1 ? color.new(color.green, 0) : color.new(color.red, 0), linewidth=2)
plot(vwapVal, "VWAP", color=color.orange, linewidth=1)
plot(ema200, "EMA 200", color=color.new(color.blue, 0), linewidth=1)

// KC
plot(kcBasis, "KC Basis", color=color.new(color.yellow, 0))
plot(kcUpper, "KC Upper", color=color.new(color.yellow, 0))
plot(kcLower, "KC Lower", color=color.new(color.yellow, 0))

// Visual SL/TP only after a fresh signal
plot(entryPrice != na and dir == 1 ? longSL  : na, "Long SL",  color=color.new(color.red, 0), style=plot.style_linebr)
plot(entryPrice != na and dir == -1 ? shortSL : na, "Short SL", color=color.new(color.red, 0), style=plot.style_linebr)
plot(entryPrice != na and dir == 1 ? longTP   : na, "Long TP",  color=color.new(color.green, 0), style=plot.style_linebr)
plot(entryPrice != na and dir == -1 ? shortTP  : na, "Short TP", color=color.new(color.green, 0), style=plot.style_linebr)

// Labels (one-shot)
plotshape(longSignal,  title="BUY",  style=shape.labelup,   location=location.belowbar, text="BUY",  size=size.tiny, color=color.new(color.green, 0), textcolor=color.white)
plotshape(shortSignal, title="SELL", style=shape.labeldown, location=location.abovebar, text="SELL", size=size.tiny, color=color.new(color.red, 0),   textcolor=color.white)

// ===== Orders & exits =====
if longSignal and (na(qtyLong) or qtyLong <= 0)
    // fallback: at least 1 unit to show trades in tester
    qtyLong := lotSize
if shortSignal and (na(qtyShort) or qtyShort <= 0)
    qtyShort := lotSize

if longSignal
    strategy.entry(id="Long", direction=strategy.long,  qty=qtyLong)
    strategy.exit(id="Long-Exit", from_entry="Long", stop=longSL, limit=longTP)

if shortSignal
    strategy.entry(id="Short", direction=strategy.short, qty=qtyShort)
    strategy.exit(id="Short-Exit", from_entry="Short", stop=shortSL, limit=shortTP)

// ===== Alerts =====
alertcondition(longSignal,  title="NIFTY BUY",  message="NIFTY Buy signal")
alertcondition(shortSignal, title="NIFTY SELL", message="NIFTY Sell signal")