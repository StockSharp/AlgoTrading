/// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© john_everist
//@version=4
study(title = "Relative Currency Strength", overlay = true)



previous_period(period_reference)=>
    period_length = period_reference == "15"? 60000*15: 60000*60
    a= timenow-time_close>period_length?true:false


find_bars_back(ref_period)=>

    t = time(ref_period)
    new_period = not na(t) and (na(t[1]) or t > t[1])

    count = 0
    for i = 0 to 999
        if new_period[i]
            break
        count:=count+1
    count


num_of_bars_in_day()=>

    day_bar = security(syminfo.tickerid, "D", open)
    count = 1
    for i = 1 to 999
        if day_bar[1] != day_bar[count]
            break
        count := count+1

    bars_in_day = 0
    for a = 1 to 999
        if count == count[a]
            break
        bars_in_day := bars_in_day+1
    bars_in_day//:=bars_in_day+1


make_start(s, time_zone_dif)=>

    s_start = s<10?"0"+tostring(s)+":00":tostring(s)+":00"
    start = s+time_zone_dif
    if start<0
        start:=24-abs(start)

    finish=start+1==25?1:start+1

    str_start = start<10?"0"+tostring(start):tostring(start)
    str_finish = finish<10?"0"+tostring(finish):tostring(finish)



    //session = timeframe.multiplier==15?str_start+"00-"+str_finish+"00":str_start+"00-"+str_finish+"00"
    session = str_start+"00-"+str_finish+"00:23456"

    [session,s_start]

make_colour(sess_current, bars_back, length, hours_back, colour)=>
    col = sess_current and not sess_current[1]?na:colour
    col := hours_back>0?colour:col


num_of_currencies_active(nzd, aud, jpy, chf, eur, gbp, cad, usd, xau)=>
    num = 0
    num := nzd == true? num+1 : num
    num := aud == true? num+1 : num
    num := jpy == true? num+1 : num
    num := chf == true? num+1 : num
    num := eur == true? num+1 : num
    num := gbp == true? num+1 : num
    num := cad == true? num+1 : num
    num := usd == true? num+1 : num
    num := xau == true? num+1 : num







get_aver_line(nzd, aud, jpy, chf, eur, gbp, cad, usd, xau, ignore_extremes, shown_currencies, currency, classic)=>


    lowest_classic = 999.9
    lowest_classic:= nzd<lowest_classic?nzd:lowest_classic
    lowest_classic:= aud<lowest_classic?aud:lowest_classic
    lowest_classic:= jpy<lowest_classic?jpy:lowest_classic
    lowest_classic:= chf<lowest_classic?chf:lowest_classic
    lowest_classic:= eur<lowest_classic?eur:lowest_classic
    lowest_classic:= gbp<lowest_classic?gbp:lowest_classic
    lowest_classic:= cad<lowest_classic?cad:lowest_classic
    lowest_classic:= usd<lowest_classic?usd:lowest_classic

    highest_classic = -999.9
    highest_classic:= nzd>highest_classic?nzd:highest_classic
    highest_classic:= aud>highest_classic?aud:highest_classic
    highest_classic:= jpy>highest_classic?jpy:highest_classic
    highest_classic:= chf>highest_classic?chf:highest_classic
    highest_classic:= eur>highest_classic?eur:highest_classic
    highest_classic:= gbp>highest_classic?gbp:highest_classic
    highest_classic:= cad>highest_classic?cad:highest_classic
    highest_classic:= usd>highest_classic?usd:highest_classic


    //===================================================

    lowest_classic2 = 999.9
    lowest_classic2:= nzd<lowest_classic2 and nzd != lowest_classic?   nzd      :lowest_classic2
    lowest_classic2:= aud<lowest_classic2 and aud != lowest_classic?   aud      :lowest_classic2
    lowest_classic2:= jpy<lowest_classic2 and jpy != lowest_classic?   jpy      :lowest_classic2
    lowest_classic2:= chf<lowest_classic2 and chf != lowest_classic?   chf      :lowest_classic2
    lowest_classic2:= eur<lowest_classic2 and eur != lowest_classic?   eur      :lowest_classic2
    lowest_classic2:= gbp<lowest_classic2 and gbp != lowest_classic?   gbp      :lowest_classic2
    lowest_classic2:= cad<lowest_classic2 and cad != lowest_classic?   cad      :lowest_classic2
    lowest_classic2:= usd<lowest_classic2 and usd != lowest_classic?   usd      :lowest_classic2

    highest_classic2 = -999.9
    highest_classic2:= nzd>highest_classic2 and nzd != highest_classic?   nzd      :highest_classic2
    highest_classic2:= aud>highest_classic2 and aud != highest_classic?   aud      :highest_classic2
    highest_classic2:= jpy>highest_classic2 and jpy != highest_classic?   jpy      :highest_classic2
    highest_classic2:= chf>highest_classic2 and chf != highest_classic?   chf      :highest_classic2
    highest_classic2:= eur>highest_classic2 and eur != highest_classic?   eur      :highest_classic2
    highest_classic2:= gbp>highest_classic2 and gbp != highest_classic?   gbp      :highest_classic2
    highest_classic2:= cad>highest_classic2 and cad != highest_classic?   cad      :highest_classic2
    highest_classic2:= usd>highest_classic2 and usd != highest_classic?   usd      :highest_classic2


    //=========================================================


    lowest = 999.9
    lowest:= currency == "NZD"? lowest:     nzd<lowest?nzd:lowest
    lowest:= currency == "AUD"? lowest:     aud<lowest?aud:lowest
    lowest:= currency == "JPY"? lowest:     jpy<lowest?jpy:lowest
    lowest:= currency == "CHF"? lowest:     chf<lowest?chf:lowest
    lowest:= currency == "EUR"? lowest:     eur<lowest?eur:lowest
    lowest:= currency == "GBP"? lowest:     gbp<lowest?gbp:lowest
    lowest:= currency == "CAD"? lowest:     cad<lowest?cad:lowest
    lowest:= currency == "USD"? lowest:     usd<lowest?usd:lowest
    lowest:= currency == "GOLD"? lowest:     xau<lowest?xau:lowest


    highest = -999.9
    highest:= currency == "NZD"?    highest:     nzd>highest?nzd:highest
    highest:= currency == "AUD"?    highest:      aud>highest?aud:highest
    highest:= currency == "JPY"?    highest:      jpy>highest?jpy:highest
    highest:= currency == "CHF"?    highest:      chf>highest?chf:highest
    highest:= currency == "EUR"?    highest:      eur>highest?eur:highest
    highest:= currency == "GBP"?    highest:      gbp>highest?gbp:highest
    highest:= currency == "CAD"?    highest:      cad>highest?cad:highest
    highest:= currency == "USD"?    highest:      usd>highest?usd:highest
    highest:= currency == "GOLD"?    highest:      xau>highest?xau:highest

    //===================================================

    lowest2 = 999.9
    lowest2:= currency == "NZD"? lowest2:     nzd<lowest2 and nzd != lowest?   nzd      :lowest2
    lowest2:= currency == "AUD"? lowest2:     aud<lowest2 and aud != lowest?   aud      :lowest2
    lowest2:= currency == "JPY"? lowest2:     jpy<lowest2 and jpy != lowest?   jpy      :lowest2
    lowest2:= currency == "CHF"? lowest2:     chf<lowest2 and chf != lowest?   chf      :lowest2
    lowest2:= currency == "EUR"? lowest2:     eur<lowest2 and eur != lowest?   eur      :lowest2
    lowest2:= currency == "GBP"? lowest2:     gbp<lowest2 and gbp != lowest?   gbp      :lowest2
    lowest2:= currency == "CAD"? lowest2:     cad<lowest2 and cad != lowest?   cad      :lowest2
    lowest2:= currency == "USD"? lowest2:     usd<lowest2 and usd != lowest?   usd      :lowest2
    lowest2:= currency == "GOLD"? lowest2:    xau<lowest2 and xau != lowest?   xau      :lowest2

    highest2 = -999.9
    highest2:= currency == "NZD"? highest2:     nzd>highest2 and nzd != highest?   nzd      :highest2
    highest2:= currency == "AUD"? highest2:     aud>highest2 and aud != highest?   aud      :highest2
    highest2:= currency == "JPY"? highest2:     jpy>highest2 and jpy != highest?   jpy      :highest2
    highest2:= currency == "CHF"? highest2:     chf>highest2 and chf != highest?   chf      :highest2
    highest2:= currency == "EUR"? highest2:     eur>highest2 and eur != highest?   eur      :highest2
    highest2:= currency == "GBP"? highest2:     gbp>highest2 and gbp != highest?   gbp      :highest2
    highest2:= currency == "CAD"? highest2:     cad>highest2 and cad != highest?   cad      :highest2
    highest2:= currency == "USD"? highest2:     usd>highest2 and usd != highest?   usd      :highest2
    highest2:= currency == "GOLD"? highest2:     xau>highest2 and xau != highest?   xau      :highest2



    average_extreme_classic = (highest_classic-lowest_classic)*0.5+lowest_classic
    average_not_extreme_classic =  (highest_classic2-lowest_classic2)*0.5+lowest_classic2
    average_classic =   ignore_extremes?    shown_currencies>3? average_not_extreme_classic     :  average_extreme_classic : average_extreme_classic


    average_extreme = (highest-lowest)*0.5+lowest
    average_not_extreme =  (highest2-lowest2)*0.5+lowest2
    average =   ignore_extremes?    shown_currencies>4? average_not_extreme     :  average_extreme : average_extreme

    a = not classic? average_classic : average


AUDNZD = security("FX_IDC:AUDNZD", timeframe.period, close)
NZDJPY = security("FX_IDC:NZDJPY", timeframe.period, close)
NZDCHF = security("FX_IDC:NZDCHF", timeframe.period, close)
GBPNZD = security("FX_IDC:GBPNZD", timeframe.period, close)
EURNZD = security("FX_IDC:EURNZD", timeframe.period, close)
NZDCAD = security("FX_IDC:NZDCAD", timeframe.period, close)
NZDUSD = security("FX_IDC:NZDUSD", timeframe.period, close)

AUDJPY = security("FX_IDC:AUDJPY", timeframe.period, close)
AUDCHF = security("FX_IDC:AUDCHF", timeframe.period, close)
EURAUD = security("FX_IDC:EURAUD", timeframe.period, close)
GBPAUD = security("FX_IDC:GBPAUD", timeframe.period, close)
AUDCAD = security("FX_IDC:AUDCAD", timeframe.period, close)
AUDUSD = security("FX_IDC:AUDUSD", timeframe.period, close)


CHFJPY = security("FX_IDC:CHFJPY", timeframe.period, close)
EURJPY = security("FX_IDC:EURJPY", timeframe.period, close)
GBPJPY = security("FX_IDC:GBPJPY", timeframe.period, close)
CADJPY = security("FX_IDC:CADJPY", timeframe.period, close)
USDJPY = security("FX_IDC:USDJPY", timeframe.period, close)

EURCHF = security("FX_IDC:EURCHF", timeframe.period, close)
GBPCHF = security("FX_IDC:GBPCHF", timeframe.period, close)
CADCHF = security("FX_IDC:CADCHF", timeframe.period, close)
USDCHF = security("FX_IDC:USDCHF", timeframe.period, close)

EURGBP = security("FX_IDC:EURGBP", timeframe.period, close)
EURCAD = security("FX_IDC:EURCAD", timeframe.period, close)
EURUSD = security("FX_IDC:EURUSD", timeframe.period, close)

GBPCAD = security("FX_IDC:GBPCAD", timeframe.period, close)
GBPUSD = security("FX_IDC:GBPUSD", timeframe.period, close)

USDCAD = security("FX_IDC:USDCAD", timeframe.period, close)

XAUNZD = security("FX_IDC:XAUNZD", timeframe.period, close)
XAUAUD = security("FX_IDC:XAUAUD", timeframe.period, close)
XAUJPY = security("FX_IDC:XAUJPY", timeframe.period, close)
XAUCHF = security("FX_IDC:XAUCHF", timeframe.period, close)
XAUEUR = security("FX_IDC:XAUEUR", timeframe.period, close)
XAUGBP = security("FX_IDC:XAUGBP", timeframe.period, close)
XAUCAD = security("FX_IDC:XAUCAD", timeframe.period, close)
XAUUSD = security("FX_IDC:XAUUSD", timeframe.period, close)


AUDAUD_perc = 1
NZDNZD_perc = 1
JPYJPY_perc = 1
CHFCHF_perc = 1
EUREUR_perc = 1
GBPGBP_perc = 1
CADCAD_perc = 1
USDUSD_perc = 1
XAUXAU_perc = 1



currency =     input(title = "Baseline Currency", type = input.string, defval = "Automatic", options = ["Automatic", "GOLD", "AUD", "CAD", "CHF", "EUR", "GBP", "JPY","NZD", "USD"])
start = input(title="Start time to begin strength comparison - if the timeframe >= 240 minutes (and the barsback override == 0) the comparison point will be a constant 20 bars back from the current candle", type = input.integer, minval=0, maxval = 23, defval = 7)
time_zone_dif = input(title="Time zone difference to exchange", type = input.integer, minval=-23, maxval = 23, defval = -5)
bars_back_override = input(title="Constant Bars Back Override - if > 0 this will override the start time for a constant barsback", type = input.integer, defval = 21)
classic = input(title = "Show counter currencys' strengths verses each other when compared to base currency (not counter currencys' strengths verses baseline currency)",   type = input.bool, defval = false)

show_val=           input(title = "Show Value Line",             type = input.bool, defval = true)
show_ave=           input(title = "Show Moving Average",    type = input.bool, defval = false)

ave_length =        input(title = "Moving Average Line Length",  type = input.integer, defval = 5)

ave_width =         input(title = "Average Line Width",         type = input.integer, defval = 3)
val_width =         input(title = "Value Line Width",         type = input.integer, defval = 1)

ave_trans =         input(title = "Moving Average Line Transparency",  type = input.integer, step = 10, defval = 0)
val_trans =         input(title = "Value Line Transparency",  type = input.integer, step = 10, defval = 0)

show_labs=          input(title = "Show Labels",            type = input.bool, defval = true)
labs_on_ave =       input(title = "Labels on Average Line",  type = input.bool, defval = true)
labs_on_ave:=show_ave?labs_on_ave:false
//dark_screen =       input(title = "Dark Background",  type = input.bool, defval = true)
ignore_extremes =   input(title = "Ignore extreme currencies - This stops hyper strong/weak currencies distorting the baseline", type = input.bool, defval = true)



show_nzd = input(title = "Show NZD",            type = input.bool, defval = true)
show_aud = input(title = "Show AUD",            type = input.bool, defval = true)
show_jpy = input(title = "Show JPY",            type = input.bool, defval = true)
show_chf = input(title = "Show CHF",            type = input.bool, defval = true)
show_eur = input(title = "Show EUR",            type = input.bool, defval = true)
show_gbp = input(title = "Show GBP",            type = input.bool, defval = true)
show_cad = input(title = "Show CAD",            type = input.bool, defval = true)
show_usd = input(title = "Show USD",            type = input.bool, defval = true)
show_xau = input(title = "Show XAU",            type = input.bool, defval = true)







color col_nzd = input(color.teal, "NZD colour", type = input.color)
color col_aud = input(color.red, "AUD colour", type = input.color)
color col_jpy = input(color.purple, "JPY colour", type = input.color)
color col_chf = input(color.yellow, "CHF colour", type = input.color)
color col_eur = input(color.lime, "EUR colour", type = input.color)
color col_gbp = input(color.aqua, "GBP colour", type = input.color)
color col_cad = input(color.orange, "CAD colour", type = input.color)
color col_usd = input(color.white, "USD colour", type = input.color)
color col_xau = input(color.gray, "GOLD colour", type = input.color)



if currency == "Automatic" and  syminfo.ticker != "XAUCAD" and  syminfo.ticker != "XAUCHF" and  syminfo.ticker != "XAUEUR" and  syminfo.ticker != "XAUGBP" and  syminfo.ticker != "XAUJPY" and  syminfo.ticker != "XAUNZD" and  syminfo.ticker != "XAUUSD"
    classic := true

if currency == "Automatic"
    if syminfo.ticker == "XAUAUD"
        currency:="AUD"
    else if syminfo.ticker == "XAUCAD"
        currency:="CAD"
    else if syminfo.ticker == "XAUCHF"
        currency:="CHF"
    else if syminfo.ticker == "XAUEUR"
        currency:="EUR"
    else if syminfo.ticker == "XAUGBP"
        currency:="GBP"
    else if syminfo.ticker == "XAUJPY"
        currency:="JPY"
    else if syminfo.ticker == "XAUNZD"
        currency:="NZD"
    else if syminfo.ticker == "XAUUSD"
        currency:="USD"
    else
        currency:="GOLD"



[session,start_time]=make_start(start, time_zone_dif)
sess_current = not na(time("D", session))



bars_back=0
for i = 0 to 4998
    if sess_current[i] and not sess_current[i+1]
        break
    bars_back:=bars_back+1

bars_back := timeframe.isminutes and timeframe.multiplier<240 or timeframe.isseconds? bars_back: 20
bars_back := bars_back_override >0?bars_back_override:bars_back






AUDNZD_perc = AUDNZD/AUDNZD[bars_back]
NZDJPY_perc = NZDJPY/NZDJPY[bars_back]
NZDCHF_perc = NZDCHF/NZDCHF[bars_back]
GBPNZD_perc = GBPNZD/GBPNZD[bars_back]
EURNZD_perc = EURNZD/EURNZD[bars_back]
NZDCAD_perc = NZDCAD/NZDCAD[bars_back]
NZDUSD_perc = NZDUSD/NZDUSD[bars_back]

AUDJPY_perc = AUDJPY/AUDJPY[bars_back]
AUDCHF_perc = AUDCHF/AUDCHF[bars_back]
EURAUD_perc = EURAUD/EURAUD[bars_back]
GBPAUD_perc = GBPAUD/GBPAUD[bars_back]
AUDCAD_perc = AUDCAD/AUDCAD[bars_back]
AUDUSD_perc = AUDUSD/AUDUSD[bars_back]

CHFJPY_perc = CHFJPY/CHFJPY[bars_back]
EURJPY_perc = EURJPY/EURJPY[bars_back]
GBPJPY_perc = GBPJPY/GBPJPY[bars_back]
CADJPY_perc = CADJPY/CADJPY[bars_back]
USDJPY_perc = USDJPY/USDJPY[bars_back]

EURCHF_perc = EURCHF/EURCHF[bars_back]
GBPCHF_perc = GBPCHF/GBPCHF[bars_back]
CADCHF_perc = CADCHF/CADCHF[bars_back]
USDCHF_perc = USDCHF/USDCHF[bars_back]

EURGBP_perc = EURGBP/EURGBP[bars_back]
EURCAD_perc = EURCAD/EURCAD[bars_back]
EURUSD_perc = EURUSD/EURUSD[bars_back]

GBPCAD_perc = GBPCAD/GBPCAD[bars_back]
GBPUSD_perc = GBPUSD/GBPUSD[bars_back]

USDCAD_perc = USDCAD/USDCAD[bars_back]

////////////////////////////////////////////////////////

AUDNZD_perc_rev = AUDNZD[bars_back]/AUDNZD
NZDJPY_perc_rev = NZDJPY[bars_back]/NZDJPY
NZDCHF_perc_rev = NZDCHF[bars_back]/NZDCHF
GBPNZD_perc_rev = GBPNZD[bars_back]/GBPNZD
EURNZD_perc_rev = EURNZD[bars_back]/EURNZD
NZDCAD_perc_rev = NZDCAD[bars_back]/NZDCAD
NZDUSD_perc_rev = NZDUSD[bars_back]/NZDUSD


AUDJPY_perc_rev = AUDJPY[bars_back]/AUDJPY
AUDCHF_perc_rev = AUDCHF[bars_back]/AUDCHF
EURAUD_perc_rev = EURAUD[bars_back]/EURAUD
GBPAUD_perc_rev = GBPAUD[bars_back]/GBPAUD
AUDCAD_perc_rev = AUDCAD[bars_back]/AUDCAD
AUDUSD_perc_rev = AUDUSD[bars_back]/AUDUSD

CHFJPY_perc_rev = CHFJPY[bars_back]/CHFJPY
EURJPY_perc_rev = EURJPY[bars_back]/EURJPY
GBPJPY_perc_rev = GBPJPY[bars_back]/GBPJPY
CADJPY_perc_rev = CADJPY[bars_back]/CADJPY
USDJPY_perc_rev = USDJPY[bars_back]/USDJPY

EURCHF_perc_rev = EURCHF[bars_back]/EURCHF
GBPCHF_perc_rev = GBPCHF[bars_back]/GBPCHF
CADCHF_perc_rev = CADCHF[bars_back]/CADCHF
USDCHF_perc_rev = USDCHF[bars_back]/USDCHF

EURGBP_perc_rev = EURGBP[bars_back]/EURGBP
EURCAD_perc_rev = EURCAD[bars_back]/EURCAD
EURUSD_perc_rev = EURUSD[bars_back]/EURUSD

GBPCAD_perc_rev = GBPCAD[bars_back]/GBPCAD
GBPUSD_perc_rev = GBPUSD[bars_back]/GBPUSD

USDCAD_perc_rev = USDCAD[bars_back]/USDCAD

////////////////////////////////////////////////////////

XAUNZD_perc = XAUNZD[bars_back]/XAUNZD
XAUAUD_perc = XAUAUD[bars_back]/XAUAUD
XAUJPY_perc = XAUJPY[bars_back]/XAUJPY
XAUCHF_perc = XAUCHF[bars_back]/XAUCHF
XAUEUR_perc = XAUEUR[bars_back]/XAUEUR
XAUGBP_perc = XAUGBP[bars_back]/XAUGBP
XAUCAD_perc = XAUCAD[bars_back]/XAUCAD
XAUUSD_perc = XAUUSD[bars_back]/XAUUSD

XAUNZD_perc_rev = XAUNZD/XAUNZD[bars_back]
XAUAUD_perc_rev = XAUAUD/XAUAUD[bars_back]
XAUJPY_perc_rev = XAUJPY/XAUJPY[bars_back]
XAUCHF_perc_rev = XAUCHF/XAUCHF[bars_back]
XAUEUR_perc_rev = XAUEUR/XAUEUR[bars_back]
XAUGBP_perc_rev = XAUGBP/XAUGBP[bars_back]
XAUCAD_perc_rev = XAUCAD/XAUCAD[bars_back]
XAUUSD_perc_rev = XAUUSD/XAUUSD[bars_back]






nzd =  currency == "GOLD"? XAUNZD_perc     :    currency == "NZD"?  NZDNZD_perc            :currency == "AUD"? AUDNZD_perc_rev     :currency == "JPY"?  NZDJPY_perc            :currency == "CHF"?  NZDCHF_perc       :currency == "EUR"?  EURNZD_perc_rev         :currency == "GBP"?  GBPNZD_perc_rev       :currency == "CAD"?  NZDCAD_perc         :currency == "USD"?  NZDUSD_perc       :na
aud =  currency == "GOLD"? XAUAUD_perc     :    currency == "NZD"?  AUDNZD_perc            :currency == "AUD"? AUDAUD_perc         :currency == "JPY"?  AUDJPY_perc            :currency == "CHF"?  AUDCHF_perc       :currency == "EUR"?  EURAUD_perc_rev         :currency == "GBP"?  GBPAUD_perc_rev       :currency == "CAD"?  AUDCAD_perc         :currency == "USD"?  AUDUSD_perc       :na
jpy =  currency == "GOLD"? XAUJPY_perc     :    currency == "NZD"?  NZDJPY_perc_rev        :currency == "AUD"? AUDJPY_perc_rev     :currency == "JPY"?  JPYJPY_perc            :currency == "CHF"?  CHFJPY_perc_rev   :currency == "EUR"?  EURJPY_perc_rev         :currency == "GBP"?  GBPJPY_perc_rev       :currency == "CAD"?  CADJPY_perc_rev     :currency == "USD"?  USDJPY_perc_rev   :na
chf =  currency == "GOLD"? XAUCHF_perc     :    currency == "NZD"?  NZDCHF_perc_rev        :currency == "AUD"? AUDCHF_perc_rev     :currency == "JPY"?  CHFJPY_perc            :currency == "CHF"?  CHFCHF_perc       :currency == "EUR"?  EURCHF_perc_rev         :currency == "GBP"?  GBPCHF_perc_rev       :currency == "CAD"?  CADCHF_perc_rev     :currency == "USD"?  USDCHF_perc_rev   :na
eur =  currency == "GOLD"? XAUEUR_perc     :    currency == "NZD"?  EURNZD_perc            :currency == "AUD"? EURAUD_perc         :currency == "JPY"?  EURJPY_perc            :currency == "CHF"?  EURCHF_perc       :currency == "EUR"?  EUREUR_perc             :currency == "GBP"?  EURGBP_perc           :currency == "CAD"?  EURCAD_perc         :currency == "USD"?  EURUSD_perc       :na
gbp =  currency == "GOLD"? XAUGBP_perc     :    currency == "NZD"?  GBPNZD_perc            :currency == "AUD"? GBPAUD_perc         :currency == "JPY"?  GBPJPY_perc            :currency == "CHF"?  GBPCHF_perc       :currency == "EUR"?  EURGBP_perc_rev         :currency == "GBP"?  GBPGBP_perc           :currency == "CAD"?  GBPCAD_perc         :currency == "USD"?  GBPUSD_perc       :na
cad =  currency == "GOLD"? XAUCAD_perc     :    currency == "NZD"?  NZDCAD_perc_rev        :currency == "AUD"? AUDCAD_perc_rev     :currency == "JPY"?  CADJPY_perc            :currency == "CHF"?  CADCHF_perc       :currency == "EUR"?  EURCAD_perc_rev         :currency == "GBP"?  GBPCAD_perc_rev       :currency == "CAD"?  CADCAD_perc         :currency == "USD"?  USDCAD_perc_rev   :na
usd =  currency == "GOLD"? XAUUSD_perc     :    currency == "NZD"?  NZDUSD_perc_rev        :currency == "AUD"? AUDUSD_perc_rev     :currency == "JPY"?  USDJPY_perc            :currency == "CHF"?  USDCHF_perc       :currency == "EUR"?  EURUSD_perc_rev         :currency == "GBP"?  GBPUSD_perc_rev       :currency == "CAD"?  USDCAD_perc         :currency == "USD"?  USDUSD_perc       :na
xau =  currency == "GOLD"? XAUXAU_perc     :    currency == "NZD"?  XAUNZD_perc_rev        :currency == "AUD"? XAUAUD_perc_rev     :currency == "JPY"?  XAUJPY_perc_rev        :currency == "CHF"?  XAUCHF_perc_rev   :currency == "EUR"?  XAUEUR_perc_rev         :currency == "GBP"?  XAUGBP_perc_rev       :currency == "CAD"?  XAUCAD_perc_rev     :currency == "USD"?  XAUUSD_perc_rev   :na








nzd := show_nzd? nzd: na
aud := show_aud? aud: na
jpy := show_jpy? jpy: na
chf := show_chf? chf: na
eur := show_eur? eur: na
gbp := show_gbp? gbp: na
cad := show_cad? cad: na
usd := show_usd? usd: na
xau := show_xau? xau: na

shown_currencies = num_of_currencies_active(show_nzd, show_aud, show_jpy, show_chf, show_eur, show_gbp, show_cad, show_usd, show_xau)



average = get_aver_line(nzd, aud, jpy, chf, eur, gbp, cad, usd, xau, ignore_extremes, shown_currencies, currency, classic)
nzd1 =  classic ? currency == "NZD"? 0 :    nzd-average:     currency == "GOLD"? nzd-xau     :    currency == "NZD"?  nzd-nzd        :currency == "AUD"? nzd-aud      :currency == "JPY"?  nzd-jpy     :currency == "CHF"?  nzd-chf       :currency == "EUR"?  nzd-eur         :currency == "GBP"?  nzd-gbp       :currency == "CAD"?  nzd-cad         :currency == "USD"?  nzd-usd       :na
aud1 =  classic ? currency == "AUD"? 0 :    aud-average:     currency == "GOLD"? aud-xau     :    currency == "NZD"?  aud-nzd        :currency == "AUD"? aud-aud      :currency == "JPY"?  aud-jpy     :currency == "CHF"?  aud-chf       :currency == "EUR"?  aud-eur         :currency == "GBP"?  aud-gbp       :currency == "CAD"?  aud-cad         :currency == "USD"?  aud-usd       :na
jpy1 =  classic ? currency == "JPY"? 0 :    jpy-average:     currency == "GOLD"? jpy-xau     :    currency == "NZD"?  jpy-nzd        :currency == "AUD"? jpy-aud      :currency == "JPY"?  jpy-jpy     :currency == "CHF"?  jpy-chf       :currency == "EUR"?  jpy-eur         :currency == "GBP"?  jpy-gbp       :currency == "CAD"?  jpy-cad         :currency == "USD"?  jpy-usd       :na
chf1 =  classic ? currency == "CHF"? 0 :    chf-average:     currency == "GOLD"? chf-xau     :    currency == "NZD"?  chf-nzd        :currency == "AUD"? chf-aud      :currency == "JPY"?  chf-jpy     :currency == "CHF"?  chf-chf       :currency == "EUR"?  chf-eur         :currency == "GBP"?  chf-gbp       :currency == "CAD"?  chf-cad         :currency == "USD"?  chf-usd       :na
eur1 =  classic ? currency == "EUR"? 0 :    eur-average:     currency == "GOLD"? eur-xau     :    currency == "NZD"?  eur-nzd        :currency == "AUD"? eur-aud      :currency == "JPY"?  eur-jpy     :currency == "CHF"?  eur-chf       :currency == "EUR"?  eur-eur         :currency == "GBP"?  eur-gbp       :currency == "CAD"?  eur-cad         :currency == "USD"?  eur-usd       :na
gbp1 =  classic ? currency == "GBP"? 0 :    gbp-average:     currency == "GOLD"? gbp-xau     :    currency == "NZD"?  gbp-nzd        :currency == "AUD"? gbp-aud      :currency == "JPY"?  gbp-jpy     :currency == "CHF"?  gbp-chf       :currency == "EUR"?  gbp-eur         :currency == "GBP"?  gbp-gbp       :currency == "CAD"?  gbp-cad         :currency == "USD"?  gbp-usd       :na
cad1 =  classic ? currency == "CAD"? 0 :    cad-average:     currency == "GOLD"? cad-xau     :    currency == "NZD"?  cad-nzd        :currency == "AUD"? cad-aud      :currency == "JPY"?  cad-jpy     :currency == "CHF"?  cad-chf       :currency == "EUR"?  cad-eur         :currency == "GBP"?  cad-gbp       :currency == "CAD"?  cad-cad         :currency == "USD"?  cad-usd       :na
usd1 =  classic ? currency == "USD"? 0 :    usd-average:     currency == "GOLD"? usd-xau     :    currency == "NZD"?  usd-nzd        :currency == "AUD"? usd-aud      :currency == "JPY"?  usd-jpy     :currency == "CHF"?  usd-chf       :currency == "EUR"?  usd-eur         :currency == "GBP"?  usd-gbp       :currency == "CAD"?  usd-cad         :currency == "USD"?  usd-usd       :na
xau1 =  classic ? currency == "GOLD"? 0 :   xau-average:     currency == "GOLD"? xau-xau     :    currency == "NZD"?  xau-nzd        :currency == "AUD"? xau-aud      :currency == "JPY"?  xau-jpy     :currency == "CHF"?  xau-chf       :currency == "EUR"?  xau-eur         :currency == "GBP"?  xau-gbp       :currency == "CAD"?  xau-cad         :currency == "USD"?  xau-usd       :na



if bars_back == 0
    nzd1 := 0
    aud1 := 0
    jpy1 := 0
    chf1 := 0
    eur1 := 0
    gbp1 := 0
    cad1 := 0
    usd1 := 0
    xau1 := 0













nzd_ave = sma(nzd1, ave_length)
aud_ave = sma(aud1, ave_length)
jpy_ave = sma(jpy1, ave_length)
chf_ave = sma(chf1, ave_length)
eur_ave = sma(eur1, ave_length)
gbp_ave = sma(gbp1, ave_length)
cad_ave = sma(cad1, ave_length)
usd_ave = sma(usd1, ave_length)
xau_ave = sma(xau1, ave_length)






for i = 0 to ave_length
    if bars_back[i] == 0
        nzd_ave := na
        aud_ave := na
        jpy_ave := na
        chf_ave := na
        eur_ave := na
        gbp_ave := na
        cad_ave := na
        usd_ave := na
        xau_ave := na







col_nzd1 = show_nzd         ?       col_nzd: na
col_aud1 = show_aud         ?       col_aud: na
col_jpy1 = show_jpy         ?       col_jpy: na
col_chf1 = show_chf         ?       col_chf: na
col_eur1 = show_eur         ?       col_eur: na
col_gbp1 = show_gbp         ?       col_gbp: na
col_cad1 = show_cad         ?       col_cad: na
col_usd1 = show_usd         ?       col_usd: na
col_xau1 = show_xau         ?       col_xau: na


if bars_back == 0
    col_nzd1 := na
    col_aud1 := na
    col_jpy1 := na
    col_chf1 := na
    col_eur1 := na
    col_gbp1 := na
    col_cad1 := na
    col_usd1 := na
    col_xau1 := na





if not show_val
    nzd1    :=   na
    aud1    :=   na
    jpy1    :=   na
    chf1    :=   na
    eur1    :=   na
    gbp1    :=   na
    cad1    :=   na
    usd1    :=   na
    xau1    :=   na

if not show_ave
    nzd_ave    :=   na
    aud_ave    :=   na
    jpy_ave    :=   na
    chf_ave    :=   na
    eur_ave    :=   na
    gbp_ave    :=   na
    cad_ave    :=   na
    usd_ave    :=   na
    xau_ave    :=   na







plot_style_type(currency, plot_title, classic)=>
    a =  currency == plot_title and classic?  plot.style_circles :  plot.style_linebr

nzd_plot =  plot.style_linebr//plot_style_type(currency, "NZD", classic)
aud_plot =  plot.style_linebr//plot_style_type(currency, "AUD", classic)
jpy_plot =  plot.style_linebr//plot_style_type(currency, "JPY", classic)
chf_plot =  plot.style_linebr//plot_style_type(currency, "CHF", classic)
eur_plot =  plot.style_linebr//plot_style_type(currency, "EUR", classic)
gbp_plot =  plot.style_linebr//plot_style_type(currency, "GBP", classic)
cad_plot =  plot.style_linebr//plot_style_type(currency, "CAD", classic)
usd_plot =  plot.style_linebr//plot_style_type(currency, "USD", classic)
xau_plot =  plot.style_linebr//plot_style_type(currency, "GOLD", classic)






plot(nzd1, title = "NZD", color = col_nzd1, linewidth = val_width, style = nzd_plot , transp = val_trans)
plot(aud1, title = "AUD", color = col_aud1, linewidth = val_width, style = aud_plot , transp = val_trans)
plot(jpy1, title = "JPY", color = col_jpy1, linewidth = val_width, style = jpy_plot , transp = val_trans)
plot(chf1, title = "CHF", color = col_chf1, linewidth = val_width, style = chf_plot , transp = val_trans)
plot(eur1, title = "EUR", color = col_eur1, linewidth = val_width, style = eur_plot , transp = val_trans)
plot(gbp1, title = "GBP", color = col_gbp1, linewidth = val_width, style = gbp_plot , transp = val_trans)
plot(cad1, title = "CAD", color = col_cad1, linewidth = val_width, style = cad_plot , transp = val_trans)
plot(usd1, title = "USD", color = col_usd1, linewidth = val_width, style = usd_plot , transp = val_trans)
plot(xau1, title = "XAU", color = col_xau1, linewidth = val_width, style = xau_plot , transp = val_trans)


plot(nzd_ave, title = "NZD average", color = col_nzd1, linewidth = ave_width, style =  nzd_plot, transp = ave_trans)
plot(aud_ave, title = "AUD average", color = col_aud1, linewidth = ave_width, style =  aud_plot , transp = ave_trans)
plot(jpy_ave, title = "JPY average", color = col_jpy1, linewidth = ave_width, style =  jpy_plot , transp = ave_trans)
plot(chf_ave, title = "CHF average", color = col_chf1, linewidth = ave_width, style =  chf_plot , transp = ave_trans)
plot(eur_ave, title = "EUR average", color = col_eur1, linewidth = ave_width, style =  eur_plot ,  transp = ave_trans)
plot(gbp_ave, title = "GBP average", color = col_gbp1, linewidth = ave_width, style =  gbp_plot , transp = ave_trans)
plot(cad_ave, title = "CAD average", color = col_cad1, linewidth = ave_width, style =  cad_plot , transp = ave_trans)
plot(usd_ave, title = "USD average", color = col_usd1, linewidth = ave_width, style =  usd_plot , transp = ave_trans)
plot(xau_ave, title = "XAU average", color = col_xau1, linewidth = ave_width, style =  xau_plot , transp = ave_trans)


lab_style = label.style_none
lab_size = size.normal



if show_labs

    lab_nzd =     label.new(bar_index[0], labs_on_ave?nzd_ave:nzd1, text = "        NZD", textcolor=col_nzd, color=col_nzd1, style = lab_style, size = lab_size)
    lab_aud =     label.new(bar_index[0], labs_on_ave?aud_ave:aud1, text = "        AUD", textcolor=col_aud, color=col_aud1, style = lab_style, size = lab_size)
    lab_jpy =     label.new(bar_index[0], labs_on_ave?jpy_ave:jpy1, text = "        JPY", textcolor=col_jpy, color=col_jpy1, style = lab_style, size = lab_size)
    lab_chf =     label.new(bar_index[0], labs_on_ave?chf_ave:chf1, text = "        CHF", textcolor=col_chf, color=col_chf1, style = lab_style, size = lab_size)
    lab_eur =     label.new(bar_index[0], labs_on_ave?eur_ave:eur1, text = "        EUR", textcolor=col_eur, color=col_eur1, style = lab_style, size = lab_size)
    lab_gbp =     label.new(bar_index[0], labs_on_ave?gbp_ave:gbp1, text = "        GBP", textcolor=col_gbp, color=col_gbp1, style = lab_style, size = lab_size)
    lab_cad =     label.new(bar_index[0], labs_on_ave?cad_ave:cad1, text = "        CAD", textcolor=col_cad, color=col_cad1, style = lab_style, size = lab_size)
    lab_usd =     label.new(bar_index[0], labs_on_ave?usd_ave:usd1, text = "        USD", textcolor=col_usd, color=col_usd1, style = lab_style, size = lab_size)
    lab_xau =     label.new(bar_index[0], labs_on_ave?xau_ave:xau1, text = "        XAU", textcolor=col_xau, color=col_xau1, style = lab_style, size = lab_size)

    label.delete(lab_nzd[1])
    label.delete(lab_aud[1])
    label.delete(lab_jpy[1])
    label.delete(lab_chf[1])
    label.delete(lab_eur[1])
    label.delete(lab_gbp[1])
    label.delete(lab_cad[1])
    label.delete(lab_usd[1])
    label.delete(lab_xau[1])