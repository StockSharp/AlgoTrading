//@version=6
strategy(title="Long-Only MTF EMA Cloud Strategy", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100, currency=currency.USD)

// Inputs for EMA Cloud
ma_len1 = input.int(21, title="Short EMA Length", group="EMA Cloud Settings")
ma_len2 = input.int(50, title="Long EMA Length", group="EMA Cloud Settings")
res = input.timeframe("", title="EMA Cloud Resolution (Leave blank for chart timeframe)", group="EMA Cloud Settings")

// Source and Offset
src = input(close, title="Source", group="General Settings")
ma_offset = input.int(0, title="Offset", group="General Settings")

// Stop Loss and Take Profit Inputs
sl_percent = input.float(1.0, title="Stop Loss (%)", minval=0.1, step=0.1, group="Risk Management") / 100
tp_percent = input.float(2.0, title="Take Profit (%)", minval=0.1, step=0.1, group="Risk Management") / 100

// Adjust resolution dynamically if left blank
dynamic_res = (res == "") ? timeframe.period : res

// --- Calculate EMA Cloud ---
htf_ma1 = ta.ema(src, ma_len1)
htf_ma2 = ta.ema(src, ma_len2)
out1 = request.security(syminfo.tickerid, dynamic_res, htf_ma1, gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_off)
out2 = request.security(syminfo.tickerid, dynamic_res, htf_ma2, gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_off)
mashort = out1
malong = out2
cloudcolour = mashort >= malong ? color.new(color.green, 54) : color.new(color.yellow, 54)

// Plot EMA Cloud
plot(mashort, color=color.blue, linewidth=1, offset=ma_offset, title="Short EMA")
plot(malong, color=color.red, linewidth=3, offset=ma_offset, title="Long EMA")
fill(plot(mashort), plot(malong), color=cloudcolour, title="EMA Cloud")

// --- Strategy Logic ---
// Entry Condition: EMA cloud turns bullish
long_entry = ta.crossover(mashort, malong)

// Calculate stop loss and take profit levels
long_stop_price = strategy.position_avg_price * (1 - sl_percent)
long_take_profit = strategy.position_avg_price * (1 + tp_percent)

// Strategy Execution
if (long_entry)
    strategy.entry("Long", strategy.long)
    strategy.exit("Take Profit/Stop Loss", from_entry="Long", stop=long_stop_price, limit=long_take_profit)

// Plot Buy Signal
plotshape(series=long_entry, title="Buy Signal", location=location.belowbar, color=color.green, style=shape.labelup, text="BUY")

// Alerts
alertcondition(long_entry, title="Long Alert", message="Long Entry Signal")