// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© RicardoSantos

//@version=4
study(title="Function - Sorted Indices")

// @function Sorts array and returns a extra array with sorting indices.
// @param sample_a float array with values to be sorted.
// @param order string, default='forward', options='forward', 'backward'.
// @returns
//      _indices int array with indices.
//      _ordered float array with ordered values.
f_sort_indices (sample_a, order) => //{
    _size = array.size(sample_a)
    if _size > 0
        float[] _ordered = array.copy(sample_a)
        int[] _indices = array.new_int(size=_size)
        for _i = 0 to _size - 1
            array.set(id=_indices, index=_i, value=_i)

        _tempv = float(na), _tempi = int(na)
        for _i = 0 to _size - 2
            _ai = array.get(_ordered, _i), _iai = array.get(_indices, _i)
            for _j = _i + 1 to _size - 1
                _aj = array.get(_ordered, _j), _iaj = array.get(_indices, _j)
                if _aj < _ai
                    _tempv := _aj, _tempi := _iaj
                    array.set(_ordered, _j, _ai), array.set(_indices, _j, _iai)
                    array.set(_ordered, _i, _tempv), array.set(_indices, _i, _tempi)
                    _ai := _tempv, _iai := _tempi

        if order == 'backward'
            array.reverse(id=_indices), array.reverse(id=_ordered)
        [_indices, _ordered]
//{ usage:

float[] values = array.from(55.0, 66, 44, 77, 80, -90, 1)
string direction = input(defval='forward', options=['forward', 'backward'])
if barstate.islast
    [indices, sorted] = f_sort_indices(values, 'forward')
    label.new(bar_index, 0., str.format('Original: {0}\nSorted: {1}\nIndices: {2}', values, sorted, indices))
//}}