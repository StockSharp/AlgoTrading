//@version=6
strategy(title = 'Maple Trailing TP Bot', shorttitle = 'Maple TTP Bot', overlay = true, pyramiding = 0, process_orders_on_close = false, close_entries_rule = 'ANY', calc_on_every_tick = false, calc_on_order_fills = false, commission_type = strategy.commission.percent, commission_value = 0.07, default_qty_type = strategy.percent_of_equity, default_qty_value = 100, initial_capital = 1000, currency = currency.USD)

//==== Inputs
fromDate = input.time(timestamp('01 Jan 2021 00:00 UTC'), 'From Date')
toDate = input.time(timestamp('31 Dec 2121 23:59 UTC'), 'To Date')
fastMALen = input.int(23, 'Fast SMA Length')
slowMALen = input.int(50, 'Slow SMA Length')
longTakeProfitPerc = input.float(0.5, 'Long Take Profit %', minval = 0.05, step = 0.05) * 0.01
shortTakeProfitPerc = input.float(0.5, 'Short Take Profit %', minval = 0.05, step = 0.05) * 0.01
enableTrailing = input.bool(true, 'Enable Trailing')
trailingTakeProfitPerc = input.float(0.01, 'Trailing Take Profit %', minval = 0.01, maxval = 100, step = 0.01) * 0.01
stopLossPerc = input.float(3.0, 'Stop Loss %', minval = 0.1, step = 0.1) * 0.01

//==== Signals
fastMA = ta.sma(close, fastMALen)
slowMA = ta.sma(close, slowMALen)
isWithinPeriod = time >= fromDate and time <= toDate
openLongPosition = isWithinPeriod and ta.crossover(fastMA, slowMA)
openShortPosition = isWithinPeriod and ta.crossunder(fastMA, slowMA)
longIsActive = openLongPosition or strategy.position_size > 0
shortIsActive = openShortPosition or strategy.position_size < 0

//==== Take-profit reference prices
var float longTakeProfitPrice = na
var float shortTakeProfitPrice = na
if longIsActive
    if openLongPosition and not(strategy.position_size > 0)
        longTakeProfitPrice := close * (1 + longTakeProfitPerc)
        longTakeProfitPrice
    else
        longTakeProfitPrice := nz(longTakeProfitPrice[1], close * (1 + longTakeProfitPerc))
        longTakeProfitPrice
else
    longTakeProfitPrice := na
    longTakeProfitPrice
if shortIsActive
    if openShortPosition and not(strategy.position_size < 0)
        shortTakeProfitPrice := close * (1 - shortTakeProfitPerc)
        shortTakeProfitPrice
    else
        shortTakeProfitPrice := nz(shortTakeProfitPrice[1], close * (1 - shortTakeProfitPerc))
        shortTakeProfitPrice
else
    shortTakeProfitPrice := na
    shortTakeProfitPrice

//==== Trailing step (in ticks) based on TP reference price
longTrailingTakeProfitStepTicks = na(longTakeProfitPrice) ? na : longTakeProfitPrice * trailingTakeProfitPerc / syminfo.mintick
shortTrailingTakeProfitStepTicks = na(shortTakeProfitPrice) ? na : shortTakeProfitPrice * trailingTakeProfitPerc / syminfo.mintick

//==== Entries (single-line calls)
if openLongPosition
    strategy.entry(id = 'Long Entry', direction = strategy.long, alert_message = 'Long(' + syminfo.ticker + '): Started')
if openShortPosition
    strategy.entry(id = 'Short Entry', direction = strategy.short, alert_message = 'Short(' + syminfo.ticker + '): Started')

//==== Take-profit exits (single-line calls)
if longIsActive
    strategy.exit(id = 'Long Take Profit', from_entry = 'Long Entry', limit = enableTrailing ? na : longTakeProfitPrice, trail_price = enableTrailing ? longTakeProfitPrice : na, trail_offset = enableTrailing ? longTrailingTakeProfitStepTicks : na, alert_message = 'Long(' + syminfo.ticker + '): Take Profit activated')
if shortIsActive
    strategy.exit(id = 'Short Take Profit', from_entry = 'Short Entry', limit = enableTrailing ? na : shortTakeProfitPrice, trail_price = enableTrailing ? shortTakeProfitPrice : na, trail_offset = enableTrailing ? shortTrailingTakeProfitStepTicks : na, alert_message = 'Short(' + syminfo.ticker + '): Take Profit activated')

//==== Protective Stop-Loss exits (single-line calls)
longStopPrice = longIsActive ? strategy.position_avg_price * (1 - stopLossPerc) : na
shortStopPrice = shortIsActive ? strategy.position_avg_price * (1 + stopLossPerc) : na
if longIsActive
    strategy.exit(id = 'Long SL', from_entry = 'Long Entry', stop = longStopPrice, alert_message = 'Long(' + syminfo.ticker + '): Stop Loss hit')
if shortIsActive
    strategy.exit(id = 'Short SL', from_entry = 'Short Entry', stop = shortStopPrice, alert_message = 'Short(' + syminfo.ticker + '): Stop Loss hit')

//==== Plots (single-line calls)
plot(series = fastMA, title = 'Fast SMA', color = color.blue, linewidth = 1, style = plot.style_line)
plot(series = slowMA, title = 'Slow SMA', color = color.orange, linewidth = 1, style = plot.style_line)
plot(series = longTakeProfitPrice, title = 'Long Take Profit', color = color.green, linewidth = 1, style = plot.style_cross, offset = 1)
plot(series = shortTakeProfitPrice, title = 'Short Take Profit', color = color.red, linewidth = 1, style = plot.style_cross, offset = 1)
plot(series = strategy.position_avg_price, title = 'Position', color = color.white, linewidth = 1, style = plot.style_linebr)