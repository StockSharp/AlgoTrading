//@version=4
study("Modified OBV w/ Divergence Detection by Cryptorhythms", shorttitle="OBV-M")
// TASC April 2020
// Modified On Balance Volume OBV-M
// Created by Vitali Apirine

//Settings
maInput = input(title="❓ OBV-M MA Type (ENA is default - the rest experimental)", defval="EMA", options=["EMA", "SMA", "VWMA", "WMA"])
Periods = input(7, "OVBM MA Length")
signalLength = input(10, "OBV-M Signal Length")
yes1 = input(title="Enable Bar Color by Trade?", type=input.bool, defval=true)

//MA selector - Something I added
getMA(src, length) =>
    ma = 0.0
    if maInput == "EMA"
        ma := ema(src, length)
    if maInput == "SMA"
        ma := sma(src, length)
    if maInput == "VWMA"
        ma := vwma(src, length)
    if maInput == "WMA"
        ma := wma(src, length)
    ma

//OBV-M Formula
OBVM = getMA(obv, Periods)
signal = getMA(OBVM, signalLength)

//Signal Conditions
long = crossover(OBVM, signal)
short = crossunder(OBVM, signal)

//Plots
plot(OBVM, color=color.teal, linewidth=2, title="OBV-M")
plot(signal, color=color.orange, linewidth=2, title="Signal Line")

//Trade State Bar Coloration - Something I added
barcolor(yes1 ? barssince(long) > barssince(short) ? color.red : color.lime : na)

//Divergence Detection thanks to Ricardo Santos!
oscilator_high=OBVM
oscilator_low=OBVM
high_src = high // input(high,title="High Source")
low_src  = low // input(low,title="Low Source")
SHOW_LABEL = true//input(title='Show Labels?', type=bool, defval=false)
SHOW_CHANNEL = false//input(title='Show Channel?', type=bool, defval=false)
//  ||  Filter Divergences Input:
filter_divergences = false//input(title='Filter Divergences?', defval=false, type=bool)
n_bar_min = 0//input(title='Divergence minimum bar length:', defval=0)
n_bar_max = 1000//input(title='Divergence maximum bar length:', defval=1000)
price_change_min = 5//input(title='Divergence minimum absolute price change %:', defval=10.0, type=float)
price_change_max = 25//input(title='Divergence maximum absolute price change %:', defval=50.0, type=float)


f_top_fractal(_src)=>_src[4] < _src[2] and _src[3] < _src[2] and _src[2] > _src[1] and _src[2] > _src[0]
f_bot_fractal(_src)=>_src[4] > _src[2] and _src[3] > _src[2] and _src[2] < _src[1] and _src[2] < _src[0]
f_fractalize(_src)=>f_top_fractal(_src) ? 1 : f_bot_fractal(_src) ? -1 : 0

fractal_top = f_fractalize(oscilator_high) > 0 ? oscilator_high[2] : na
fractal_bot = f_fractalize(oscilator_low) < 0 ? oscilator_low[2] : na

high_prev = valuewhen(fractal_top, oscilator_high[2], 0)[2]
high_price = valuewhen(fractal_top, high[2], 0)[2]
low_prev = valuewhen(fractal_bot, oscilator_low[2], 0)[2]
low_price = valuewhen(fractal_bot, low[2], 0)[2]

regular_bearish_div = fractal_top and high[2] > high_price and oscilator_high[2] < high_prev
hidden_bearish_div = fractal_top and high[2] < high_price and oscilator_high[2] > high_prev
regular_bullish_div = fractal_bot and low[2] < low_price and oscilator_low[2] > low_prev
hidden_bullish_div = fractal_bot and low[2] > low_price and oscilator_low[2] < low_prev

//  |   Filter divergences:  N
filter_bull = false
filter_bear = false
if filter_divergences
    if regular_bearish_div or hidden_bearish_div
        bars_from_previous = valuewhen(fractal_top, oscilator_high[2], 0)[2]
        previous_price = valuewhen(fractal_top, high[2], 0)[2]
        price_perc_change = ((abs(high[2] - previous_price) / previous_price) * 100)
        bars_check = bars_from_previous >= n_bar_min and bars_from_previous <= n_bar_max ? true : false
        price_check = price_perc_change >= price_change_min and price_perc_change <= price_change_max ? true : false
        //if bars_check and price_check
        filter_bear := true
    if regular_bullish_div or hidden_bullish_div
        bars_from_previous = valuewhen(fractal_bot, oscilator_low[2], 0)[2]
        previous_price = valuewhen(fractal_bot, low[2], 0)[2]
        price_perc_change = ((abs(low[2] - previous_price) / previous_price) * 100)
        bars_check = bars_from_previous >= n_bar_min and bars_from_previous <= n_bar_max ? true : false
        price_check = price_perc_change >= price_change_min and price_perc_change <= price_change_max ? true : false
        //if bars_check and price_check
        filter_bull := true

//  |   Labels and plots:
plotshape(title='+F', series=not filter_divergences ? na : filter_bear ? high[2] : na, text='F\n', style=shape.labeldown, location=location.absolute, color=color.maroon, textcolor=color.white, offset=-2)
plotshape(title='-F', series=not filter_divergences ? na : filter_bull ? low[2] : na, text='\nF', style=shape.labelup, location=location.absolute, color=color.green, textcolor=color.white, offset=-2)

plotshape(title='+RBD', series=not SHOW_LABEL ? na : regular_bearish_div ? oscilator_high[2] : na, text='R', style=shape.labeldown, location=location.absolute, color=color.red, textcolor=color.white, offset=-2, transp=0)
plotshape(title='+HBD', series=not SHOW_LABEL ? na : hidden_bearish_div ? oscilator_high[2] : na, text='H', style=shape.labeldown, location=location.absolute, color=color.red, textcolor=color.white, offset=-2, transp=0)
plotshape(title='-RBD', series=not SHOW_LABEL ? na : regular_bullish_div ? oscilator_low[2] : na, text='R', style=shape.labelup, location=location.absolute, color=color.lime, textcolor=color.white, offset=-2, transp=0)
plotshape(title='-HBD', series=not SHOW_LABEL ? na : hidden_bullish_div ? oscilator_low[2] : na, text='H', style=shape.labelup, location=location.absolute, color=color.lime, textcolor=color.white, offset=-2, transp=0)

plot(title='H F', series=fractal_top ? oscilator_high[2] : na, color=regular_bearish_div or hidden_bearish_div ? color.red : not SHOW_CHANNEL ? na : color.silver, offset=-2, linewidth=2, transp=0)
plot(title='L F', series=fractal_bot ? oscilator_low[2] : na, color=regular_bullish_div or hidden_bullish_div ? color.lime : not SHOW_CHANNEL ? na : color.silver, offset=-2, linewidth=2, transp=0)
plot(title='H D', series=fractal_top ? oscilator_high[2] : na, style=plot.style_circles, color=regular_bearish_div or hidden_bearish_div ? color.red : not SHOW_CHANNEL ? na : color.silver, linewidth=3, offset=-2, linewidth=2, transp=0)
plot(title='L D', series=fractal_bot ? oscilator_low[2] : na, style=plot.style_circles, color=regular_bullish_div or hidden_bullish_div ? color.lime : not SHOW_CHANNEL ? na : color.silver, linewidth=3, offset=-2, linewidth=2, transp=0)