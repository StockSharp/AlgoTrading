//@version=5
strategy("Economic Policy Uncertainty Strategy", overlay=false)

// Input parameters
threshold = input(187, title="Threshold")  // Dynamic Threshold
sma_length = input(2, title="SMA Length")  // SMA Length
exit_periods = input(10, title="Exit after x Periods")  // Exit after a certain number of periods

// Data series for the base asset "FRED: USEPUINDXD"
// We use the request.security function to retrieve data from "FRED:USEPUINDXD".
usepuindxd = request.security("FRED:USEPUINDXD", "D", close)

// Calculation of the Simple Moving Average (SMA) based on the retrieved base asset
sma_value = ta.sma(usepuindxd, sma_length)

// Long Entry Condition: SMA crosses above the threshold
long_condition = ta.crossover(sma_value, threshold)

// Variable to track the number of periods since a trade was opened
var int bars_in_trade = na

// Entry Signal (Long)
if (long_condition)
    strategy.entry("Long", strategy.long)
    bars_in_trade := 0  // Set the counting variable to 0 when a trade is opened

// If a trade is active, count the number of periods
if (strategy.opentrades > 0)
    bars_in_trade := nz(bars_in_trade) + 1

// Exit Condition: Exit after a certain number of periods
if (bars_in_trade >= exit_periods)
    strategy.close("Long")
    bars_in_trade := na  // Reset the counting variable when the position is closed

// Set background color when a position is open
bgcolor(strategy.opentrades > 0 ? color.new(color.green, 50) : na)

// Plot the base asset, SMA, and threshold
plot(usepuindxd, title="USEPUINDXD", color=color.blue, display=display.none)
plot(sma_value, title="SMA", color=color.white)
hline(threshold, "Threshold", color=color.gray)