//@version=5
strategy("Long-Leg Doji Breakout Strategy", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=10)
//King, The Indian
// Input parameters
doji_body_threshold = input.float(0.1, title="Doji Body Threshold (%)", minval=0.01, maxval=1.0, step=0.01) / 100
min_wick_ratio = input.float(2.0, title="Minimum Wick to Body Ratio", minval=1.0, maxval=10.0, step=0.1)
use_atr_filter = input.bool(true, title="Use ATR Filter for Long Legs")
atr_period = input.int(14, title="ATR Period", minval=1)
atr_multiplier = input.float(0.5, title="ATR Multiplier for Long Legs", minval=0.1, maxval=2.0, step=0.1)

// Calculate ATR for filtering
atr_value = ta.atr(atr_period)

// Doji detection logic
body_size = math.abs(close - open)
candle_range = high - low
upper_wick = high - math.max(open, close)
lower_wick = math.min(open, close) - low

// Long-Leg Doji conditions
is_small_body = body_size <= (candle_range * doji_body_threshold)
has_long_wicks = upper_wick >= (body_size * min_wick_ratio) and lower_wick >= (body_size * min_wick_ratio)
atr_condition = use_atr_filter ? (upper_wick >= atr_value * atr_multiplier and lower_wick >= atr_value * atr_multiplier) : true

is_long_leg_doji = is_small_body and has_long_wicks and atr_condition

// Store Doji levels
var float doji_high = na
var float doji_low = na
var bool waiting_for_breakout = false

// Detect new Doji and store levels
if is_long_leg_doji and not waiting_for_breakout
    doji_high := high
    doji_low := low
    waiting_for_breakout := true

// Trading logic
long_signal = waiting_for_breakout and close > doji_high and close[1] <= doji_high
short_signal = waiting_for_breakout and close < doji_low and close[1] >= doji_low

// Execute trades
if long_signal
    strategy.entry("Long", strategy.long)
    waiting_for_breakout := false

if short_signal
    strategy.entry("Short", strategy.short)
    waiting_for_breakout := false

// Exit conditions (optional - you can modify these)
if strategy.position_size > 0 and ta.crossunder(close, ta.sma(close, 20))
    strategy.close("Long")

if strategy.position_size < 0 and ta.crossover(close, ta.sma(close, 20))
    strategy.close("Short")

// Custom coloring for Doji candles
doji_color = is_long_leg_doji ? color.yellow : na
plotcandle(open, high, low, close, color=doji_color, wickcolor=doji_color, bordercolor=doji_color, title="Long-Leg Doji")

// Plot normal candles with standard colors when not Doji
normal_color = not is_long_leg_doji ? (close >= open ? color.green : color.red) : na
plotcandle(open, high, low, close, color=normal_color, wickcolor=normal_color, bordercolor=normal_color, title="Normal Candles")

// Plot Doji high/low levels
plot(waiting_for_breakout ? doji_high : na, color=color.red, linewidth=2, style=plot.style_line, title="Doji High")
plot(waiting_for_breakout ? doji_low : na, color=color.blue, linewidth=2, style=plot.style_line, title="Doji Low")

// Plot entry signals
plotshape(long_signal, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.small, title="Long Entry")
plotshape(short_signal, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.small, title="Short Entry")

// Plot Doji identification
plotshape(is_long_leg_doji, style=shape.circle, location=location.abovebar, color=color.yellow, size=size.tiny, title="Long-Leg Doji Detected")

// Background color for active Doji period
bgcolor(waiting_for_breakout ? color.new(color.yellow, 90) : na, title="Waiting for Breakout")

// Alert conditions
alertcondition(long_signal, title="Long Entry Signal", message="Long-Leg Doji Breakout - Long Entry")
alertcondition(short_signal, title="Short Entry Signal", message="Long-Leg Doji Breakout - Short Entry")
alertcondition(is_long_leg_doji, title="Doji Detected", message="Long-Leg Doji Pattern Detected")