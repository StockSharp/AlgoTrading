//@version=6
strategy('EMA Cross + MACD Confluence (with Session-Start Entry)', overlay=true, calc_on_every_tick=true, currency=currency.USD)

// INPUTS
emaFast        = input.int(title='Fast EMA',          defval=10, minval=1,    maxval=9999)
emaSlow        = input.int(title='Slow EMA',          defval=20, minval=1,    maxval=9999)

macdFastLen    = input.int(title='MACD Fast Length',  defval=12, minval=1)
macdSlowLen    = input.int(title='MACD Slow Length',  defval=26, minval=1)
macdSignalLen  = input.int(title='MACD Signal Length',defval=9,  minval=1)

tradeDirection = input.string(title='Trade Direction', options=['Long','Short','Both'], defval='Both')

startDate      = input.time(title='Start Date',       defval=timestamp('01 Jan 1970 00:00'))
endDate        = input.time(title='End Date',         defval=timestamp('31 Dec 2170 23:59'))

sessionHours   = input.session(title='Trading Hours',  defval='0930-1600')

// CALCULATIONS
fastEMA = ta.ema(close, emaFast)
slowEMA = ta.ema(close, emaSlow)

[macdLine, signalLine, _] = ta.macd(close, macdFastLen, macdSlowLen, macdSignalLen)
macdHist = macdLine - signalLine

// PLOT
plot(fastEMA, color=color.new(color.orange, 0), linewidth=2)
plot(slowEMA, color=color.new(color.blue,   0), linewidth=2)
hline(0, 'Zero', color.gray)

// FILTERS
inDateRange     = time >= startDate and time < endDate
inSession       = not na(time(timeframe.period, sessionHours))
prevSession     = inSession[1]
justSessionStart = inSession and not prevSession

longOK  = tradeDirection == 'Long' or tradeDirection == 'Both'
shortOK = tradeDirection == 'Short' or tradeDirection == 'Both'

// SIGNALS
longSignal   = ta.crossover(fastEMA, slowEMA)
shortSignal  = ta.crossunder(fastEMA, slowEMA)

macdOKLong   = macdHist > 0
macdOKShort  = macdHist < 0

// ENTRIES
// - on crossover/crossunder during session
// - or on first bar of session if price/MACD condition already holds
if inDateRange and inSession and longOK and macdOKLong and
   ( longSignal
   or (justSessionStart and fastEMA > slowEMA) )
    strategy.entry(id='Long', direction=strategy.long)

if inDateRange and inSession and shortOK and macdOKShort and
   ( shortSignal
   or (justSessionStart and fastEMA < slowEMA) )
    strategy.entry(id='Short', direction=strategy.short)

// EXITS
if strategy.position_size > 0 and (shortSignal or not inSession)
    strategy.exit(id='Exit Long',  from_entry='Long',  stop=close)

if strategy.position_size < 0 and (longSignal or not inSession)
    strategy.exit(id='Exit Short', from_entry='Short', stop=close)