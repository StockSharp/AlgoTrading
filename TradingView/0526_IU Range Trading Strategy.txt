// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Shivam_Mandrai

//@version=6
strategy("IU Range Trading Strategy", overlay = true, max_boxes_count = 500 , initial_capital = 100000, slippage = 1, commission_value = 0.02)

// ___________________________________________________________ User Inputs / Settings __________________________________________________________________ \\
range_length        = input.int(10, "Enter the Range Length = ")
atr_leghth          = input.int(14, "ATR Lenght = ")
atr_target_factor   = input.float(2.00, "ATR Stop loss Factor")
atr_range_factor    = input.float(1.75, "ATR Range Factor", tooltip = "This will set the Range Lenght mulitplier of ATR value ")


// ____________________________________________________________ Indicators ______________________________________________________________________________ \\
highest              = ta.highest(range_length)
lowest               = ta.lowest(range_length)
atr                  = ta.atr(14)
// ------------ range condition ----------- \\
range_cond           = (highest - lowest) <= atr * atr_range_factor


// ____________________________________________________________ box creation and entry logic ____________________________________________________________ \\
var box my_box = na
if range_cond and not range_cond[1] and strategy.position_size == 0
    // ------------ box creation ------------- \\
    my_box := box.new(bar_index[range_length], highest, bar_index + 1, lowest, xloc = xloc.bar_index, bgcolor = color.new(color.purple , 80))
    // ------------ long entry --------------- \\
    strategy.entry("long",  strategy.long , stop = my_box.get_top()   , comment = "Long Entry" )
    // ------------ Short entry -------------- \\
    strategy.entry("short", strategy.short, stop = my_box.get_bottom(), comment = "Short Trade")

// ------------------- box adjustment ------------------- \\
if range_cond[1] and range_cond and strategy.position_size == 0
    my_box.set_rightbottom(bar_index, lowest)


// ____________________________________________________________ one entry a time logic ___________________________________________________________________\\
if strategy.position_size > 0
    strategy.cancel("short")

if strategy.position_size < 0
    strategy.cancel("long")




// ____________________________________________________Profit / target based trailing SL ____________________________________________________________\\
float target_based_atr = ta.atr(atr_leghth)
var float SL_0         = na
var float SL_1         = na
var float trailing_SL  = na
var TP_store           = array.new<float>()
float entry_price      = strategy.position_avg_price
position_size          = strategy.position_size

// ------------- ATR Target based SL part ------------------------ \\

if position_size != 0 and position_size[1] == 0
    SL_0            := position_size > 0 ? entry_price - (target_based_atr * atr_target_factor) : entry_price + (target_based_atr * atr_target_factor)
    SL_1            := entry_price
    trailing_SL     := position_size > 0 ? entry_price + ( target_based_atr * atr_target_factor) : entry_price - (target_based_atr * atr_target_factor)
    TP_store.push(trailing_SL)
if position_size != 0
    if position_size > 0 and  high > trailing_SL
        SL_0         := SL_1
        SL_1         := trailing_SL
        trailing_SL  := TP_store.last() + ( target_based_atr * atr_target_factor)
        TP_store.push(trailing_SL)
    if position_size < 0 and low < trailing_SL
        SL_0         := SL_1
        SL_1         := trailing_SL
        trailing_SL  := TP_store.last() - ( target_based_atr * atr_target_factor)
        TP_store.push(trailing_SL)
// ------- Reset Variables When Position Closes -------- \\
if position_size == 0 and position_size[1] != 0
    SL_0             := na
    SL_1             := na
    trailing_SL      := na
    TP_store.clear()
// ------- Exit Strategy ------- \\
if position_size > 0
    strategy.exit("long" , "long" , stop = SL_0, comment = "Long Exit")

// ------- Exit Strategy ------- \\
if position_size < 0
    strategy.exit("short", "short", stop = SL_0, comment = "Short Exit")


// _______________________________________________________ Plotting Target Based Trailing SL ____________________________________________________\\
//@function to get the right plot of target based trailing SL
right_plot_1(cond, value)=>
    float return_value = na
    if cond
        return_value := value
    else if cond[1] and not cond
        return_value := value[1]

    return_value

SL_0_plot = plot(right_plot_1(position_size != 0 , SL_0 )    , color=color.red   , style=plot.style_linebr)
SL_1_plot = plot(right_plot_1(position_size != 0 ,SL_1 )     , color=color.gray  , style=plot.style_linebr)
TS_1_plot = plot(right_plot_1(position_size != 0,trailing_SL), color=color.green , style=plot.style_linebr)

///-----------------------------  Filling SL and TP ----------------------------- \\
// ---- for long --- \\
fill(SL_1_plot, SL_0_plot,top_value = SL_1, bottom_value = SL_0       , bottom_color = color.new(color.red, 80)   , top_color    = color(na) )
fill(TS_1_plot, SL_1_plot,top_value = trailing_SL, bottom_value = SL_1, top_color    = color.new(color.lime, 80) , bottom_color = color(na) )