//@version=6
//Quant Trading
strategy("Enhanced Ichimoku Cloud Strategy V1 [Quant Trading]", overlay=true,
     default_qty_type=strategy.percent_of_equity,
     default_qty_value=100,
     commission_type=strategy.commission.percent,
     commission_value=0.1,
     slippage=3,
     initial_capital=1000,
     margin_long=0,
     margin_short=0)

// === DESCRIPTION ===
// Enhanced Ichimoku Cloud Strategy with 171-Day EMA
// Original logic preserved with proper formatting and structure

// === INPUT PARAMETERS ===

// Date Range Settings
startDate = input.time(timestamp("01 Jan 2018 00:00 +0000"), "Start Date", group="Date Range")
endDate = input.time(timestamp("31 Dec 2069 23:59 +0000"), "End Date", group="Date Range")

// Ichimoku Settings
conversionPeriods = input.int(7, minval=1, title="Conversion Line Periods", group="Ichimoku Settings")
basePeriods = input.int(211, minval=1, title="Base Line Periods", group="Ichimoku Settings")
laggingSpan2Periods = input.int(120, minval=1, title="Lagging Span 2 Periods", group="Ichimoku Settings")
displacement = input.int(41, minval=1, title="Displacement", group="Ichimoku Settings")

// EMA Settings
emaPeriod = input.int(171, minval=1, title="EMA Period", group="EMA Settings")

// Trade Settings
tradeModeOptions = input.string(defval="Ichi", title="Trade Setup", options=["Ichi", "Cloud"], group="Trade Settings")
allowShortTrades = input.bool(false, "Allow Short Trades?", group="Trade Settings")

// === 1️⃣ CALCULATIONS ===

// Date Range Filter
tradeAllowed = time >= startDate and time <= endDate

// EMA Calculation
ema171 = ta.ema(close, emaPeriod)

// Donchian Channel Function
f_donchian(len) =>
    l = ta.lowest(low, len)
    h = ta.highest(high, len)
    (l + h) / 2

// Ichimoku Components
conversionLine = f_donchian(conversionPeriods)
baseLine = f_donchian(basePeriods)
spanA = (conversionLine + baseLine) / 2
spanB = f_donchian(laggingSpan2Periods)

// === 2️⃣ ENTRY & EXIT LOGIC ===

// Original Ichimoku Conditions (preserved exactly)
idealbuy = (spanA[displacement - 1] > spanB[displacement - 1]) and
           (close > high[25]) and
           (conversionLine > baseLine) and
           (close > ema171)

idealsell = (conversionLine < baseLine)

// State Tracking (preserved exactly)
var bool buymem = false
var bool sellmem = false

if idealbuy
    buymem := true
else if idealsell
    buymem := false
else
    buymem := buymem[1]

if idealsell
    sellmem := true
else if idealbuy
    sellmem := false
else
    sellmem := sellmem[1]

// Signal Generation (preserved exactly)
longCond = idealbuy and not buymem[1]
shortCond = idealsell and not sellmem[1]

// Determine Buy and Sell Signals (preserved exactly)
buySignal = (tradeModeOptions == "Ichi") ? longCond : ta.crossover(spanA, spanB) and (low > spanA[25]) and (low > spanB[25]) and (close > ema171)
sellSignal = (tradeModeOptions == "Ichi") ? shortCond : ta.crossunder(spanA, spanB) and (high < spanA[25]) and (high < spanB[25]) and (close < ema171)

// === 3️⃣ TRADE EXECUTIONS ===

// Original Trade Logic (preserved exactly)
forced_slippage = close + (3 * syminfo.mintick)

if tradeAllowed
    if strategy.position_size == 0 and buySignal
        strategy.entry("Long", strategy.long, limit=forced_slippage)

    if sellSignal
        strategy.close("Long")

// === 4️⃣ VISUALIZATIONS ===

// Ichimoku Cloud Components
plot(conversionLine, color=color.yellow, title="Conversion Line")
plot(baseLine, color=color.blue, title="Base Line")

p1 = plot(spanA, offset=displacement - 1, color=color.green, title="Span A")
p2 = plot(spanB, offset=displacement - 1, color=color.red, title="Span B")
plot(close, offset=-displacement + 1, color=color.gray, title="Lagging Span")

// Cloud Fill
fill(p1, p2, color=spanA > spanB ? color.new(color.green, 80) : color.new(color.red, 80))

// EMA
plot(ema171, color=color.orange, title="171-Day EMA")

// Entry and Exit Signals (commented out as in original)
// plotshape(series=buySignal, title="Buy Entry", location=location.belowbar, style=shape.labelup, color=color.lime, text="BUY", size=size.small)
// plotshape(series=sellSignal, title="Sell Exit", location=location.abovebar, style=shape.labeldown, color=color.red, text="SELL", size=size.small)