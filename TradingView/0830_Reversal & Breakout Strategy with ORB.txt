//@version=5

// --- Inputs ---
ema9Length = input.int(9, "9 EMA Length", minval=1)
ema20Length = input.int(20, "20 EMA Length", minval=1)
sma50Length = input.int(50, "50 SMA Length", minval=1)
sma200Length = input.int(200, "200 SMA Length", minval=1)
rsiLength = input.int(14, "RSI Length", minval=1)
rsiOverbought = input.int(70, "RSI Overbought", minval=0, maxval=100)
rsiOversold = input.int(30, "RSI Oversold", minval=0, maxval=100)
atrLength = input.int(14, "ATR Length", minval=1)
stopMulti = input.float(1.5, "Stop Loss ATR Multiplier", minval=0.1, step=0.1, tooltip="Increased to ensure sustainable risk")
stopLookback = input.int(7, "Stop Loss Lookback", minval=1)
rr1 = input.float(1.0, "Risk:Reward Target 1", minval=0.1, step=0.1)
rr2 = input.float(2.0, "Risk:Reward Target 2", minval=0.1, step=0.1)
target1Percent = input.float(50, "Profit % Target 1", minval=0, maxval=100, tooltip="50% of position exits at Target 1")
orbBars = input.int(15, "Opening Range Bars", minval=1, tooltip="Number of bars for opening range (e.g., 15 bars = 30 min on 2-min chart)")
volThreshold = input.float(1.5, "Volume Threshold Multiplier", minval=1.0, step=0.1)
commissionValue = input.float(0.1, "Commission per Trade (%)", minval=0, step=0.01, tooltip="Realistic commission (used for display purposes)")
slippageValue = input.int(2, "Slippage (ticks)", minval=0, step=1, tooltip="Realistic slippage (used for display purposes)")

// --- Realistic Backtesting Settings ---
strategy("Reversal & Breakout Strategy with ORB", overlay=true, pyramiding=2, default_qty_type=strategy.percent_of_equity, default_qty_value=5, commission_type=strategy.commission.percent, commission_value=0.1, slippage=2)

// --- Indicators ---
// Moving Averages
ema9 = ta.ema(close, ema9Length)
ema20 = ta.ema(close, ema20Length)
sma50 = ta.sma(close, sma50Length)
sma200 = ta.sma(close, sma200Length)

// VWAP
vwapValue = ta.vwap(close)

// RSI
rsi = ta.rsi(close, rsiLength)

// ATR
atr = ta.atr(atrLength)

// --- Opening Range Breakout ---
var float openingRangeHigh = na
var float openingRangeLow = na
var float openingRangeAvgVol = na

float rangeHigh = ta.highest(high, orbBars)
float rangeLow = ta.lowest(low, orbBars)
float avgVol = ta.sma(volume, orbBars)

if bar_index == orbBars
    openingRangeHigh := rangeHigh
    openingRangeLow := rangeLow
    openingRangeAvgVol := avgVol

orbLong = not na(openingRangeHigh) and ta.crossover(close, openingRangeHigh) and volume > openingRangeAvgVol * volThreshold
orbShort = not na(openingRangeLow) and ta.crossunder(close, openingRangeLow) and volume > openingRangeAvgVol * volThreshold

// --- Trend Detection ---
trendUp = close > sma200
trendDown = close < sma200

// --- Reversal Conditions ---
reversalLong = ta.crossover(close, sma50) and rsi < rsiOversold and close < vwapValue and trendUp
reversalShort = ta.crossunder(close, sma50) and rsi > rsiOverbought and close > vwapValue and trendDown

// --- Breakout Conditions ---
breakoutLong = ta.crossover(ema9, ema20) and close > vwapValue and trendUp
breakoutShort = ta.crossunder(ema9, ema20) and close < vwapValue and trendDown

// Combine conditions
longCondition = (reversalLong or breakoutLong or orbLong)
shortCondition = (reversalShort or breakoutShort or orbShort)

// --- Stop Loss Calculation ---
longStop = ta.lowest(low, stopLookback) - (atr * stopMulti)
shortStop = ta.highest(high, stopLookback) + (atr * stopMulti)

// --- Variables to Store Trade Levels ---
var float tradeStop = na
var float tradeTarget1 = na
var float tradeTarget2 = na
var float stopLevel = na
var float target1Level = na
var float target2Level = na
var float qtyTotal = na
var bool breakEvenSet = false

// --- Reset Levels Before New Trade ---
var bool newTrade = false
if longCondition or shortCondition
    newTrade := true
else
    newTrade := false

if strategy.position_size == 0 and newTrade
    tradeStop := na
    tradeTarget1 := na
    tradeTarget2 := na
    stopLevel := na
    target1Level := na
    target2Level := na
    qtyTotal := na
    breakEvenSet := false

// --- Strategy Entries ---
if longCondition and strategy.position_size == 0
    strategy.entry("Long", strategy.long)
    tradeStop := longStop
    stopLevel := longStop
    stopDistance = close - tradeStop
    tradeTarget1 := close + (stopDistance * rr1)
    tradeTarget2 := close + (stopDistance * rr2)
    target1Level := tradeTarget1
    target2Level := tradeTarget2
    qtyTotal := strategy.position_size
    breakEvenSet := false

if shortCondition and strategy.position_size == 0
    strategy.entry("Short", strategy.short)
    tradeStop := shortStop
    stopLevel := shortStop
    stopDistance = tradeStop - close
    tradeTarget1 := close - (stopDistance * rr1)
    tradeTarget2 := close - (stopDistance * rr2)
    target1Level := tradeTarget1
    target2Level := tradeTarget2
    qtyTotal := strategy.position_size
    breakEvenSet := false

// --- Trade Exits ---
if strategy.position_size > 0
    qty_tp1 = math.abs(qtyTotal) * (target1Percent / 100)
    qty_tp2 = strategy.position_size - qty_tp1
    strategy.exit("Long Exit 1", "Long", qty=qty_tp1, stop=stopLevel, limit=target1Level)
    strategy.exit("Long Exit 2", "Long", qty=qty_tp2, stop=stopLevel, limit=target2Level)

if strategy.position_size < 0
    qty_tp1 = math.abs(qtyTotal) * (target1Percent / 100)
    qty_tp2 = math.abs(strategy.position_size) - qty_tp1
    strategy.exit("Short Exit 1", "Short", qty=qty_tp1, stop=stopLevel, limit=target1Level)
    strategy.exit("Short Exit 2", "Short", qty=qty_tp2, stop=stopLevel, limit=target2Level)

// --- Move Stop to Break-even ---
if strategy.position_size != 0 and not breakEvenSet
    if math.abs(strategy.position_size) < math.abs(qtyTotal)
        tradeStop := strategy.position_avg_price
        stopLevel := tradeStop
        tradeTarget1 := na
        breakEvenSet := true

// --- Reset Levels When No Position ---
if strategy.position_size == 0 and not newTrade
    tradeStop := na
    tradeTarget1 := na
    tradeTarget2 := na
    stopLevel := na
    target1Level := na
    target2Level := na
    qtyTotal := na
    breakEvenSet := false

// --- Plotting ---
plot(tradeStop, title="Stop Loss", color=color.red, linewidth=1, style=plot.style_linebr)
plot(tradeTarget1, title="Take Profit 1", color=color.green, linewidth=1, style=plot.style_linebr)
plot(tradeTarget2, title="Take Profit 2", color=color.blue, linewidth=1, style=plot.style_linebr)
plot(ema9, title="9 EMA", color=color.orange, linewidth=1)
plot(ema20, title="20 EMA", color=color.green, linewidth=1)
plot(sma50, title="50 SMA", color=color.blue, linewidth=1)
plot(sma200, title="200 SMA", color=color.purple, linewidth=1)
plot(vwapValue, title="VWAP", color=color.blue, linewidth=2)