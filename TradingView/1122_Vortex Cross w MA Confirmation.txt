// Â© NantzOS

//@version=5
strategy("Vortex + Moving Average Strategy", overlay=true, format=format.price, precision=2)

//Vortex settings
period_ = input.int(14, title="Vortex Length", minval=2)
VMP = math.sum( math.abs( high - low[1]), period_ )
VMM = math.sum( math.abs( low - high[1]), period_ )
STR = math.sum( ta.atr(1), period_ )
VIP = VMP / STR
VIM = VMM / STR

// MA Settings
len = input.int(9, minval=1, title="SMA Length")
src = input(close, title="Source")
sma = ta.sma(src, len)

ma(source, Length, type) =>
    switch type
        "SMA" => ta.sma(source, Length)
        "EMA" => ta.ema(source, Length)
        "RMA" => ta.rma(source, Length)
        "WMA" => ta.wma(source, Length)
        "VWMA" => ta.vwma(source, Length)
        "ALMA" => ta.alma(source, Length, 0.85, 6)
        "HMA" => ta.hma(source, Length)

typeMA = input.string(title = "Method", defval = "SMA", options=["SMA", "EMA", "RMA", "WMA", "VWMA", "ALMA", "HMA"], group = "SMA Smoothing")
smoothingLength = input.int(title = "Length", defval = 1, minval = 1, maxval = 100, group="SMA Smoothing")

smoothingLine = ma(sma, smoothingLength, typeMA)

// Strategy Conditions
longCondition = ta.crossover(VIP, VIM) and close > smoothingLine
shortCondition = ta.crossunder(VIP, VIM) and close < smoothingLine
upCondition = ta.crossunder(VIM, VIP)
downCondition = ta.crossunder(VIP, VIM)

// Strategy Logic and Plotting
if longCondition
    strategy.entry("Long", strategy.long)

if shortCondition
    strategy.entry("Short", strategy.short)

plot(smoothingLine, title="Average", color=color.rgb(217, 217, 230, 40))

bgcolor(downCondition ? color.rgb(239, 8, 93, 60) : na)
bgcolor(upCondition ? color.rgb(30, 7, 235, 60) : na)

//______ _________
//___  //_/__  __ \
//__  ,<  __  /_/ /
//_  /| | _  ____/
///_/ |_| /_/