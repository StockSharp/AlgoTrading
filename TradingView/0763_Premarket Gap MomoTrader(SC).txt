//@version=6
strategy("Premarket Gap MomoTrader(SC)", shorttitle="MomoTrader", overlay=true, initial_capital=100000)

// ─── USER INPUTS ───────────────────────────────────────────────────────────────
minGainPct   = input.float(5.0,  "Min % Gain for Entry")
minVolume    = input.int(15000,  "Min Volume for Entry")
useSession   = input.bool(true,  "Restrict to Premarket")
sessionStr   = "0400-0930"       // Session definition for 4:00-9:30

// We'll assume the script is dealing with stocks; you can adjust the share calculation as needed.

// ─── ONE-TRADE-PER-DAY LOGIC ──────────────────────────────────────────────────
var bool isTradedToday = false
if dayofmonth != dayofmonth[1]
    isTradedToday := false

// ─── SESSION / TIME DETECTION ────────────────────────────────────────────────
bool isPreMarket = not na(time(timeframe.period, sessionStr))  // True during 4:00–9:30

// ─── CANDLE CALCULATIONS ─────────────────────────────────────────────────────
float prevClose     = close[1]
float candleMovePct = ((close - prevClose) / prevClose) * 100
float candleRange   = high - low
float candleBody    = math.abs(close - open)
float bodyPct       = candleRange == 0.0 ? 0.0 : (candleBody / candleRange) * 100
bool  isGreen       = close > open
bool  enoughVolume  = volume > minVolume

// ─── DYNAMIC BODY POSITION ───────────────────────────────────────────────────
// - If bodyPct >= 90 => 100%
// - Else if bodyPct >= 85 => 50%
// - Else if bodyPct >= 75 => 25%
// - Else => 0% (skip trade)
float bodyPosSizePercent =
     bodyPct >= 90 ? 100
   : bodyPct >= 85 ? 50
   : bodyPct >= 75 ? 25
   :                 0

// ─── ENTRY CONDITIONS ────────────────────────────────────────────────────────
bool enterCondition = (candleMovePct >= minGainPct) and isGreen and enoughVolume and (bodyPosSizePercent > 0)
bool validSession   = useSession ? isPreMarket : true
bool enterTrade     = enterCondition and validSession and not isTradedToday

// ─── STRATEGY ENTRY (CALCULATE SHARES MANUALLY) ─────────────────────────────
if enterTrade
    // For a more accurate approach, you might want to use close[1], or possibly limit orders, etc.
    float shares = (strategy.equity * (bodyPosSizePercent / 100.0)) / close
    float sharesRounded = math.floor(shares)  // or math.round(), your preference
    // Submit a market order with the chosen share size:
    strategy.entry("Long DynBody", strategy.long, qty=sharesRounded)
    isTradedToday := true

// ─── MANAGE THE TRADE ────────────────────────────────────────────────────────
var bool  inMomentumTrade  = false
var float lastCandleVolume = na

if strategy.position_size > 0
    if not inMomentumTrade
        // We just got filled on this bar
        inMomentumTrade := true
        lastCandleVolume := volume
    else
        bool nextBarGreen     = close > open
        bool volumeIncreasing = volume > lastCandleVolume
        if nextBarGreen and volumeIncreasing
            lastCandleVolume := volume
        else
            // On first red or if volume not bigger on green => exit
            strategy.close("Long DynBody")
            inMomentumTrade := false
else
    // If flat, reset
    inMomentumTrade := false
    lastCandleVolume := na