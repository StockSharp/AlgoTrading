//@version=5
strategy("Dynamic Volatility Differential Model (DVDM)", overlay=false)

// Inputs
length = input.int(5, title="Periods for Historical Volatility", minval=1)
vix_symbol = input.string("TVC:VIX", title="Volatility Index Symbol", options=["TVC:VIX", "CBOE:VXN", "CBOE:VXD", "CBOEFTSE:RVX", "CBOE:GVZ", "INDEX:DV1X"])
stdev_multiplier = input.float(7.1, title="Standard Deviation Multiplier", minval=0.1, step=0.1) // Multiplier for dynamic threshold

// Historical Volatility (Realized Volatility)
log_return = math.log(close / close[1])
historical_volatility = ta.stdev(log_return, length) * math.sqrt(252) * 100

// Implied Volatility (selected volatility index)
volatility_index_close = request.security(vix_symbol, "D", close, lookahead=barmerge.lookahead_off)

// Spread between Implied and Historical Volatility
volatility_spread = volatility_index_close - historical_volatility

// Dynamic thresholds based on standard deviation
spread_stdev = ta.stdev(volatility_spread, length)
upper_threshold = spread_stdev * stdev_multiplier
lower_threshold = -spread_stdev * stdev_multiplier

// Highlight background for extreme conditions
bgcolor(volatility_spread > upper_threshold ? color.new(color.green, 40) :
       volatility_spread < lower_threshold ? color.new(color.red, 40) : na)

// Plot the Volatility Spread and Thresholds
plot(volatility_spread, title="Volatility Spread", color=color.blue, linewidth=2)
hline(0, "Zero Line", color=color.gray, linestyle=hline.style_dotted)
plot(upper_threshold, title="Upper Threshold", color=color.green, linewidth=1)
plot(lower_threshold, title="Lower Threshold", color=color.red, linewidth=1)

// Trading Conditions
long_condition = volatility_spread > upper_threshold
short_condition = volatility_spread < lower_threshold

if (long_condition)
    strategy.entry("Long", strategy.long)

if (short_condition)
    strategy.entry("Short", strategy.short)

// Exit Conditions
exit_long_condition = ta.crossover(volatility_spread, 0)
exit_short_condition = ta.crossunder(volatility_spread, 0)

if (exit_long_condition)
    strategy.close("Long")

if (exit_short_condition)
    strategy.close("Short")