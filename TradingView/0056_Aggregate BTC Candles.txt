// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© rthomson

//@version=4
study("Aggregate BTC Candles", overlay=false)

//This indicator was written for use in my algos. It will be hard to understand why it's doing what it is doing unless you look at the btc tickers between 2011 and 2016, in particular Bitstamp, Kraken, Mt. Gox and Bitfinex.
//Their price history is full of ridiciculous massive flash crash wicks that affect one exchange only, missing data, early data being highly erratic and out of sync with the other markets, amongst other garbage.
//For these reasons and others Derivatives exchanges employ an Index Price, and often a Mark Price. This tries to do a similar kind of thing, but harder because there aren't many tickers for the early years.
//The resulting Index here creates a clean chart that could be used either for manual TA, or in my case, for an algo that isn't dependent on one exchange. Should you wish to do that latter, permission is required.


//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Aggregate BTC Candles
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Including Bitfinex and Binance due to their age and importance, however the later filters may often remove it if USDT fluctuations and exchange risk made it anomalous
[kraken_low,   kraken_high,   kraken_close,   kraken_open,   kraken_ohlc4]   = security("KRAKEN:XBTUSD",    timeframe.period, [low, high, close, open, ohlc4])
[coinbase_low, coinbase_high, coinbase_close, coinbase_open, coinbase_ohlc4] = security("COINBASE:BTCUSD",  timeframe.period, [low, high, close, open, ohlc4])
[bitfinex_low, bitfinex_high, bitfinex_close, bitfinex_open, bitfinex_ohlc4] = security("BITFINEX:BTCUSD",  timeframe.period, [low, high, close, open, ohlc4])
[binance_low,  binance_high,  binance_close,  binance_open,  binance_ohlc4]  = security("BINANCE:BTCUSDT",  timeframe.period, [low, high, close, open, ohlc4])
[gemini_low,   gemini_high,   gemini_close,   gemini_open,   gemini_ohlc4]   = security("GEMINI:BTCUSD",    timeframe.period, [low, high, close, open, ohlc4])
[ftx_low,      ftx_high,      ftx_close,      ftx_open,      ftx_ohlc4]      = security("FTX:BTCUSD",       timeframe.period, [low, high, close, open, ohlc4])
[deribit_low,  deribit_high,  deribit_close,  deribit_open,  deribit_ohlc4]  = security("DERIBIT:BTCPERP",  timeframe.period, [low, high, close, open, ohlc4])
[bitstamp_low, bitstamp_high, bitstamp_close, bitstamp_open, bitstamp_ohlc4] = security("BITSTAMP:BTCUSD",  timeframe.period, [low, high, close, open, ohlc4])
[mtgox_low,    mtgox_high,    mtgox_close,    mtgox_open,    mtgox_ohlc4]    = security("MTGOX:BTCUSD",     timeframe.period, [low, high, close, open, ohlc4])
[bitmex_low,   bitmex_high,   bitmex_close,   bitmex_open,   bitmex_ohlc4]   = security("BITMEX:XBTUSD",    timeframe.period, [low, high, close, open, ohlc4])

lows                        = array.new_float(0, 0)
highs                       = array.new_float(0, 0)
closes                      = array.new_float(0, 0)
opens                       = array.new_float(0, 0)
medianlows                  = array.new_float(0, 0)
medianhighs                 = array.new_float(0, 0)
mediancloses                = array.new_float(0, 0)
medianopens                 = array.new_float(0, 0)
reference_lows              = array.new_float(0, 0)
reference_highs             = array.new_float(0, 0)
reference_closes            = array.new_float(0, 0)
reference_opens             = array.new_float(0, 0)
float reference_ohlc4       = nz(bitstamp_ohlc4,0)

kraken_frozen    = kraken_ohlc4   == kraken_ohlc4[1]   and kraken_ohlc4[1]   == kraken_ohlc4[2]
coinbase_frozen  = coinbase_ohlc4 == coinbase_ohlc4[1] and coinbase_ohlc4[1] == coinbase_ohlc4[2]
bitfinex_frozen  = bitfinex_ohlc4 == bitfinex_ohlc4[1] and bitfinex_ohlc4[1] == bitfinex_ohlc4[2]
binance_frozen   = binance_ohlc4  == binance_ohlc4[1]  and binance_ohlc4[1]  == binance_ohlc4[2]
gemini_frozen    = gemini_ohlc4   == gemini_ohlc4[1]   and gemini_ohlc4[1]   == gemini_ohlc4[2]
ftx_frozen       = ftx_ohlc4      == ftx_ohlc4[1]      and ftx_ohlc4[1]      == ftx_ohlc4[2]
deribit_frozen   = deribit_ohlc4  == deribit_ohlc4[1]  and deribit_ohlc4[1]  == deribit_ohlc4[2]
bitstamp_frozen  = bitstamp_ohlc4 == bitstamp_ohlc4[1] and bitstamp_ohlc4[1] == bitstamp_ohlc4[2]
mtgox_frozen     = mtgox_ohlc4    == mtgox_ohlc4[1]    and mtgox_ohlc4[1]    == mtgox_ohlc4[2]
bitmex_frozen    = bitmex_ohlc4   == bitmex_ohlc4[1]   and bitmex_ohlc4[1]   == bitmex_ohlc4[2]

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Clean out frozen data, data out of time range and na/unavailable data in single calculation
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

_bitstamp_open  = na(bitstamp_open)  ? 0 : bitstamp_frozen or time < timestamp(2012,01,01,00,00) ? 0 : bitstamp_open
_bitstamp_high  = na(bitstamp_high)  ? 0 : bitstamp_frozen or time < timestamp(2012,01,01,00,00) ? 0 : bitstamp_high
_bitstamp_low   = na(bitstamp_low)   ? 0 : bitstamp_frozen or time < timestamp(2012,01,01,00,00) ? 0 : bitstamp_low
_bitstamp_close = na(bitstamp_close) ? 0 : bitstamp_frozen or time < timestamp(2012,01,01,00,00) ? 0 : bitstamp_close
_bitstamp_ohlc4 = (_bitstamp_open+_bitstamp_high+_bitstamp_low+_bitstamp_close)

_coinbase_open  = na(coinbase_open)  ? 0 : coinbase_frozen or time < timestamp(2015,02,01,00,00) ? 0 : coinbase_open
_coinbase_high  = na(coinbase_high)  ? 0 : coinbase_frozen or time < timestamp(2015,02,01,00,00) ? 0 : coinbase_high
_coinbase_low   = na(coinbase_low)   ? 0 : coinbase_frozen or time < timestamp(2015,02,01,00,00) ? 0 : coinbase_low
_coinbase_close = na(coinbase_close) ? 0 : coinbase_frozen or time < timestamp(2015,02,01,00,00) ? 0 : coinbase_close
_coinbase_ohlc4 = (_coinbase_open+_coinbase_high+_coinbase_low+_coinbase_close)

_kraken_open    = na(kraken_open)    ? 0 : kraken_frozen   ? 0 : kraken_open
_kraken_high    = na(kraken_high)    ? 0 : kraken_frozen   ? 0 : kraken_high
_kraken_low     = na(kraken_low)     ? 0 : kraken_frozen   ? 0 : kraken_low
_kraken_close   = na(kraken_close)   ? 0 : kraken_frozen   ? 0 : kraken_close
_kraken_ohlc4 = (_kraken_open+_kraken_high+_kraken_low+_kraken_close)

_mtgox_open     = na(mtgox_open)     ? 0 : mtgox_frozen or time > timestamp(2013,05,01,00,00)    ? 0 : mtgox_open
_mtgox_high     = na(mtgox_high)     ? 0 : mtgox_frozen or time > timestamp(2013,05,01,00,00)    ? 0 : mtgox_high
_mtgox_low      = na(mtgox_low)      ? 0 : mtgox_frozen or time > timestamp(2013,05,01,00,00)    ? 0 : mtgox_low
_mtgox_close    = na(mtgox_close)    ? 0 : mtgox_frozen or time > timestamp(2013,05,01,00,00)    ? 0 : mtgox_close
_mtgox_ohlc4 = (_mtgox_open+_mtgox_high+_mtgox_low+_mtgox_close)

_bitfinex_open  = na(bitfinex_open)  ? 0 : bitfinex_frozen or time < timestamp(2013,05,01,00,00) ? 0 : bitfinex_open
_bitfinex_high  = na(bitfinex_high)  ? 0 : bitfinex_frozen or time < timestamp(2013,05,01,00,00) ? 0 : bitfinex_high
_bitfinex_low   = na(bitfinex_low)   ? 0 : bitfinex_frozen or time < timestamp(2013,05,01,00,00) ? 0 : bitfinex_low
_bitfinex_close = na(bitfinex_close) ? 0 : bitfinex_frozen or time < timestamp(2013,05,01,00,00) ? 0 : bitfinex_close
_bitfinex_ohlc4 = (_bitfinex_open+_bitfinex_high+_bitfinex_low+_bitfinex_close)

_binance_open   = na(binance_open)   ? 0 : binance_frozen  ? 0 : binance_open
_binance_high   = na(binance_high)   ? 0 : binance_frozen  ? 0 : binance_high
_binance_low    = na(binance_low)    ? 0 : binance_frozen  ? 0 : binance_low
_binance_close  = na(binance_close)  ? 0 : binance_frozen  ? 0 : binance_close
_binance_ohlc4  = (_binance_open+_binance_high+_binance_low+_binance_close)

_gemini_open    = na(gemini_open)    ? 0 : gemini_frozen   ? 0 : gemini_open
_gemini_high    = na(gemini_high)    ? 0 : gemini_frozen   ? 0 : gemini_high
_gemini_low     = na(gemini_low)     ? 0 : gemini_frozen   ? 0 : gemini_low
_gemini_close   = na(gemini_close)   ? 0 : gemini_frozen   ? 0 : gemini_close
_gemini_ohlc4   = (_gemini_open+_gemini_high+_gemini_low+_gemini_close)

_ftx_open       = na(ftx_open)       ? 0 : ftx_frozen      ? 0 : ftx_open
_ftx_high       = na(ftx_high)       ? 0 : ftx_frozen      ? 0 : ftx_high
_ftx_low        = na(ftx_low)        ? 0 : ftx_frozen      ? 0 : ftx_low
_ftx_close      = na(ftx_close)      ? 0 : ftx_frozen      ? 0 : ftx_close
_ftx_ohlc4      = (_ftx_open+_ftx_high+_ftx_low+_ftx_close)

_deribit_open   = na(deribit_open)   ? 0 : deribit_frozen  ? 0 : deribit_open
_deribit_high   = na(deribit_high)   ? 0 : deribit_frozen  ? 0 : deribit_high
_deribit_low    = na(deribit_low)    ? 0 : deribit_frozen  ? 0 : deribit_low
_deribit_close  = na(deribit_close)  ? 0 : deribit_frozen  ? 0 : deribit_close
_deribit_ohlc4  = (_deribit_open+_deribit_high+_deribit_low+_deribit_close)

_bitmex_open    = na(bitmex_open)    ? 0 : bitmex_frozen   ? 0 : bitmex_open
_bitmex_high    = na(bitmex_high)    ? 0 : bitmex_frozen   ? 0 : bitmex_high
_bitmex_low     = na(bitmex_low)     ? 0 : bitmex_frozen   ? 0 : bitmex_low
_bitmex_close   = na(bitmex_close)   ? 0 : bitmex_frozen   ? 0 : bitmex_close
_bitmex_ohlc4 = (_bitmex_open+_bitmex_high+_bitmex_low+_bitmex_close)

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//If exchange was live and it's price didn't move more than 4%, or if it did then it was within 4% of one of the other exchanges, to rule out single exchange anomalies. Kraken is tighter as it's early data is all over the place.
//Early price data is messy, needs mtgox and bitfinex to keep 3 constituents as long as possible
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if _bitstamp_open > 0  and ((((abs(_bitstamp_open -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitstamp_open  -_coinbase_open)/ _bitstamp_open) < 0.04) or ((abs(_bitstamp_open    -_kraken_open)/ _bitstamp_open) < 0.04) or ((abs(_bitstamp_open     -_mtgox_open)/ _bitstamp_open) < 0.04) or ((abs(_bitstamp_open  -_bitfinex_open)/ _bitstamp_open) < 0.04)))) or ((abs(_bitstamp_open -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_opens, _bitstamp_open)
if _coinbase_open > 0  and ((((abs(_coinbase_open -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_coinbase_open  -_bitstamp_open)/ _coinbase_open) < 0.04) or ((abs(_coinbase_open    -_kraken_open)/ _coinbase_open) < 0.04) or ((abs(_coinbase_open  -_bitfinex_open)/ _coinbase_open) < 0.04)))) or ((abs(_coinbase_open -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_opens, _coinbase_open)
if _kraken_open > 0    and ((((abs(_kraken_open   -reference_ohlc4[1])/reference_ohlc4[1]) > 0.02) and ((((abs(_kraken_open    -_bitstamp_open)/   _kraken_open) < 0.01) or ((abs(_kraken_open    -_coinbase_open)/   _kraken_open) < 0.01) or ((abs(_kraken_open       -_mtgox_open)/   _kraken_open) < 0.01) or ((abs(_kraken_open    -_bitfinex_open)/   _kraken_open) < 0.01)))) or ((abs(_kraken_open   -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.02))
    array.push(reference_opens, _kraken_open)
if _mtgox_open > 0     and ((((abs(_mtgox_open    -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_mtgox_open     -_bitstamp_open)/    _mtgox_open) < 0.04) or ((abs(_mtgox_open     -_bitfinex_open)/    _mtgox_open) < 0.04) or ((abs(_mtgox_open       -_kraken_open)/    _mtgox_open) < 0.04)))) or ((abs(_mtgox_open    -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_opens, _mtgox_open)
if _bitfinex_open > 0  and ((((abs(_bitfinex_open -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitfinex_open  -_bitstamp_open)/ _bitfinex_open) < 0.04) or ((abs(_bitfinex_open    -_kraken_open)/ _bitfinex_open) < 0.04) or ((abs(_bitfinex_open  -_coinbase_open)/ _bitfinex_open) < 0.04) or ((abs(_bitfinex_open     -_mtgox_open)/ _bitfinex_open) < 0.04)))) or ((abs(_bitfinex_open -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_opens, _bitfinex_open)

if _bitstamp_high > 0  and ((((abs(_bitstamp_high -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitstamp_high  -_coinbase_high)/ _bitstamp_high) < 0.04) or ((abs(_bitstamp_high    -_kraken_high)/ _bitstamp_high) < 0.04) or ((abs(_bitstamp_high     -_mtgox_high)/ _bitstamp_high) < 0.04) or ((abs(_bitstamp_high  -_bitfinex_high)/ _bitstamp_high) < 0.04)))) or ((abs(_bitstamp_high -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_highs, _bitstamp_high)
if _coinbase_high > 0  and ((((abs(_coinbase_high -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_coinbase_high  -_bitstamp_high)/ _coinbase_high) < 0.04) or ((abs(_coinbase_high    -_kraken_high)/ _coinbase_high) < 0.04) or ((abs(_coinbase_high  -_bitfinex_high)/  _coinbase_low) < 0.04)))) or ((abs(_coinbase_high -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_highs, _coinbase_high)
if _kraken_high > 0    and ((((abs(_kraken_high   -reference_ohlc4[1])/reference_ohlc4[1]) > 0.02) and ((((abs(_kraken_high    -_bitstamp_high)/   _kraken_high) < 0.01) or ((abs(_kraken_high    -_coinbase_high)/   _kraken_high) < 0.01) or ((abs(_kraken_high       -_mtgox_high)/   _kraken_high) < 0.01) or ((abs(_kraken_high    -_bitfinex_high)/   _kraken_high) < 0.01)))) or ((abs(_kraken_high   -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.02))
    array.push(reference_highs, _kraken_high)
if _mtgox_high > 0     and ((((abs(_mtgox_high    -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_mtgox_high     -_bitstamp_high)/    _mtgox_high) < 0.04) or ((abs(_mtgox_high     -_bitfinex_high)/    _mtgox_high) < 0.04) or ((abs(_mtgox_high       -_kraken_high)/    _mtgox_high) < 0.04)))) or ((abs(_mtgox_high    -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_highs, _mtgox_high)
if _bitfinex_high > 0  and ((((abs(_bitfinex_high -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitfinex_high  -_bitstamp_high)/ _bitfinex_high) < 0.04) or ((abs(_bitfinex_high    -_kraken_high)/ _bitfinex_high) < 0.04) or ((abs(_bitfinex_high   -_coinbase_high)/ _bitfinex_high) < 0.04) or ((abs(_bitfinex_high     -_mtgox_high)/ _bitfinex_high) < 0.04)))) or ((abs(_bitfinex_high -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_highs, _bitfinex_high)

if _bitstamp_low > 0   and ((((abs(_bitstamp_low  -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitstamp_low    -_coinbase_low)/  _bitstamp_low) < 0.04) or ((abs(_bitstamp_low      -_kraken_low)/  _bitstamp_low) < 0.04) or ((abs(_bitstamp_low       -_mtgox_low)/  _bitstamp_low) < 0.04) or ((abs(_bitstamp_low    -_bitfinex_low)/  _bitstamp_low) < 0.04)))) or ((abs(_bitstamp_low  -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_lows, _bitstamp_low)
if _coinbase_low > 0   and ((((abs(_coinbase_low  -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_coinbase_low    -_bitstamp_low)/  _coinbase_low) < 0.04) or ((abs(_coinbase_low      -_kraken_low)/  _coinbase_low) < 0.04) or ((abs(_coinbase_low    -_bitfinex_low)/  _coinbase_low) < 0.04)))) or ((abs(_coinbase_low  -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_lows, _coinbase_low)
if _kraken_low > 0     and ((((abs(_kraken_low    -reference_ohlc4[1])/reference_ohlc4[1]) > 0.02) and ((((abs(_kraken_low      -_bitstamp_low)/    _kraken_low) < 0.01) or ((abs(_kraken_low      -_coinbase_low)/    _kraken_low) < 0.01) or ((abs(_kraken_low         -_mtgox_low)/    _kraken_low) < 0.01) or ((abs(_kraken_low      -_bitfinex_low)/    _kraken_low) < 0.01)))) or ((abs(_kraken_low    -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.01))
    array.push(reference_lows, _kraken_low)
if _mtgox_low > 0      and ((((abs(_mtgox_low     -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_mtgox_low       -_bitstamp_low)/     _mtgox_low) < 0.04) or ((abs(_mtgox_low       -_bitfinex_low)/     _mtgox_low) < 0.04) or ((abs(_mtgox_low         -_kraken_low)/     _mtgox_low) < 0.04)))) or ((abs(_mtgox_low     -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_lows, _mtgox_low)
if _bitfinex_low > 0   and ((((abs(_bitfinex_low  -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitfinex_low    -_bitstamp_low)/  _bitfinex_low) < 0.04) or ((abs(_bitfinex_low      -_kraken_low)/  _bitfinex_low) < 0.04) or ((abs(_bitfinex_low    -_coinbase_low)/  _bitfinex_low) < 0.04) or ((abs(_bitfinex_low       -_mtgox_low)/  _bitfinex_low) < 0.04)))) or ((abs(_bitfinex_low  -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_lows, _bitfinex_low)

if _bitstamp_close > 0 and ((((abs(_bitstamp_close-reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitstamp_close-_coinbase_close)/_bitstamp_close) < 0.04) or ((abs(_bitstamp_close  -_kraken_close)/_bitstamp_close) < 0.04) or ((abs(_bitstamp_close   -_mtgox_close)/_bitstamp_close) < 0.04) or ((abs(_bitstamp_close-_bitfinex_close)/_bitstamp_close) < 0.04)))) or ((abs(_bitstamp_close-reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_closes, _bitstamp_close)
if _coinbase_close > 0 and ((((abs(_coinbase_close-reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_coinbase_close-_bitstamp_close)/_coinbase_close) < 0.04) or ((abs(_coinbase_close   -_kraken_close)/_coinbase_close) < 0.04) or ((abs(_coinbase_close-_bitfinex_close)/_coinbase_close) < 0.04)))) or ((abs(_coinbase_close-reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_closes, _coinbase_close)
if _kraken_close > 0   and ((((abs(_kraken_close  -reference_ohlc4[1])/reference_ohlc4[1]) > 0.02) and ((((abs(_kraken_close  -_bitstamp_close)/  _kraken_close) < 0.01) or ((abs(_kraken_close-  _coinbase_close)/  _kraken_close) < 0.01) or ((abs(_kraken_close     -_mtgox_close)/  _kraken_close) < 0.01) or ((abs(_kraken_close  -_bitfinex_close)/  _kraken_close) < 0.01)))) or ((abs(_kraken_close  -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.01))
    array.push(reference_closes, _kraken_close)
if _mtgox_close > 0    and ((((abs(_mtgox_close   -reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_mtgox_close   -_bitstamp_close)/   _mtgox_close) < 0.04) or ((abs(_mtgox_close   -_bitfinex_close)/   _mtgox_close) < 0.04) or ((abs(_mtgox_close     -_kraken_close)/   _mtgox_close) < 0.04)))) or ((abs(_mtgox_close   -reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_closes, _mtgox_close)
if _bitfinex_close > 0 and ((((abs(_bitfinex_close-reference_ohlc4[1])/reference_ohlc4[1]) > 0.04) and ((((abs(_bitfinex_close-_bitstamp_close)/_bitfinex_close) < 0.04) or ((abs(_bitfinex_close  -_kraken_close)/_bitfinex_close) < 0.04) or ((abs(_bitfinex_close-_coinbase_close)/_bitfinex_close) < 0.04) or ((abs(_bitfinex_close   -_mtgox_close)/_bitfinex_close) < 0.04)))) or ((abs(_bitfinex_close-reference_ohlc4[1])/reference_ohlc4[1]) <= 0.04))
    array.push(reference_closes, _bitfinex_close)

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Reference is equal weighted average of Bitstamp, Coinbase, and Kraken, but if on occasion they're all far apart in price then a default price of the closest to previous bitstamp close is used.
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

reference_open  = array.size(reference_opens ) != 0 ? array.avg(reference_opens)  :
 min(_bitstamp_open>0?_bitstamp_open-_bitstamp_close[1]:100000000, _coinbase_open>0?_coinbase_open-_bitstamp_close[1]:100000000, _kraken_open>0?_kraken_open-_bitstamp_close[1]:100000000, _mtgox_open>0?_mtgox_open-_bitstamp_close[1]:100000000, _bitfinex_open>0?_bitfinex_open-_bitstamp_close[1]:100000000)
 <
 min(_bitstamp_open>0?_bitstamp_close[1]-_bitstamp_open:100000000, _coinbase_open>0?_bitstamp_close[1]-_coinbase_open:100000000, _kraken_open>0?_bitstamp_close[1]-_kraken_open:100000000, _mtgox_open>0?_bitstamp_close[1]-_mtgox_open:100000000, _bitfinex_open>0?_bitstamp_close[1]-_bitfinex_open:100000000)
 ?
  _bitstamp_close[1]+min(_bitstamp_open>0?_bitstamp_open-_bitstamp_close[1]:100000000, _coinbase_open>0?_coinbase_open-_bitstamp_close[1]:100000000, _kraken_open>0?_kraken_open-_bitstamp_close[1]:100000000, _mtgox_open>0?_mtgox_open-_bitstamp_close[1]:100000000, _bitfinex_open>0?_bitfinex_open-_bitstamp_close[1]:100000000)
 :
  _bitstamp_close[1]-min(_bitstamp_open>0?_bitstamp_close[1]-_bitstamp_open:100000000, _coinbase_open>0?_bitstamp_close[1]-_coinbase_open:100000000, _kraken_open>0?_bitstamp_close[1]-_kraken_open:100000000, _mtgox_open>0?_bitstamp_close[1]-_mtgox_open:100000000, _bitfinex_open>0?_bitstamp_close[1]-_bitfinex_open:100000000)

reference_high  = array.size(reference_highs ) != 0 ? array.avg(reference_highs)  :
 reference_open+min(_bitstamp_high>0?_bitstamp_high-reference_open:100000000, _coinbase_high>0?_coinbase_high-reference_open:100000000, _kraken_high>0?_kraken_high-reference_open:100000000, _mtgox_high>0?_mtgox_high-reference_open:100000000, _bitfinex_high>0?_bitfinex_high-reference_open:100000000)

reference_low   = array.size(reference_lows  ) != 0 ? array.avg(reference_lows)   :
 reference_open-min(_bitstamp_low>0?reference_open-_bitstamp_low:100000000, _coinbase_low>0?reference_open-_coinbase_low:100000000, _kraken_low>0?reference_open-_kraken_low:100000000, _mtgox_low>0?reference_open-_mtgox_low:100000000, _bitfinex_low>0?reference_open-_bitfinex_low:100000000)

reference_close = array.size(reference_closes) != 0 ? array.avg(reference_closes) :
 min(_bitstamp_close>0?_bitstamp_close-_bitstamp_close[1]:100000000, _coinbase_close>0?_coinbase_close-_bitstamp_close[1]:100000000, _kraken_close>0?_kraken_close-_bitstamp_close[1]:100000000, _mtgox_close>0?_mtgox_close-_bitstamp_close[1]:100000000, _bitfinex_close>0?_bitfinex_close-_bitstamp_close[1]:100000000)
 <
 min(_bitstamp_close>0?_bitstamp_close[1]-_bitstamp_close:100000000, _coinbase_close>0?_bitstamp_close[1]-_coinbase_close:100000000, _kraken_close>0?_bitstamp_close[1]-_kraken_close:100000000, _mtgox_close>0?_bitstamp_close[1]-_mtgox_close:100000000, _bitfinex_close>0?_bitstamp_close[1]-_bitfinex_close:100000000)
 ?
  _bitstamp_close[1]+min(_bitstamp_close>0?_bitstamp_close-_bitstamp_close[1]:100000000, _coinbase_close>0?_coinbase_close-_bitstamp_close[1]:100000000, _kraken_close>0?_kraken_close-_bitstamp_close[1]:100000000, _mtgox_close>0?_mtgox_close-_bitstamp_close[1]:100000000, _bitfinex_close>0?_bitfinex_close-_bitstamp_close[1]:100000000)
 :
  _bitstamp_close[1]-min(_bitstamp_close>0?_bitstamp_close[1]-_bitstamp_close:100000000, _coinbase_close>0?_bitstamp_close[1]-_coinbase_close:100000000, _kraken_close>0?_bitstamp_close[1]-_kraken_close:100000000, _mtgox_close>0?_bitstamp_close[1]-_mtgox_close:100000000, _bitfinex_close>0?_bitstamp_close[1]-_bitfinex_close:100000000)

reference_ohlc4 := (reference_low + reference_high + reference_close + reference_open) / 4

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Valid if within 1% of reference on average over last 3 candles, to remove potential differences due to nation/usdt/exchange risk
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

kraken_valid    = sma((_kraken_ohlc4     - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _kraken_ohlc4 > 0
coinbase_valid  = sma((_coinbase_ohlc4   - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _coinbase_ohlc4 > 0
bitfinex_valid  = sma((_bitfinex_ohlc4   - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _bitfinex_ohlc4 > 0
binance_valid   = sma((_binance_ohlc4    - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _binance_ohlc4 > 0
gemini_valid    = sma((_gemini_ohlc4     - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _gemini_ohlc4 > 0
ftx_valid       = sma((_ftx_ohlc4        - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _ftx_ohlc4 > 0
deribit_valid   = sma((_deribit_ohlc4    - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _deribit_ohlc4 > 0
bitstamp_valid  = sma((_bitstamp_ohlc4   - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _bitstamp_ohlc4 > 0
mtgox_valid     = sma((_mtgox_ohlc4      - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _mtgox_ohlc4 > 0
bitmex_valid    = sma((_bitmex_ohlc4     - reference_ohlc4) / reference_ohlc4,3) < 0.01 and _bitmex_ohlc4 > 0

//Create array of lows
if _kraken_low > 0 and kraken_valid
    array.push(lows, _kraken_low)
if _coinbase_low > 0 and coinbase_valid
    array.push(lows, _coinbase_low)
if _bitfinex_low > 0 and bitfinex_valid
    array.push(lows, _bitfinex_low)
if _binance_low > 0 and binance_valid
    array.push(lows, _binance_low)
if _gemini_low > 0 and gemini_valid
    array.push(lows, _gemini_low)
if _ftx_low > 0 and ftx_valid
    array.push(lows, _ftx_low)
if _deribit_low > 0 and deribit_valid
    array.push(lows, _deribit_low)
if _bitstamp_low > 0 and bitstamp_valid
    array.push(lows, _bitstamp_low)
if _mtgox_low > 0 and mtgox_valid
    array.push(lows, _mtgox_low)
if _bitmex_low > 0 and bitmex_valid
    array.push(lows, _bitmex_low)

medianlow = array.median(lows)

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of lows within 5% of median low
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_low) and abs(kraken_low-medianlow)/medianlow < 0.03 and kraken_valid
    array.push(medianlows, kraken_low)
if not na(coinbase_low) and abs(coinbase_low-medianlow)/medianlow < 0.03 and coinbase_valid
    array.push(medianlows, coinbase_low)
if not na(bitfinex_low) and abs(bitfinex_low-medianlow)/medianlow < 0.03 and bitfinex_valid
    array.push(medianlows, bitfinex_low)
if not na(binance_low) and abs(binance_low-medianlow)/medianlow < 0.03 and binance_valid
    array.push(medianlows, bitfinex_low)
if not na(gemini_low) and abs(gemini_low-medianlow)/medianlow < 0.03 and gemini_valid
    array.push(medianlows, gemini_low)
if not na(ftx_low) and abs(ftx_low-medianlow)/medianlow < 0.03 and ftx_valid
    array.push(medianlows, ftx_low)
if not na(deribit_low) and abs(deribit_low-medianlow)/medianlow < 0.03 and deribit_valid
    array.push(medianlows, deribit_low)
if not na(bitstamp_low) and abs(bitstamp_low-medianlow)/medianlow < 0.03 and bitstamp_valid
    array.push(medianlows, bitstamp_low)
if not na(mtgox_low) and abs(mtgox_low-medianlow)/medianlow < 0.03 and mtgox_valid
    array.push(medianlows, mtgox_low)
if not na(bitmex_low) and abs(bitmex_low-medianlow)/medianlow < 0.03 and bitmex_valid
    array.push(medianlows, bitmex_low)

filteredlow = array.size(medianlows) != 0 ? array.avg(medianlows) : reference_low

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of highs
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_high) and kraken_valid
    array.push(highs, kraken_high)
if not na(coinbase_high) and coinbase_valid
    array.push(highs, coinbase_high)
if not na(bitfinex_high) and bitfinex_valid
    array.push(highs, bitfinex_high)
if not na(binance_high) and binance_valid
    array.push(highs, binance_high)
if not na(gemini_high) and gemini_valid
    array.push(highs, gemini_high)
if not na(ftx_high) and ftx_valid
    array.push(highs, ftx_high)
if not na(deribit_high) and deribit_valid
    array.push(highs, deribit_high)
if not na(bitstamp_high) and bitstamp_valid
    array.push(highs, bitstamp_high)
if not na(mtgox_high) and mtgox_valid
    array.push(highs, mtgox_high)
if not na(bitmex_high) and bitmex_valid
    array.push(highs, bitmex_high)

medianhigh = array.median(highs)

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of highs within 5% of median
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_high) and abs(kraken_high-medianhigh)/medianhigh < 0.03 and kraken_valid
    array.push(medianhighs, kraken_high)
if not na(coinbase_high) and abs(coinbase_high-medianhigh)/medianhigh < 0.03 and coinbase_valid
    array.push(medianhighs, coinbase_high)
if not na(bitfinex_high) and abs(bitfinex_high-medianhigh)/medianhigh < 0.03 and bitfinex_valid
    array.push(medianhighs, bitfinex_high)
if not na(binance_high) and abs(binance_high-medianhigh)/medianhigh < 0.03 and binance_valid
    array.push(medianhighs, binance_high)
if not na(gemini_high) and abs(gemini_high-medianhigh)/medianhigh < 0.03 and gemini_valid
    array.push(medianhighs, gemini_high)
if not na(ftx_high) and abs(ftx_high-medianhigh)/medianhigh < 0.03 and ftx_valid
    array.push(medianhighs, ftx_high)
if not na(deribit_high) and abs(deribit_high-medianhigh)/medianhigh < 0.03 and deribit_valid
    array.push(medianhighs, deribit_high)
if not na(bitstamp_high) and abs(bitstamp_high-medianhigh)/medianhigh < 0.03 and bitstamp_valid
    array.push(medianhighs, bitstamp_high)
if not na(mtgox_high) and abs(mtgox_high-medianhigh)/medianhigh < 0.03 and mtgox_valid
    array.push(medianhighs, mtgox_high)
if not na(bitmex_high) and abs(bitmex_high-medianhigh)/medianhigh < 0.03 and bitmex_valid
    array.push(medianhighs, bitmex_high)

filteredhigh = array.size(medianhighs) != 0 ? array.avg(medianhighs) : reference_high

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of closes
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_close) and kraken_valid
    array.push(closes, kraken_close)
if not na(coinbase_close) and coinbase_valid
    array.push(closes, coinbase_close)
if not na(bitfinex_close) and bitfinex_valid
    array.push(closes, bitfinex_close)
if not na(binance_close) and binance_valid
    array.push(closes, binance_close)
if not na(gemini_close) and gemini_valid
    array.push(closes, gemini_close)
if not na(ftx_close) and ftx_valid
    array.push(closes, ftx_close)
if not na(deribit_close) and deribit_valid
    array.push(closes, deribit_close)
if not na(bitstamp_close) and bitstamp_valid
    array.push(closes, bitstamp_close)
if not na(mtgox_close) and mtgox_valid
    array.push(closes, mtgox_close)
if not na(bitmex_close) and bitmex_valid
    array.push(closes, bitmex_close)

medianclose = array.median(closes)

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of closes within 5% of median
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_close) and abs(kraken_close-medianclose)/medianclose < 0.03 and kraken_valid
    array.push(mediancloses, kraken_close)
if not na(coinbase_close) and abs(coinbase_close-medianclose)/medianclose < 0.03 and coinbase_valid
    array.push(mediancloses, coinbase_close)
if not na(bitfinex_close) and abs(bitfinex_close-medianclose)/medianclose < 0.03 and bitfinex_valid
    array.push(mediancloses, bitfinex_close)
if not na(binance_close) and abs(binance_close-medianclose)/medianclose < 0.03 and binance_valid
    array.push(mediancloses, binance_close)
if not na(gemini_close) and abs(gemini_close-medianclose)/medianclose < 0.03 and gemini_valid
    array.push(mediancloses, gemini_close)
if not na(ftx_close) and abs(ftx_close-medianclose)/medianclose < 0.03 and ftx_valid
    array.push(mediancloses, ftx_close)
if not na(deribit_close) and abs(deribit_close-medianclose)/medianclose < 0.03 and deribit_valid
    array.push(mediancloses, deribit_close)
if not na(bitstamp_close) and abs(bitstamp_close-medianclose)/medianclose < 0.03 and bitstamp_valid
    array.push(mediancloses, bitstamp_close)
if not na(mtgox_close) and abs(mtgox_close-medianclose)/medianclose < 0.03 and mtgox_valid
    array.push(mediancloses, mtgox_close)
if not na(bitmex_close) and abs(bitmex_close-medianclose)/medianclose < 0.03 and bitmex_valid
    array.push(mediancloses, bitmex_close)

filteredclose = array.size(mediancloses) != 0 ? array.avg(mediancloses) : reference_close

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of opens
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_open) and kraken_valid
    array.push(opens, kraken_open)
if not na(coinbase_open) and coinbase_valid
    array.push(opens, coinbase_open)
if not na(bitfinex_open) and bitfinex_valid
    array.push(opens, bitfinex_open)
if not na(binance_open) and binance_valid
    array.push(opens, binance_open)
if not na(gemini_open) and gemini_valid
    array.push(opens, gemini_open)
if not na(ftx_open) and ftx_valid
    array.push(opens, ftx_open)
if not na(deribit_open) and deribit_valid
    array.push(opens, deribit_open)
if not na(bitstamp_open) and bitstamp_valid
    array.push(opens, bitstamp_open)
if not na(mtgox_open) and mtgox_valid
    array.push(opens, mtgox_open)
if not na(bitmex_open) and bitmex_valid
    array.push(opens, bitmex_open)

medianopen = array.median(opens)

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create array of opens within 5% of median
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

if not na(kraken_open) and abs(kraken_open-medianopen)/medianopen < 0.03 and kraken_valid
    array.push(medianopens, kraken_open)
if not na(coinbase_open) and abs(coinbase_open-medianopen)/medianopen < 0.03 and coinbase_valid
    array.push(medianopens, coinbase_open)
if not na(bitfinex_open) and abs(bitfinex_open-medianopen)/medianopen < 0.03 and bitfinex_valid
    array.push(medianopens, bitfinex_open)
if not na(binance_open) and abs(binance_open-medianopen)/medianopen < 0.03 and binance_valid
    array.push(medianopens, binance_open)
if not na(gemini_open) and abs(gemini_open-medianopen)/medianopen < 0.03 and gemini_valid
    array.push(medianopens, gemini_open)
if not na(ftx_open) and abs(ftx_open-medianopen)/medianopen < 0.03 and ftx_valid
    array.push(medianopens, ftx_open)
if not na(deribit_open) and abs(deribit_open-medianopen)/medianopen < 0.03 and deribit_valid
    array.push(medianopens, deribit_open)
if not na(bitstamp_open) and abs(bitstamp_open-medianopen)/medianopen < 0.03 and bitstamp_valid
    array.push(medianopens, bitstamp_open)
if not na(mtgox_open) and abs(mtgox_open-medianopen)/medianopen < 0.03 and mtgox_valid
    array.push(medianopens, mtgox_open)
if not na(bitmex_open) and abs(bitmex_open-medianopen)/medianopen < 0.03 and bitmex_valid
    array.push(medianopens, bitmex_open)

filteredopen = array.size(medianopens) != 0 ? array.avg(medianopens) : reference_open

plotcandle(filteredopen, filteredhigh, filteredlow, filteredclose, title="Aggregate BTC Candles", color=filteredclose>filteredopen ? color.green : color.red)
// plotcandle(reference_open, reference_high, reference_low, reference_close, title="Aggregate BTC Candles", color=reference_close>reference_open ? color.green : color.red)