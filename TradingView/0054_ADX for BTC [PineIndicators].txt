//@version=5
strategy("ADX for BTC [PineIndicators]", format=format.price, precision=2, commission_value = 0.05, default_qty_type = strategy.percent_of_equity, default_qty_value = 100, overlay = true, slippage= 2, max_labels_count = 500, max_lines_count = 500, max_boxes_count = 500)

//TP/SL Levels
tp = input.float(14, "Entry Level")
sl = input.float(45, "Exit Level")

//SMA
smafilter = input.bool(true, "SMA Filter")
sma = input(200, "SMA Length")

//ADX
adxlen = 14
dilen = 14
dirmov(len) =>
    up = ta.change(high)
    down = -ta.change(low)
    plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
    minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
    truerange = ta.rma(ta.tr, len)
    plus = fixnan(100 * ta.rma(plusDM, len) / truerange)
    minus = fixnan(100 * ta.rma(minusDM, len) / truerange)
    [plus, minus]
adx(dilen, adxlen) =>
    [plus, minus] = dirmov(dilen)
    sum = plus + minus
    adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
sig = adx(dilen, adxlen)

// Entry Exits
if smafilter == true
    if ta.crossover(sig, tp) and ta.sma(close, sma) > ta.sma(close, sma * 5)
        strategy.entry("L", strategy.long)

else if ta.crossover(sig, tp)
    strategy.entry("L", strategy.long)

if ta.crossunder(sig, sl)
    strategy.close("L")

//Plots
green   = color.new(#0097a7, 0)
red     = color.new(#ff195f, 0)
green90 = color.new(#0097a7, 90)
red90   = color.new(#ff195f, 90)

if strategy.position_size > strategy.position_size[1]
    label.new(bar_index, low * 0.99, text="▲", textcolor=green, size=size.normal, textalign=text.align_center, color=green90, style=label.style_text_outline)
    label.new(bar_index, low * 0.99, text="Buy", textcolor=green, size=size.tiny, textalign=text.align_center, color=green90, style=label.style_label_up)

if strategy.position_size < strategy.position_size[1]
    label.new(bar_index, high * 1.01, text="▼", textcolor=red, size=size.normal, textalign=text.align_center, color=red90, style=label.style_text_outline)
    label.new(bar_index, high * 1.01, text="Close", textcolor=red, size=size.tiny, textalign=text.align_center, color=red90, style=label.style_label_down)

// --- Speichere Trade-Daten ---
var float tradeEntryPrice = na
var int   tradeEntryBar   = na

// Beim Einstieg (von keiner Position zu Long): Entry-Daten erfassen
if strategy.position_size > 0 and strategy.position_size[1] == 0
    tradeEntryPrice := close
    tradeEntryBar   := bar_index

// Beim Trade-Schluss: Box mit Fill und horizontale Linien zeichnen
if strategy.position_size == 0 and strategy.position_size[1] > 0
    exitPrice = close
    exitBar   = bar_index
    // Farbe: Gewinn → grün, Verlust → rot
    tradeColor = (exitPrice - tradeEntryPrice > 0) ? green : red
    // Bestimme obere und untere Preisgrenze (unabhängig von Trade-Richtung)
    topPrice    = math.max(tradeEntryPrice, exitPrice)
    bottomPrice = math.min(tradeEntryPrice, exitPrice)
    // Zeichne eine Box ohne sichtbare Ränder (nur Füllung)
    box.new(tradeEntryBar, topPrice, exitBar, bottomPrice, border_width=0, bgcolor=color.new(tradeColor, 85))
    // Zeichne horizontale Linien (nur oben und unten)
    line.new(tradeEntryBar, topPrice, exitBar, topPrice, color=tradeColor, width=1)
    line.new(tradeEntryBar, bottomPrice, exitBar, bottomPrice, color=tradeColor, width=1)