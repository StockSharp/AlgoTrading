//@version=6
strategy("Daily Bollinger Band Strategy", overlay = true)

// period
startDate = input.time(timestamp("2000-01-04 00:00"), "start date", group = "period")
stopDate = input.time(timestamp("9999-12-30 00:00"), "stop date", group = "period")
withinPeriod = (time >= startDate) and (time <= stopDate)
// Bollinger Bands
// parameter
bbLength = input.int(20, "bollinger bands period", minval = 1, group = "bollinger bands")
multiply = input.float(1.0, "bollinger bands multiply", minval = 0.1, group = "bollinger bands")
bbColor = input.color(color.blue, "bollinger bands color", group = "bollinger bands")
// calcuration
[middle, upper, lower] = ta.bb(close, bbLength, multiply)
bbSlope = ta.change(middle, 1)
// plot
p1 = plot(upper, "upper band", bbColor)
plot(middle, "middle band", bbColor)
p2 = plot(lower, "lower band", bbColor)
fill(p1, p2, color.new(bbColor, 90))
plot(bbSlope, "middle band slope", display = display.data_window)

// trend filter
// parameter
tfLength = input.int(200, "Trend Filter(long ma) Period", minval = 1, group = "trend filter")
showTrend = input.bool(false, "show trend", group = "trend filter")
// calcuration
ma = ta.sma(close, tfLength)
tfSlope = ta.change(ma, 1)
// plot
plot(ma, "long ma", color.orange)
bgcolor(color = showTrend and tfSlope > 0 ? color.new(color.red, 80) : na)
bgcolor(color = showTrend and tfSlope < 0 ? color.new(color.blue, 80) : na)
plot(tfSlope, "long ma slope", display = display.data_window)

// signal
// parameter
showSignal = input.bool(false, "show signal", group = "entry and exit signal")
// entry
longCondition = withinPeriod and (strategy.position_size == 0) and ta.crossover(close, upper) and bbSlope > 0 and tfSlope > 0
shortCondition = withinPeriod and (strategy.position_size == 0) and ta.crossunder(close, lower) and bbSlope < 0 and tfSlope < 0

// close
longClose = withinPeriod and (strategy.position_size > 0) and ta.crossunder(close, middle)
shortClose = withinPeriod and (strategy.position_size < 0) and ta.crossover(close, middle)
// plot
plotshape(showSignal and longCondition, "longCondition", style = shape.circle, location = location.abovebar,
  color = color.red, size = size.tiny)
plotshape(showSignal and shortCondition, "shortCondition", style = shape.circle, location = location.belowbar,
  color = color.blue, size = size.tiny)
plotshape(showSignal and longClose ? middle : na, "longClose", style = shape.xcross,
  color = color.red, size = size.tiny)
plotshape(showSignal and shortClose ? middle : na, "shortClose", style = shape.xcross,
  color = color.blue, size = size.tiny)

// position size
// parameters
atrLength = input.int(20, "atr length", minval = 1, group = "position size")
rate = input.float(1.0, "risk rate(%)", minval = 0.5, group = "position size")
unit = input.int(100, "unit", minval = 1, group = "position size")
// calcuration
atr = ta.sma(ta.tr, atrLength)
s = (strategy.initial_capital * rate / 100) / (2 * atr)
size = math.floor(s / unit) * unit
// plot
plot (atr, "atr", display = display.data_window)
plot (size, "position size", display = display.data_window)

// order
if longCondition
    strategy.entry("long", strategy.long, qty = size)
if shortCondition
    strategy.entry("short", strategy.short, qty = size)
if longClose
    strategy.close("long")
if shortClose
    strategy.close("short")