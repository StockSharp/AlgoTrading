// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © tradedots

//@version=5
strategy("Stochastic Z-Score Oscillator Strategy [TradeDots]", shorttitle="TradeDots Stochastic Z-Score", overlay = false, max_lines_count = 500, max_boxes_count = 100, initial_capital = 10000, currency = currency.USD, commission_type = strategy.commission.percent, commission_value = 0.01, default_qty_type = strategy.percent_of_equity, default_qty_value = 30, pyramiding = 1)

// var and input
input_enable_backtest = input.bool(defval = true, title = "Enable Backtest")
input_rolling_window = input.int(defval = 80, title = "Rolling Window", minval = 1, step = 1)
input_z_thresh = input.float(defval = 2.8, title = "Z-Score Thershhold")
input_cool_down = input.int(defval = 5, title = "Signal Cool Down Period", minval = 1, step = 1)
input_stoch_length = input.int(defval = 14, title = "Stochastic Length")
input_stoch_smoothen = input.int(defval = 7, title = "Stochastic Smoothen")

var int buy_cool_down_counter = input_cool_down
var int sell_cool_down_counter = input_cool_down

// indicator results
stoch = ta.sma(ta.stoch(close, high, low, input_stoch_length),input_stoch_smoothen) / 100 * 8 - 4 //rescale to k-score
rolling_stdev = ta.stdev(close, input_rolling_window, false)
rolling_mean = ta.sma(close, input_rolling_window)
z_score = (close - rolling_mean) / rolling_stdev

// plot & styling
z_line_opacity = z_score > 0 and z_score > z_score[1] or z_score < 0 and z_score < z_score[1] ? 20 : 60
stoch_line_opacity = stoch > 0 and stoch > stoch[1] or stoch < 0 and stoch < stoch[1] ? 20 : 40
plot(stoch, "Stochastic Line", stoch > 0 ? color.new(#5BC0BE, stoch_line_opacity) : color.new(#304C89, stoch_line_opacity), linewidth = 2)
plot(z_score, "Z-Score Line", z_score > 0 ? color.new(#9cff87, z_line_opacity) : color.new(#f9396a, z_line_opacity), linewidth = 2)
plot(input_z_thresh, "Sell Threshold", color = color.from_gradient((z_score + stoch)/2, 0, input_z_thresh, color.new(color.gray, 70), color.new(#f9396a, 0)), linewidth = 2)
plot(-input_z_thresh, "Buy Threshold", color = color.from_gradient((z_score + stoch)/2, -input_z_thresh, 0, color.new(#9cff87, 0), color.new(color.gray, 70)), linewidth = 2)
hline(0, title = "0 Level")

//strategy conditions (short)
if(z_score + stoch)/2 > input_z_thresh
    if sell_cool_down_counter >= input_cool_down
        label.new(bar_index, z_score, text = "Sell", style = label.style_label_down, color = #f9396a, textcolor = #ffffff)
        if input_enable_backtest == true
            //strategy.close("Buy", qty_percent = 100, comment = "Close all buy orders")
            strategy.entry("Sell", strategy.short, comment = "Open Short Position")

        sell_cool_down_counter := 0
        buy_cool_down_counter := input_cool_down

    else
        sell_cool_down_counter := sell_cool_down_counter + 1

if z_score > 0
    strategy.close("Buy", qty_percent = 100, comment = "Close all buy orders")

//strategy conditions (long)
else if (z_score + stoch)/2 < -input_z_thresh
    if buy_cool_down_counter >= input_cool_down
        label.new(bar_index, z_score, text = "Buy", style = label.style_label_up, color = #9cff87)
        if input_enable_backtest == true
            //strategy.close("Sell", qty_percent = 100, comment = "Close all sell orders")
            strategy.entry("Buy", strategy.long, comment = "Open Long Position")
        sell_cool_down_counter := input_cool_down
        buy_cool_down_counter := 0
    else
        buy_cool_down_counter := buy_cool_down_counter + 1

if z_score < 0
    strategy.close("Sell", qty_percent = 100, comment = "Close all sell orders")