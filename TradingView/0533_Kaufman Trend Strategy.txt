// This work is licensed under a Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) https://creativecommons.org/licenses/by-nc-sa/4.0/

//@version=6
strategy('Kaufman Trend Strategy', overlay = true, default_qty_type = strategy.percent_of_equity, default_qty_value = 100)

// === User Inputs ===
takeProfit1Percent = input.int(50, '1st TP %')
takeProfit2Percent = input.int(25, '2nd TP %')
takeProfit3Percent = input.int(25, 'Final TP %')
swingLookback = input.int(10, 'Swing High/Low Lookback')
atrPeriod = input.int(14, 'ATR Period')
trendStrengthEntry = input.int(60, 'Trend Strength Entry Threshold')
trendStrengthExit = input.int(40, 'Trend Strength Exit Threshold')

// === Simplified Kalman Trend Strength Oscillator ===
src = close
process_noise_1 = 0.01
process_noise_2 = 0.01
measurement_noise = 500.0
R2 = 10
N2 = 10

var float filtered_src = na
var float trend_strength = na
var float oscillator = na

var P = matrix.new<float>(2, 2, 0.0)
matrix.set(P, 0, 0, 1.0)
matrix.set(P, 1, 1, 1.0)

var Q = matrix.new<float>(2, 2, 0.0)
matrix.set(Q, 0, 0, process_noise_1)
matrix.set(Q, 1, 1, process_noise_2)

var R = matrix.new<float>(1, 1, measurement_noise)
var H = matrix.new<float>(1, 2, 0.0)
matrix.set(H, 0, 0, 1.0)

var I = matrix.new<float>(2, 2, 0.0)
matrix.set(I, 0, 0, 1.0)
matrix.set(I, 1, 1, 1.0)

var F = matrix.new<float>(2, 2, 0.0)
matrix.set(F, 0, 0, 1.0)
matrix.set(F, 0, 1, 1.0)
matrix.set(F, 1, 0, 0.0)
matrix.set(F, 1, 1, 1.0)

var X = array.from(src, 0.0)
if barstate.isconfirmed
    x1 = matrix.get(F, 0, 0) * array.get(X, 0) + matrix.get(F, 0, 1) * array.get(X, 1)
    x2 = matrix.get(F, 1, 1) * array.get(X, 1)
    X := array.from(x1, x2)
    P := F.mult(P.mult(F.transpose())).sum(Q)
    S = H.mult(P.mult(H.transpose())).sum(R)
    K = P.mult(H.transpose().mult(S.inv()))
    innovation = src - array.get(H.mult(X), 0)
    diff = K.mult(innovation)
    X := array.from(array.get(X, 0) + matrix.get(diff, 0, 0), array.get(X, 1) + matrix.get(diff, 1, 0))
    P := I.sum(K.mult(H).mult(-1)).mult(P)
    estimate = array.get(X, 0)
    oscillator := array.get(X, 1)
    filtered_src := estimate
    filtered_src

var array<float> osc_buffer = array.new<float>()
array.push(osc_buffer, oscillator)
if array.size(osc_buffer) > N2
    array.shift(osc_buffer)

A = 0.0
for i = 0 to array.size(osc_buffer) - 1 by 1
    absVal = math.abs(array.get(osc_buffer, i))
    if absVal > A
        A := absVal
        A

trend_raw = A > 0 ? oscillator / A * 100 : na
trend_strength := ta.wma(trend_raw, R2)

// === MA Color Definition ===
osc_color = trend_strength > 0 ? color.lime : color.red
osc_color := math.abs(trend_strength) < 10 ? color.blue : osc_color

// === Logic Conditions ===
maGreen = osc_color == color.lime
maRed = osc_color == color.red
maBlue = osc_color == color.blue

priceAboveMA = close > filtered_src
priceBelowMA = close < filtered_src

trendStrongLong = trend_strength >= trendStrengthEntry
trendStrongShort = trend_strength <= -trendStrengthEntry
trendWeakLong = trend_strength < trendStrengthExit
trendWeakShort = trend_strength > -trendStrengthExit

oscCrossDown = ta.crossover(0, trend_strength)
oscCrossUp = ta.crossunder(0, trend_strength)

atr = ta.atr(atrPeriod)
swingLow = ta.lowest(low, swingLookback)
swingHigh = ta.highest(high, swingLookback)
longStop = swingLow - atr
shortStop = swingHigh + atr

// === Long Trade Flags ===
var bool inLong = false
var bool long_tp1Hit = false
var bool long_tp2Hit = false

// === Short Trade Flags ===
var bool inShort = false
var bool short_tp1Hit = false
var bool short_tp2Hit = false

// === Long Entry ===
if not inLong and trendStrongLong and maGreen and priceAboveMA
    strategy.entry('Long', strategy.long)
    inLong := true
    long_tp1Hit := false
    long_tp2Hit := false
    long_tp2Hit

// === Short Entry ===
if not inShort and trendStrongShort and maRed and priceBelowMA
    strategy.entry('Short', strategy.short)
    inShort := true
    short_tp1Hit := false
    short_tp2Hit := false
    short_tp2Hit

// === Long Stop Loss ===
if inLong
    strategy.exit('Long SL', from_entry = 'Long', stop = longStop)

// === Short Stop Loss ===
if inShort
    strategy.exit('Short SL', from_entry = 'Short', stop = shortStop)

// === Long Take Profits ===
if inLong
    if not long_tp1Hit and maBlue
        strategy.close('Long', qty_percent = takeProfit1Percent)
        long_tp1Hit := true
        long_tp1Hit
    if not long_tp2Hit and oscCrossDown
        strategy.close('Long', qty_percent = takeProfit2Percent)
        long_tp2Hit := true
        long_tp2Hit
    if trendWeakLong
        strategy.close('Long')
        inLong := false
        inLong

// === Short Take Profits ===
if inShort
    if not short_tp1Hit and maBlue
        strategy.close('Short', qty_percent = takeProfit1Percent)
        short_tp1Hit := true
        short_tp1Hit
    if not short_tp2Hit and oscCrossUp
        strategy.close('Short', qty_percent = takeProfit2Percent)
        short_tp2Hit := true
        short_tp2Hit
    if trendWeakShort
        strategy.close('Short')
        inShort := false
        inShort