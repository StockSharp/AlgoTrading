// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © tradedots

//@version=5
strategy("Multi Timeframe RSI Buy Sell Strategy [TradeDots]", overlay=false, initial_capital = 10000, commission_type = strategy.commission.percent, commission_value = 0.01, default_qty_type = strategy.percent_of_equity, default_qty_value = 60)

input_rsi1_enable = input.bool(true, "", group = "RSI 1 Settings", inline = "RSI1")
input_rsi2_enable = input.bool(true, "", group = "RSI 2 Settings", inline = "RSI2")
input_rsi3_enable = input.bool(true, "", group = "RSI 3 Settings", inline = "RSI3")

input_rsi1_color = input.color(defval = #caf0f8, title = "", group = "RSI 1 Settings", inline = "RSI1")
input_rsi2_color = input.color(defval = #00b4d8, title = "", group = "RSI 2 Settings", inline = "RSI2")
input_rsi3_color = input.color(defval = #0077b6, title = "", group = "RSI 3 Settings", inline = "RSI3")

input_rsi1_length = input.int(defval = 14, title = "RSI 1 Length", group = "RSI 1 Settings")
input_rsi2_length = input.int(defval = 14, title = "RSI 2 Length", group = "RSI 2 Settings")
input_rsi3_length = input.int(defval = 14, title = "RSI 3 Length", group = "RSI 3 Settings")

input_rsi1_source = input(close, "Source 1", group = "RSI 1 Settings")
input_rsi2_source = input(close, "Source 2", group = "RSI 2 Settings")
input_rsi3_source = input(close, "Source 3", group = "RSI 3 Settings")

input_rsi1_tf = input.timeframe("5", group = "RSI 1 Settings")
input_rsi2_tf = input.timeframe("15", group = "RSI 2 Settings")
input_rsi3_tf = input.timeframe("30", group = "RSI 3 Settings")

RSI1 = request.security(syminfo.tickerid, input_rsi1_tf, ta.rsi(input_rsi1_source, input_rsi1_length))
RSI2 = request.security(syminfo.tickerid, input_rsi2_tf, ta.rsi(input_rsi2_source, input_rsi2_length))
RSI3 = request.security(syminfo.tickerid, input_rsi3_tf, ta.rsi(input_rsi3_source, input_rsi3_length))

// rsi movign average
ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

maTypeInput = input.string("SMA", title="MA Type", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="MA Settings", display = display.data_window)
maLengthInput = input.int(14, title="MA Length", group="MA Settings", display = display.data_window)

// strategy variable
input_enable_backtest = input.bool(true, "Enable backtest", group =  "Strategy Settings")
input_sell_threshold = input.float(70, "Sell Threshold", group = "Strategy Settings")
input_buy_threshold = input.float(30, "Buy Threshold", group = "Strategy Settings")
input_cool_down = input.int(defval = 5, title = "Signal Cool Down Period", minval = 1, step = 1, group = "Strategy Settings")

RSI1_plot = plot(input_rsi1_enable ? RSI1 : na, color = #caf0f8, title = "RSI 1")
RSI2_plot = plot(input_rsi2_enable ? RSI2 : na, color = #00b4d8, title = "RSI 2")
RSI3_plot = plot(input_rsi3_enable ? RSI3 : na, color = #0077b6, title = "RSI 3")

var int buy_cool_down_counter = input_cool_down
var int sell_cool_down_counter = input_cool_down
float sum = 0
int n = 0

// calulating rsi average
if input_rsi1_enable == true
    sum := sum + RSI1
    n := n + 1

if input_rsi2_enable == true
    sum := sum + RSI2
    n := n + 1

if input_rsi3_enable == true
    sum := sum + RSI3
    n := n + 1

rsiMA = ma(sum/n, maLengthInput, maTypeInput)

// plotting
line_opacity = rsiMA > 0 and rsiMA > rsiMA[1] or rsiMA < 0 and rsiMA < rsiMA[1] ? 20 : 60
plot(rsiMA, "RSI-based MA", rsiMA > 50 ? color.new(#9cff87, line_opacity) : color.new(#f9396a, line_opacity), linewidth = 2)
plot(input_sell_threshold, "Sell Threshold", color = color.from_gradient(rsiMA, 50, input_sell_threshold, color.new(color.gray, 60), color.new(#f9396a, 40)), linewidth = 2)
plot(input_buy_threshold, "Buy Threshold", color = color.from_gradient(rsiMA, input_buy_threshold, 50, color.new(#9cff87, 40), color.new(color.gray, 60)), linewidth = 2)
middleline = plot(50, title = "Middle Line", style = plot.style_cross, color = color.gray)

fill(RSI1_plot, middleline, 100, input_sell_threshold, top_color = color.new(#9cff87, 0), bottom_color = color.new(#9cff87, 100),  title = "Overbought Gradient Fill 1")
fill(RSI1_plot, middleline, input_buy_threshold,  0,  top_color = color.new(#f9396a, 100), bottom_color = color.new(#f9396a, 0),      title = "Oversold Gradient Fill 1")
fill(RSI2_plot, middleline, 100, input_sell_threshold, top_color = color.new(#9cff87, 0), bottom_color = color.new(#9cff87, 100),  title = "Overbought Gradient Fill 2")
fill(RSI2_plot, middleline, input_buy_threshold,  0,  top_color = color.new(#f9396a, 100), bottom_color = color.new(#f9396a, 0),      title = "Oversold Gradient Fill 2")
fill(RSI3_plot, middleline, 100, input_sell_threshold, top_color = color.new(#9cff87, 0), bottom_color = color.new(#9cff87, 100),  title = "Overbought Gradient Fill 3")
fill(RSI3_plot, middleline, input_buy_threshold,  0,  top_color = color.new(#f9396a, 100), bottom_color = color.new(#f9396a, 0),      title = "Oversold Gradient Fill 3")

// strategy
if ((input_rsi1_enable ? RSI1 < input_buy_threshold : true) and (input_rsi2_enable ? RSI2 < input_buy_threshold : true) and (input_rsi3_enable ? RSI3 < input_buy_threshold : true)) and input_enable_backtest
    if buy_cool_down_counter >= input_cool_down
        strategy.close("Short")
        strategy.entry("Long", strategy.long)
        label.new(bar_index, RSI1, text = "Buy", style = label.style_label_up, color = #9cff87)
        sell_cool_down_counter := input_cool_down
        buy_cool_down_counter := 0
    else
        buy_cool_down_counter := buy_cool_down_counter + 1

if ((input_rsi1_enable ? RSI1 > input_sell_threshold : true) and (input_rsi2_enable ? RSI2 > input_sell_threshold : true) and (input_rsi3_enable ? RSI3 > input_sell_threshold : true)) and input_enable_backtest
    if sell_cool_down_counter >= input_cool_down
        strategy.close("Long")
        strategy.entry("Short", strategy.short)
        label.new(bar_index, RSI1, text = "Sell", style = label.style_label_down, color = #f9396a, textcolor = #ffffff)
        sell_cool_down_counter := 0
        buy_cool_down_counter := input_cool_down
    else
        sell_cool_down_counter := sell_cool_down_counter + 1